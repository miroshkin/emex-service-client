//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmExServiceClient.ContragentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfInventory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDocumentCorrectionCard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultstring))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryCommon))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultTupleOfbooleanstringlonglong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDenyType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDeleteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDenyStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfChangeAnswerLogLine))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultDetailDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfMake))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSuppliersReturnsAuthority))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultboolean))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfConsumer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerHistoryItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfTransportCompany))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultSupplier))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfContragent))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSupplierBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSupplierDocumentReturnCard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccountNew))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDetailSubstituteDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultlong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccount2))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerDiscountManual))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultActionLock))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultNullableOfdateTime))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDecommission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDecommissionDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard2))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard3))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDiadocDocumentStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDocumentReturnCard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfAccountDetailViewItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerSearchResultItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomer.CustomerGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfContragentDocumentSetting))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerDelivery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerScheduleAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultDeliveryRegionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerScheduleAttribute))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfActRecycling))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultActRecycling))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfRegion))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerDiscountHistoryItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerBalance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerIdentity))]
    public partial class OperationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRepeatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRepeat {
            get {
                return this.IsRepeatField;
            }
            set {
                if ((this.IsRepeatField.Equals(value) != true)) {
                    this.IsRepeatField = value;
                    this.RaisePropertyChanged("IsRepeat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfInventory", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfInventory : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Inventory[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Inventory[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDocumentCorrectionCard", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDocumentCorrectionCard : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DocumentCorrectionCard[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DocumentCorrectionCard[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfUser", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfUser : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.User[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.User[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfGroup", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfGroup : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Group[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Group[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultstring", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultstring : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfSalesHistoryCommon", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfSalesHistoryCommon : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.SalesHistoryCommon[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.SalesHistoryCommon[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfSalesHistoryDetail", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfSalesHistoryDetail : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.SalesHistoryDetail[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.SalesHistoryDetail[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultTupleOfbooleanstringlonglong", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultTupleOfbooleanstringlonglong : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Tuple<bool, string, long, long> OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Tuple<bool, string, long, long> OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDenyType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDenyType : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DenyType[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DenyType[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDeleteType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDeleteType : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DeleteType[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DeleteType[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDenyStatus", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDenyStatus : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DenyStatus[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DenyStatus[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfChangeAnswerLogLine", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfChangeAnswerLogLine : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.ChangeAnswerLogLine[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.ChangeAnswerLogLine[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultDetailDto", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultDetailDto : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DetailDto OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DetailDto OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfMake", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfMake : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Make[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Make[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfSuppliersReturnsAuthority", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfSuppliersReturnsAuthority : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.SuppliersReturnsAuthority[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.SuppliersReturnsAuthority[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultSuppliersReturnsAuthority", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultSuppliersReturnsAuthority : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.SuppliersReturnsAuthority OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.SuppliersReturnsAuthority OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultint", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultint : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((this.OperationObjectField.Equals(value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultboolean", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultboolean : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((this.OperationObjectField.Equals(value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfConsumer", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfConsumer : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Consumer[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Consumer[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfCustomerHistoryItem", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfCustomerHistoryItem : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerHistoryItem[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerHistoryItem[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfTransportCompany", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfTransportCompany : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.TransportCompany[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.TransportCompany[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultSupplier", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultSupplier : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Supplier OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Supplier OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfContragent", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfContragent : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Contragent[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Contragent[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfSupplierBase", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfSupplierBase : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.SupplierBase[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.SupplierBase[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfSupplierDocumentReturnCard", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfSupplierDocumentReturnCard : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.SupplierDocumentReturnCard[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.SupplierDocumentReturnCard[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfLocalStorageAccountNew", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfLocalStorageAccountNew : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.LocalStorageAccountNew[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.LocalStorageAccountNew[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDetailSubstituteDto", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDetailSubstituteDto : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DetailSubstituteDto[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DetailSubstituteDto[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultlong", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultlong : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((this.OperationObjectField.Equals(value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfLocalStorageAccount2", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfLocalStorageAccount2 : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.LocalStorageAccount2[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.LocalStorageAccount2[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultCustomerDiscountManual", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultCustomerDiscountManual : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerDiscountManual OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerDiscountManual OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultActionLock", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultActionLock : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.ActionLock OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.ActionLock OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultNullableOfdateTime", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultNullableOfdateTime : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((this.OperationObjectField.Equals(value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDecommission", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDecommission : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Decommission[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Decommission[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDecommissionDetail", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDecommissionDetail : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DecommissionDetail[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DecommissionDetail[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfAccountCard", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfAccountCard : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.AccountCard[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.AccountCard[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfAccountCard2", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfAccountCard2 : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.AccountCard2[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.AccountCard2[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfAccountCard3", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfAccountCard3 : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.AccountCard3[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.AccountCard3[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDiadocDocumentStatus", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDiadocDocumentStatus : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DiadocDocumentStatus[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DiadocDocumentStatus[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfDocumentReturnCard", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfDocumentReturnCard : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DocumentReturnCard[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DocumentReturnCard[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfAccountDetailViewItem", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfAccountDetailViewItem : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.AccountDetailViewItem[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.AccountDetailViewItem[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfCustomer", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfCustomer : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfCustomer.CustomerGroup", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
        [System.SerializableAttribute()]
        public partial class CustomerGroup : EmExServiceClient.ContragentService.OperationResult {
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private EmExServiceClient.ContragentService.Customer.CustomerGroup[] OperationObjectField;
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public EmExServiceClient.ContragentService.Customer.CustomerGroup[] OperationObject {
                get {
                    return this.OperationObjectField;
                }
                set {
                    if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                        this.OperationObjectField = value;
                        this.RaisePropertyChanged("OperationObject");
                    }
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfCustomerSearchResultItem", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfCustomerSearchResultItem : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerSearchResultItem[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerSearchResultItem[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultCustomer", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultCustomer : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfCustomerIdentity", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfCustomerIdentity : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerIdentity[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerIdentity[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfContragentDocumentSetting", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfContragentDocumentSetting : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.ContragentDocumentSetting[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.ContragentDocumentSetting[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultCustomerDelivery", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultCustomerDelivery : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerDelivery OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerDelivery OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfContragentIdentity", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfContragentIdentity : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.ContragentIdentity[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.ContragentIdentity[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfCustomerScheduleAttribute", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfCustomerScheduleAttribute : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerScheduleAttribute[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerScheduleAttribute[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultDeliveryRegionType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultDeliveryRegionType : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DeliveryRegionType OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DeliveryRegionType OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultCustomerScheduleAttribute", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultCustomerScheduleAttribute : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerScheduleAttribute OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerScheduleAttribute OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfActRecycling", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfActRecycling : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.ActRecycling[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.ActRecycling[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultActRecycling", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultActRecycling : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.ActRecycling OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.ActRecycling OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfLocation", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfLocation : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Location[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Location[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfRegion", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfRegion : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Region[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Region[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultArrayOfCustomerDiscountHistoryItem", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultArrayOfCustomerDiscountHistoryItem : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerDiscountHistoryItem[] OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerDiscountHistoryItem[] OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultCustomerBalance", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultCustomerBalance : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerBalance OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerBalance OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultCustomerIdentity", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    public partial class OperationResultCustomerIdentity : EmExServiceClient.ContragentService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerIdentity OperationObjectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerIdentity OperationObject {
            get {
                return this.OperationObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationObjectField, value) != true)) {
                    this.OperationObjectField = value;
                    this.RaisePropertyChanged("OperationObject");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Inventory", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class Inventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventoriedDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RecycledDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecycledDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SummaWithoutNDSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InventoriedDocumentId {
            get {
                return this.InventoriedDocumentIdField;
            }
            set {
                if ((this.InventoriedDocumentIdField.Equals(value) != true)) {
                    this.InventoriedDocumentIdField = value;
                    this.RaisePropertyChanged("InventoriedDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RecycledDate {
            get {
                return this.RecycledDateField;
            }
            set {
                if ((this.RecycledDateField.Equals(value) != true)) {
                    this.RecycledDateField = value;
                    this.RaisePropertyChanged("RecycledDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecycledDocumentId {
            get {
                return this.RecycledDocumentIdField;
            }
            set {
                if ((this.RecycledDocumentIdField.Equals(value) != true)) {
                    this.RecycledDocumentIdField = value;
                    this.RaisePropertyChanged("RecycledDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SummaWithoutNDS {
            get {
                return this.SummaWithoutNDSField;
            }
            set {
                if ((this.SummaWithoutNDSField.Equals(value) != true)) {
                    this.SummaWithoutNDSField = value;
                    this.RaisePropertyChanged("SummaWithoutNDS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentCorrectionCard", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class DocumentCorrectionCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CorrectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CorrectionInvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRowHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumWithTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ViewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CorrectionDate {
            get {
                return this.CorrectionDateField;
            }
            set {
                if ((this.CorrectionDateField.Equals(value) != true)) {
                    this.CorrectionDateField = value;
                    this.RaisePropertyChanged("CorrectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CorrectionInvoiceId {
            get {
                return this.CorrectionInvoiceIdField;
            }
            set {
                if ((this.CorrectionInvoiceIdField.Equals(value) != true)) {
                    this.CorrectionInvoiceIdField = value;
                    this.RaisePropertyChanged("CorrectionInvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLogo {
            get {
                return this.CustomerLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLogoField, value) != true)) {
                    this.CustomerLogoField = value;
                    this.RaisePropertyChanged("CustomerLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRowHidden {
            get {
                return this.IsRowHiddenField;
            }
            set {
                if ((this.IsRowHiddenField.Equals(value) != true)) {
                    this.IsRowHiddenField = value;
                    this.RaisePropertyChanged("IsRowHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Print {
            get {
                return this.PrintField;
            }
            set {
                if ((this.PrintField.Equals(value) != true)) {
                    this.PrintField = value;
                    this.RaisePropertyChanged("Print");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Send {
            get {
                return this.SendField;
            }
            set {
                if ((this.SendField.Equals(value) != true)) {
                    this.SendField = value;
                    this.RaisePropertyChanged("Send");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SumWithTax {
            get {
                return this.SumWithTaxField;
            }
            set {
                if ((this.SumWithTaxField.Equals(value) != true)) {
                    this.SumWithTaxField = value;
                    this.RaisePropertyChanged("SumWithTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool View {
            get {
                return this.ViewField;
            }
            set {
                if ((this.ViewField.Equals(value) != true)) {
                    this.ViewField = value;
                    this.RaisePropertyChanged("View");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long ContragentIdField;
        
        private long GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRowHiddenField;
        
        private string LogoField;
        
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailsField;
        
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPhonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ContragentId {
            get {
                return this.ContragentIdField;
            }
            set {
                if ((this.ContragentIdField.Equals(value) != true)) {
                    this.ContragentIdField = value;
                    this.RaisePropertyChanged("ContragentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRowHidden {
            get {
                return this.IsRowHiddenField;
            }
            set {
                if ((this.IsRowHiddenField.Equals(value) != true)) {
                    this.IsRowHiddenField = value;
                    this.RaisePropertyChanged("IsRowHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmails {
            get {
                return this.UserEmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailsField, value) != true)) {
                    this.UserEmailsField = value;
                    this.RaisePropertyChanged("UserEmails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPhones {
            get {
                return this.UserPhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhonesField, value) != true)) {
                    this.UserPhonesField = value;
                    this.RaisePropertyChanged("UserPhones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPosition {
            get {
                return this.UserPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPositionField, value) != true)) {
                    this.UserPositionField = value;
                    this.RaisePropertyChanged("UserPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesHistoryCommon", Namespace="http://schemas.datacontract.org/2004/07/Emex.DetailsHistory")]
    [System.SerializableAttribute()]
    public partial class SalesHistoryCommon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnswerQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomersGroupsLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailMakeAndNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DetailPriceRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRowHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubstDetailMakeAndNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubstDetailNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubstMakeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnswerQuantity {
            get {
                return this.AnswerQuantityField;
            }
            set {
                if ((this.AnswerQuantityField.Equals(value) != true)) {
                    this.AnswerQuantityField = value;
                    this.RaisePropertyChanged("AnswerQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustOrder {
            get {
                return this.CustOrderField;
            }
            set {
                if ((this.CustOrderField.Equals(value) != true)) {
                    this.CustOrderField = value;
                    this.RaisePropertyChanged("CustOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLogo {
            get {
                return this.CustomerLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLogoField, value) != true)) {
                    this.CustomerLogoField = value;
                    this.RaisePropertyChanged("CustomerLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomersGroupsLogo {
            get {
                return this.CustomersGroupsLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersGroupsLogoField, value) != true)) {
                    this.CustomersGroupsLogoField = value;
                    this.RaisePropertyChanged("CustomersGroupsLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationLogo {
            get {
                return this.DestinationLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationLogoField, value) != true)) {
                    this.DestinationLogoField = value;
                    this.RaisePropertyChanged("DestinationLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailMakeAndNum {
            get {
                return this.DetailMakeAndNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailMakeAndNumField, value) != true)) {
                    this.DetailMakeAndNumField = value;
                    this.RaisePropertyChanged("DetailMakeAndNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailName {
            get {
                return this.DetailNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameField, value) != true)) {
                    this.DetailNameField = value;
                    this.RaisePropertyChanged("DetailName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNameCust {
            get {
                return this.DetailNameCustField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameCustField, value) != true)) {
                    this.DetailNameCustField = value;
                    this.RaisePropertyChanged("DetailNameCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNum {
            get {
                return this.DetailNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNumField, value) != true)) {
                    this.DetailNumField = value;
                    this.RaisePropertyChanged("DetailNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float DetailPriceRUR {
            get {
                return this.DetailPriceRURField;
            }
            set {
                if ((this.DetailPriceRURField.Equals(value) != true)) {
                    this.DetailPriceRURField = value;
                    this.RaisePropertyChanged("DetailPriceRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRowHidden {
            get {
                return this.IsRowHiddenField;
            }
            set {
                if ((this.IsRowHiddenField.Equals(value) != true)) {
                    this.IsRowHiddenField = value;
                    this.RaisePropertyChanged("IsRowHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeName {
            get {
                return this.MakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeNameField, value) != true)) {
                    this.MakeNameField = value;
                    this.RaisePropertyChanged("MakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderDetailId {
            get {
                return this.OrderDetailIdField;
            }
            set {
                if ((this.OrderDetailIdField.Equals(value) != true)) {
                    this.OrderDetailIdField = value;
                    this.RaisePropertyChanged("OrderDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderQuantity {
            get {
                return this.OrderQuantityField;
            }
            set {
                if ((this.OrderQuantityField.Equals(value) != true)) {
                    this.OrderQuantityField = value;
                    this.RaisePropertyChanged("OrderQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceLogo {
            get {
                return this.PriceLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceLogoField, value) != true)) {
                    this.PriceLogoField = value;
                    this.RaisePropertyChanged("PriceLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reference {
            get {
                return this.ReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceField, value) != true)) {
                    this.ReferenceField = value;
                    this.RaisePropertyChanged("Reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstDetailMakeAndNum {
            get {
                return this.SubstDetailMakeAndNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SubstDetailMakeAndNumField, value) != true)) {
                    this.SubstDetailMakeAndNumField = value;
                    this.RaisePropertyChanged("SubstDetailMakeAndNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstDetailNum {
            get {
                return this.SubstDetailNumField;
            }
            set {
                if ((object.ReferenceEquals(this.SubstDetailNumField, value) != true)) {
                    this.SubstDetailNumField = value;
                    this.RaisePropertyChanged("SubstDetailNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstMakeLogo {
            get {
                return this.SubstMakeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.SubstMakeLogoField, value) != true)) {
                    this.SubstMakeLogoField = value;
                    this.RaisePropertyChanged("SubstMakeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierLogo {
            get {
                return this.SupplierLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierLogoField, value) != true)) {
                    this.SupplierLogoField = value;
                    this.RaisePropertyChanged("SupplierLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesHistoryDetail", Namespace="http://schemas.datacontract.org/2004/07/Emex.DetailsHistory")]
    [System.SerializableAttribute()]
    public partial class SalesHistoryDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BuyRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateReadyForAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetSubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DetailPriceBuyRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DetailPriceRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DocDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long GlobalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoicesDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderDetailSubIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PackerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReceiptsDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SaleRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BuyRUR {
            get {
                return this.BuyRURField;
            }
            set {
                if ((this.BuyRURField.Equals(value) != true)) {
                    this.BuyRURField = value;
                    this.RaisePropertyChanged("BuyRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cost {
            get {
                return this.CostField;
            }
            set {
                if ((object.ReferenceEquals(this.CostField, value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateReadyForAccount {
            get {
                return this.DateReadyForAccountField;
            }
            set {
                if ((this.DateReadyForAccountField.Equals(value) != true)) {
                    this.DateReadyForAccountField = value;
                    this.RaisePropertyChanged("DateReadyForAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetSub {
            get {
                return this.DetSubField;
            }
            set {
                if ((object.ReferenceEquals(this.DetSubField, value) != true)) {
                    this.DetSubField = value;
                    this.RaisePropertyChanged("DetSub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNum {
            get {
                return this.DetailNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNumField, value) != true)) {
                    this.DetailNumField = value;
                    this.RaisePropertyChanged("DetailNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float DetailPriceBuyRUR {
            get {
                return this.DetailPriceBuyRURField;
            }
            set {
                if ((this.DetailPriceBuyRURField.Equals(value) != true)) {
                    this.DetailPriceBuyRURField = value;
                    this.RaisePropertyChanged("DetailPriceBuyRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float DetailPriceRUR {
            get {
                return this.DetailPriceRURField;
            }
            set {
                if ((this.DetailPriceRURField.Equals(value) != true)) {
                    this.DetailPriceRURField = value;
                    this.RaisePropertyChanged("DetailPriceRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DocDate {
            get {
                return this.DocDateField;
            }
            set {
                if ((this.DocDateField.Equals(value) != true)) {
                    this.DocDateField = value;
                    this.RaisePropertyChanged("DocDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocLogo {
            get {
                return this.DocLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.DocLogoField, value) != true)) {
                    this.DocLogoField = value;
                    this.RaisePropertyChanged("DocLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocNumber {
            get {
                return this.DocNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocNumberField, value) != true)) {
                    this.DocNumberField = value;
                    this.RaisePropertyChanged("DocNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocType {
            get {
                return this.DocTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTypeField, value) != true)) {
                    this.DocTypeField = value;
                    this.RaisePropertyChanged("DocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GTD {
            get {
                return this.GTDField;
            }
            set {
                if ((object.ReferenceEquals(this.GTDField, value) != true)) {
                    this.GTDField = value;
                    this.RaisePropertyChanged("GTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long GlobalId {
            get {
                return this.GlobalIdField;
            }
            set {
                if ((this.GlobalIdField.Equals(value) != true)) {
                    this.GlobalIdField = value;
                    this.RaisePropertyChanged("GlobalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoicesDetailId {
            get {
                return this.InvoicesDetailIdField;
            }
            set {
                if ((this.InvoicesDetailIdField.Equals(value) != true)) {
                    this.InvoicesDetailIdField = value;
                    this.RaisePropertyChanged("InvoicesDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeName {
            get {
                return this.MakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeNameField, value) != true)) {
                    this.MakeNameField = value;
                    this.RaisePropertyChanged("MakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderDetailId {
            get {
                return this.OrderDetailIdField;
            }
            set {
                if ((this.OrderDetailIdField.Equals(value) != true)) {
                    this.OrderDetailIdField = value;
                    this.RaisePropertyChanged("OrderDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderDetailSubId {
            get {
                return this.OrderDetailSubIdField;
            }
            set {
                if ((this.OrderDetailSubIdField.Equals(value) != true)) {
                    this.OrderDetailSubIdField = value;
                    this.RaisePropertyChanged("OrderDetailSubId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PackerName {
            get {
                return this.PackerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PackerNameField, value) != true)) {
                    this.PackerNameField = value;
                    this.RaisePropertyChanged("PackerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Portion {
            get {
                return this.PortionField;
            }
            set {
                if ((this.PortionField.Equals(value) != true)) {
                    this.PortionField = value;
                    this.RaisePropertyChanged("Portion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReceiptsDetailId {
            get {
                return this.ReceiptsDetailIdField;
            }
            set {
                if ((this.ReceiptsDetailIdField.Equals(value) != true)) {
                    this.ReceiptsDetailIdField = value;
                    this.RaisePropertyChanged("ReceiptsDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverName {
            get {
                return this.ReceiverNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverNameField, value) != true)) {
                    this.ReceiverNameField = value;
                    this.RaisePropertyChanged("ReceiverName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SaleRUR {
            get {
                return this.SaleRURField;
            }
            set {
                if ((this.SaleRURField.Equals(value) != true)) {
                    this.SaleRURField = value;
                    this.RaisePropertyChanged("SaleRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackerName {
            get {
                return this.StackerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StackerNameField, value) != true)) {
                    this.StackerNameField = value;
                    this.RaisePropertyChanged("StackerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierLogo {
            get {
                return this.SupplierLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierLogoField, value) != true)) {
                    this.SupplierLogoField = value;
                    this.RaisePropertyChanged("SupplierLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DenyType", Namespace="http://schemas.datacontract.org/2004/07/Emex.DetailsHistory")]
    [System.SerializableAttribute()]
    public partial class DenyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DenyDetailsTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DenyDetailsTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DenyDetailsTypeId {
            get {
                return this.DenyDetailsTypeIdField;
            }
            set {
                if ((this.DenyDetailsTypeIdField.Equals(value) != true)) {
                    this.DenyDetailsTypeIdField = value;
                    this.RaisePropertyChanged("DenyDetailsTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenyDetailsTypeName {
            get {
                return this.DenyDetailsTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DenyDetailsTypeNameField, value) != true)) {
                    this.DenyDetailsTypeNameField = value;
                    this.RaisePropertyChanged("DenyDetailsTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteType", Namespace="http://schemas.datacontract.org/2004/07/Emex.DetailsHistory")]
    [System.SerializableAttribute()]
    public partial class DeleteType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeleteTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeleteTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeleteTypeId {
            get {
                return this.DeleteTypeIdField;
            }
            set {
                if ((this.DeleteTypeIdField.Equals(value) != true)) {
                    this.DeleteTypeIdField = value;
                    this.RaisePropertyChanged("DeleteTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeleteTypeName {
            get {
                return this.DeleteTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeleteTypeNameField, value) != true)) {
                    this.DeleteTypeNameField = value;
                    this.RaisePropertyChanged("DeleteTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DenyStatus", Namespace="http://schemas.datacontract.org/2004/07/Emex.DetailsHistory")]
    [System.SerializableAttribute()]
    public partial class DenyStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DenyDetailsStatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DenyDetailsStatusNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DenyDetailsStatusId {
            get {
                return this.DenyDetailsStatusIdField;
            }
            set {
                if ((this.DenyDetailsStatusIdField.Equals(value) != true)) {
                    this.DenyDetailsStatusIdField = value;
                    this.RaisePropertyChanged("DenyDetailsStatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DenyDetailsStatusName {
            get {
                return this.DenyDetailsStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DenyDetailsStatusNameField, value) != true)) {
                    this.DenyDetailsStatusNameField = value;
                    this.RaisePropertyChanged("DenyDetailsStatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeAnswerLogLine", Namespace="http://schemas.datacontract.org/2004/07/Emex.DetailsHistory")]
    [System.SerializableAttribute()]
    public partial class ChangeAnswerLogLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdd {
            get {
                return this.DateAddField;
            }
            set {
                if ((this.DateAddField.Equals(value) != true)) {
                    this.DateAddField = value;
                    this.RaisePropertyChanged("DateAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLogo {
            get {
                return this.UserLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLogoField, value) != true)) {
                    this.UserLogoField = value;
                    this.RaisePropertyChanged("UserLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Val {
            get {
                return this.ValField;
            }
            set {
                if ((object.ReferenceEquals(this.ValField, value) != true)) {
                    this.ValField = value;
                    this.RaisePropertyChanged("Val");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailDto", Namespace="http://schemas.datacontract.org/2004/07/Emex.Stock")]
    [System.SerializableAttribute()]
    public partial class DetailDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameCustSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameRusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetailWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MakeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailDesc {
            get {
                return this.DetailDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailDescField, value) != true)) {
                    this.DetailDescField = value;
                    this.RaisePropertyChanged("DetailDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DetailId {
            get {
                return this.DetailIdField;
            }
            set {
                if ((this.DetailIdField.Equals(value) != true)) {
                    this.DetailIdField = value;
                    this.RaisePropertyChanged("DetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailName {
            get {
                return this.DetailNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameField, value) != true)) {
                    this.DetailNameField = value;
                    this.RaisePropertyChanged("DetailName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNameCust {
            get {
                return this.DetailNameCustField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameCustField, value) != true)) {
                    this.DetailNameCustField = value;
                    this.RaisePropertyChanged("DetailNameCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNameCustS {
            get {
                return this.DetailNameCustSField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameCustSField, value) != true)) {
                    this.DetailNameCustSField = value;
                    this.RaisePropertyChanged("DetailNameCustS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNameRus {
            get {
                return this.DetailNameRusField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameRusField, value) != true)) {
                    this.DetailNameRusField = value;
                    this.RaisePropertyChanged("DetailNameRus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNum {
            get {
                return this.DetailNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNumField, value) != true)) {
                    this.DetailNumField = value;
                    this.RaisePropertyChanged("DetailNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetailWeight {
            get {
                return this.DetailWeightField;
            }
            set {
                if ((this.DetailWeightField.Equals(value) != true)) {
                    this.DetailWeightField = value;
                    this.RaisePropertyChanged("DetailWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MakeId {
            get {
                return this.MakeIdField;
            }
            set {
                if ((this.MakeIdField.Equals(value) != true)) {
                    this.MakeIdField = value;
                    this.RaisePropertyChanged("MakeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeLogo {
            get {
                return this.MakeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeLogoField, value) != true)) {
                    this.MakeLogoField = value;
                    this.RaisePropertyChanged("MakeLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Make", Namespace="http://schemas.datacontract.org/2004/07/Emex.Stock")]
    [System.SerializableAttribute()]
    public partial class Make : EmExServiceClient.ContragentService.NullableDataContract {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MakeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MakeId {
            get {
                return this.MakeIdField;
            }
            set {
                if ((this.MakeIdField.Equals(value) != true)) {
                    this.MakeIdField = value;
                    this.RaisePropertyChanged("MakeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeLogo {
            get {
                return this.MakeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeLogoField, value) != true)) {
                    this.MakeLogoField = value;
                    this.RaisePropertyChanged("MakeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeName {
            get {
                return this.MakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeNameField, value) != true)) {
                    this.MakeNameField = value;
                    this.RaisePropertyChanged("MakeName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NullableDataContract", Namespace="http://schemas.datacontract.org/2004/07/Emex.Communication")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Make))]
    public partial class NullableDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNullOrEmptyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasError {
            get {
                return this.HasErrorField;
            }
            set {
                if ((this.HasErrorField.Equals(value) != true)) {
                    this.HasErrorField = value;
                    this.RaisePropertyChanged("HasError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNullOrEmpty {
            get {
                return this.IsNullOrEmptyField;
            }
            set {
                if ((this.IsNullOrEmptyField.Equals(value) != true)) {
                    this.IsNullOrEmptyField = value;
                    this.RaisePropertyChanged("IsNullOrEmpty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SuppliersReturnsAuthority", Namespace="http://schemas.datacontract.org/2004/07/Emex.EmexMain.Supplier")]
    [System.SerializableAttribute()]
    public partial class SuppliersReturnsAuthority : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorityDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorityScanUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AuthorityStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AuthorityStateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AuthorityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuePlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte RevisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerGenitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerPostGenitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuppliersReturnsAuthoritiesIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorityData {
            get {
                return this.AuthorityDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorityDataField, value) != true)) {
                    this.AuthorityDataField = value;
                    this.RaisePropertyChanged("AuthorityData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorityScanUrl {
            get {
                return this.AuthorityScanUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorityScanUrlField, value) != true)) {
                    this.AuthorityScanUrlField = value;
                    this.RaisePropertyChanged("AuthorityScanUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AuthorityState {
            get {
                return this.AuthorityStateField;
            }
            set {
                if ((this.AuthorityStateField.Equals(value) != true)) {
                    this.AuthorityStateField = value;
                    this.RaisePropertyChanged("AuthorityState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AuthorityStateDate {
            get {
                return this.AuthorityStateDateField;
            }
            set {
                if ((this.AuthorityStateDateField.Equals(value) != true)) {
                    this.AuthorityStateDateField = value;
                    this.RaisePropertyChanged("AuthorityStateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AuthorityType {
            get {
                return this.AuthorityTypeField;
            }
            set {
                if ((this.AuthorityTypeField.Equals(value) != true)) {
                    this.AuthorityTypeField = value;
                    this.RaisePropertyChanged("AuthorityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Barcode {
            get {
                return this.BarcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BarcodeField, value) != true)) {
                    this.BarcodeField = value;
                    this.RaisePropertyChanged("Barcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuePlace {
            get {
                return this.IssuePlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuePlaceField, value) != true)) {
                    this.IssuePlaceField = value;
                    this.RaisePropertyChanged("IssuePlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Revision {
            get {
                return this.RevisionField;
            }
            set {
                if ((this.RevisionField.Equals(value) != true)) {
                    this.RevisionField = value;
                    this.RaisePropertyChanged("Revision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signer {
            get {
                return this.SignerField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerField, value) != true)) {
                    this.SignerField = value;
                    this.RaisePropertyChanged("Signer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignerDocument {
            get {
                return this.SignerDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerDocumentField, value) != true)) {
                    this.SignerDocumentField = value;
                    this.RaisePropertyChanged("SignerDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignerGenitive {
            get {
                return this.SignerGenitiveField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerGenitiveField, value) != true)) {
                    this.SignerGenitiveField = value;
                    this.RaisePropertyChanged("SignerGenitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignerPost {
            get {
                return this.SignerPostField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerPostField, value) != true)) {
                    this.SignerPostField = value;
                    this.RaisePropertyChanged("SignerPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignerPostGenitive {
            get {
                return this.SignerPostGenitiveField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerPostGenitiveField, value) != true)) {
                    this.SignerPostGenitiveField = value;
                    this.RaisePropertyChanged("SignerPostGenitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SuppliersReturnsAuthoritiesId {
            get {
                return this.SuppliersReturnsAuthoritiesIdField;
            }
            set {
                if ((this.SuppliersReturnsAuthoritiesIdField.Equals(value) != true)) {
                    this.SuppliersReturnsAuthoritiesIdField = value;
                    this.RaisePropertyChanged("SuppliersReturnsAuthoritiesId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Consumer", Namespace="http://schemas.datacontract.org/2004/07/Emex.Online")]
    [System.SerializableAttribute()]
    public partial class Consumer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerHistoryItem", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class CustomerHistoryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.User ChangeUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OldValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppName {
            get {
                return this.AppNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppNameField, value) != true)) {
                    this.AppNameField = value;
                    this.RaisePropertyChanged("AppName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeTypeName {
            get {
                return this.ChangeTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeTypeNameField, value) != true)) {
                    this.ChangeTypeNameField = value;
                    this.RaisePropertyChanged("ChangeTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.User ChangeUser {
            get {
                return this.ChangeUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeUserField, value) != true)) {
                    this.ChangeUserField = value;
                    this.RaisePropertyChanged("ChangeUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewValue {
            get {
                return this.NewValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NewValueField, value) != true)) {
                    this.NewValueField = value;
                    this.RaisePropertyChanged("NewValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldValue {
            get {
                return this.OldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.OldValueField, value) != true)) {
                    this.OldValueField = value;
                    this.RaisePropertyChanged("OldValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransportCompany", Namespace="http://schemas.datacontract.org/2004/07/Emex.Delivery")]
    [System.SerializableAttribute()]
    public partial class TransportCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDocumentsInBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlyOneRouteShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRouteShippingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsShowOnPPCField;
        
        private string LogoField;
        
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDocumentsInBox {
            get {
                return this.IsDocumentsInBoxField;
            }
            set {
                if ((this.IsDocumentsInBoxField.Equals(value) != true)) {
                    this.IsDocumentsInBoxField = value;
                    this.RaisePropertyChanged("IsDocumentsInBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnlyOneRouteShipping {
            get {
                return this.IsOnlyOneRouteShippingField;
            }
            set {
                if ((this.IsOnlyOneRouteShippingField.Equals(value) != true)) {
                    this.IsOnlyOneRouteShippingField = value;
                    this.RaisePropertyChanged("IsOnlyOneRouteShipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRouteShipping {
            get {
                return this.IsRouteShippingField;
            }
            set {
                if ((this.IsRouteShippingField.Equals(value) != true)) {
                    this.IsRouteShippingField = value;
                    this.RaisePropertyChanged("IsRouteShipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsShowOnPPC {
            get {
                return this.IsShowOnPPCField;
            }
            set {
                if ((this.IsShowOnPPCField.Equals(value) != true)) {
                    this.IsShowOnPPCField = value;
                    this.RaisePropertyChanged("IsShowOnPPC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class Supplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime DateCreateSupplierField;
        
        private string LogoField;
        
        private string PasswordField;
        
        private string PasswordFTPField;
        
        private string SupplierAddressField;
        
        private string SupplierDescriptionField;
        
        private long SupplierForUserField;
        
        private string SupplierINNField;
        
        private long SupplierIdField;
        
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.User UserForSupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Supplier.SupplierGroup _supplierGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Supplier.SupplierStatus _supplierStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long buhContragentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime DateCreateSupplier {
            get {
                return this.DateCreateSupplierField;
            }
            set {
                if ((this.DateCreateSupplierField.Equals(value) != true)) {
                    this.DateCreateSupplierField = value;
                    this.RaisePropertyChanged("DateCreateSupplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PasswordFTP {
            get {
                return this.PasswordFTPField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordFTPField, value) != true)) {
                    this.PasswordFTPField = value;
                    this.RaisePropertyChanged("PasswordFTP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SupplierAddress {
            get {
                return this.SupplierAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierAddressField, value) != true)) {
                    this.SupplierAddressField = value;
                    this.RaisePropertyChanged("SupplierAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SupplierDescription {
            get {
                return this.SupplierDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierDescriptionField, value) != true)) {
                    this.SupplierDescriptionField = value;
                    this.RaisePropertyChanged("SupplierDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long SupplierForUser {
            get {
                return this.SupplierForUserField;
            }
            set {
                if ((this.SupplierForUserField.Equals(value) != true)) {
                    this.SupplierForUserField = value;
                    this.RaisePropertyChanged("SupplierForUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SupplierINN {
            get {
                return this.SupplierINNField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierINNField, value) != true)) {
                    this.SupplierINNField = value;
                    this.RaisePropertyChanged("SupplierINN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.User UserForSupplier {
            get {
                return this.UserForSupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.UserForSupplierField, value) != true)) {
                    this.UserForSupplierField = value;
                    this.RaisePropertyChanged("UserForSupplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Supplier.SupplierGroup _supplierGroup {
            get {
                return this._supplierGroupField;
            }
            set {
                if ((object.ReferenceEquals(this._supplierGroupField, value) != true)) {
                    this._supplierGroupField = value;
                    this.RaisePropertyChanged("_supplierGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Supplier.SupplierStatus _supplierStatus {
            get {
                return this._supplierStatusField;
            }
            set {
                if ((object.ReferenceEquals(this._supplierStatusField, value) != true)) {
                    this._supplierStatusField = value;
                    this.RaisePropertyChanged("_supplierStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long buhContragentId {
            get {
                return this.buhContragentIdField;
            }
            set {
                if ((this.buhContragentIdField.Equals(value) != true)) {
                    this.buhContragentIdField = value;
                    this.RaisePropertyChanged("buhContragentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Supplier.SupplierGroup", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class SupplierGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Supplier.SupplierStatus", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class SupplierStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitAllowTakeWithoutInvoiceField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitAutoDistributionField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitBalanceMailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitBallanceInSupplierCurrencyField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitBarCodeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitConterminousDocumentsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitInvoiceAutoCloseField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitNeedWeightOnReceiptField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitNoWeightField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitOrderPriceField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitPriceMutationField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitRequiredCoordinationField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitUseProgramUploadInvoiceField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitUseProgramUploadPricelistsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool bitWhiteSupplierField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitAllowTakeWithoutInvoice {
                get {
                    return this.bitAllowTakeWithoutInvoiceField;
                }
                set {
                    if ((this.bitAllowTakeWithoutInvoiceField.Equals(value) != true)) {
                        this.bitAllowTakeWithoutInvoiceField = value;
                        this.RaisePropertyChanged("bitAllowTakeWithoutInvoice");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitAutoDistribution {
                get {
                    return this.bitAutoDistributionField;
                }
                set {
                    if ((this.bitAutoDistributionField.Equals(value) != true)) {
                        this.bitAutoDistributionField = value;
                        this.RaisePropertyChanged("bitAutoDistribution");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitBalanceMail {
                get {
                    return this.bitBalanceMailField;
                }
                set {
                    if ((this.bitBalanceMailField.Equals(value) != true)) {
                        this.bitBalanceMailField = value;
                        this.RaisePropertyChanged("bitBalanceMail");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitBallanceInSupplierCurrency {
                get {
                    return this.bitBallanceInSupplierCurrencyField;
                }
                set {
                    if ((this.bitBallanceInSupplierCurrencyField.Equals(value) != true)) {
                        this.bitBallanceInSupplierCurrencyField = value;
                        this.RaisePropertyChanged("bitBallanceInSupplierCurrency");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitBarCode {
                get {
                    return this.bitBarCodeField;
                }
                set {
                    if ((this.bitBarCodeField.Equals(value) != true)) {
                        this.bitBarCodeField = value;
                        this.RaisePropertyChanged("bitBarCode");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitConterminousDocuments {
                get {
                    return this.bitConterminousDocumentsField;
                }
                set {
                    if ((this.bitConterminousDocumentsField.Equals(value) != true)) {
                        this.bitConterminousDocumentsField = value;
                        this.RaisePropertyChanged("bitConterminousDocuments");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitInvoiceAutoClose {
                get {
                    return this.bitInvoiceAutoCloseField;
                }
                set {
                    if ((this.bitInvoiceAutoCloseField.Equals(value) != true)) {
                        this.bitInvoiceAutoCloseField = value;
                        this.RaisePropertyChanged("bitInvoiceAutoClose");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitNeedWeightOnReceipt {
                get {
                    return this.bitNeedWeightOnReceiptField;
                }
                set {
                    if ((this.bitNeedWeightOnReceiptField.Equals(value) != true)) {
                        this.bitNeedWeightOnReceiptField = value;
                        this.RaisePropertyChanged("bitNeedWeightOnReceipt");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitNoWeight {
                get {
                    return this.bitNoWeightField;
                }
                set {
                    if ((this.bitNoWeightField.Equals(value) != true)) {
                        this.bitNoWeightField = value;
                        this.RaisePropertyChanged("bitNoWeight");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitOrderPrice {
                get {
                    return this.bitOrderPriceField;
                }
                set {
                    if ((this.bitOrderPriceField.Equals(value) != true)) {
                        this.bitOrderPriceField = value;
                        this.RaisePropertyChanged("bitOrderPrice");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitPriceMutation {
                get {
                    return this.bitPriceMutationField;
                }
                set {
                    if ((this.bitPriceMutationField.Equals(value) != true)) {
                        this.bitPriceMutationField = value;
                        this.RaisePropertyChanged("bitPriceMutation");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitRequiredCoordination {
                get {
                    return this.bitRequiredCoordinationField;
                }
                set {
                    if ((this.bitRequiredCoordinationField.Equals(value) != true)) {
                        this.bitRequiredCoordinationField = value;
                        this.RaisePropertyChanged("bitRequiredCoordination");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitUseProgramUploadInvoice {
                get {
                    return this.bitUseProgramUploadInvoiceField;
                }
                set {
                    if ((this.bitUseProgramUploadInvoiceField.Equals(value) != true)) {
                        this.bitUseProgramUploadInvoiceField = value;
                        this.RaisePropertyChanged("bitUseProgramUploadInvoice");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitUseProgramUploadPricelists {
                get {
                    return this.bitUseProgramUploadPricelistsField;
                }
                set {
                    if ((this.bitUseProgramUploadPricelistsField.Equals(value) != true)) {
                        this.bitUseProgramUploadPricelistsField = value;
                        this.RaisePropertyChanged("bitUseProgramUploadPricelists");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool bitWhiteSupplier {
                get {
                    return this.bitWhiteSupplierField;
                }
                set {
                    if ((this.bitWhiteSupplierField.Equals(value) != true)) {
                        this.bitWhiteSupplierField = value;
                        this.RaisePropertyChanged("bitWhiteSupplier");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contragent", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer))]
    public partial class Contragent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Contragent.Address AddAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Contragent.Contact AddContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Contragent.ContragentDogovor AddDogovorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Contragent.Address[] AddressListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BanUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Contragent.BankAccount BankAccountDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Contragent.Contact[] ContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContragentContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoNotSverkaSpamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Contragent.ContragentDogovor[] DogovorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KPPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameFullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OGRNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OKPOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OurEmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidateRequisitsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Contragent.Address AddAddress {
            get {
                return this.AddAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddAddressField, value) != true)) {
                    this.AddAddressField = value;
                    this.RaisePropertyChanged("AddAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Contragent.Contact AddContact {
            get {
                return this.AddContactField;
            }
            set {
                if ((object.ReferenceEquals(this.AddContactField, value) != true)) {
                    this.AddContactField = value;
                    this.RaisePropertyChanged("AddContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Contragent.ContragentDogovor AddDogovor {
            get {
                return this.AddDogovorField;
            }
            set {
                if ((object.ReferenceEquals(this.AddDogovorField, value) != true)) {
                    this.AddDogovorField = value;
                    this.RaisePropertyChanged("AddDogovor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Contragent.Address[] AddressList {
            get {
                return this.AddressListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressListField, value) != true)) {
                    this.AddressListField = value;
                    this.RaisePropertyChanged("AddressList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BanUserId {
            get {
                return this.BanUserIdField;
            }
            set {
                if ((this.BanUserIdField.Equals(value) != true)) {
                    this.BanUserIdField = value;
                    this.RaisePropertyChanged("BanUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Contragent.BankAccount BankAccountDefault {
            get {
                return this.BankAccountDefaultField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountDefaultField, value) != true)) {
                    this.BankAccountDefaultField = value;
                    this.RaisePropertyChanged("BankAccountDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Contragent.Contact[] Contacts {
            get {
                return this.ContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactsField, value) != true)) {
                    this.ContactsField = value;
                    this.RaisePropertyChanged("Contacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContragentContactPerson {
            get {
                return this.ContragentContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContragentContactPersonField, value) != true)) {
                    this.ContragentContactPersonField = value;
                    this.RaisePropertyChanged("ContragentContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DoNotSverkaSpam {
            get {
                return this.DoNotSverkaSpamField;
            }
            set {
                if ((this.DoNotSverkaSpamField.Equals(value) != true)) {
                    this.DoNotSverkaSpamField = value;
                    this.RaisePropertyChanged("DoNotSverkaSpam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Contragent.ContragentDogovor[] Dogovor {
            get {
                return this.DogovorField;
            }
            set {
                if ((object.ReferenceEquals(this.DogovorField, value) != true)) {
                    this.DogovorField = value;
                    this.RaisePropertyChanged("Dogovor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMails {
            get {
                return this.EMailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailsField, value) != true)) {
                    this.EMailsField = value;
                    this.RaisePropertyChanged("EMails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INN {
            get {
                return this.INNField;
            }
            set {
                if ((object.ReferenceEquals(this.INNField, value) != true)) {
                    this.INNField = value;
                    this.RaisePropertyChanged("INN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KPP {
            get {
                return this.KPPField;
            }
            set {
                if ((object.ReferenceEquals(this.KPPField, value) != true)) {
                    this.KPPField = value;
                    this.RaisePropertyChanged("KPP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameFull {
            get {
                return this.NameFullField;
            }
            set {
                if ((object.ReferenceEquals(this.NameFullField, value) != true)) {
                    this.NameFullField = value;
                    this.RaisePropertyChanged("NameFull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OGRN {
            get {
                return this.OGRNField;
            }
            set {
                if ((object.ReferenceEquals(this.OGRNField, value) != true)) {
                    this.OGRNField = value;
                    this.RaisePropertyChanged("OGRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OKPO {
            get {
                return this.OKPOField;
            }
            set {
                if ((object.ReferenceEquals(this.OKPOField, value) != true)) {
                    this.OKPOField = value;
                    this.RaisePropertyChanged("OKPO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OurEmployee {
            get {
                return this.OurEmployeeField;
            }
            set {
                if ((this.OurEmployeeField.Equals(value) != true)) {
                    this.OurEmployeeField = value;
                    this.RaisePropertyChanged("OurEmployee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phones {
            get {
                return this.PhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonesField, value) != true)) {
                    this.PhonesField = value;
                    this.RaisePropertyChanged("Phones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserIdAdd {
            get {
                return this.UserIdAddField;
            }
            set {
                if ((this.UserIdAddField.Equals(value) != true)) {
                    this.UserIdAddField = value;
                    this.RaisePropertyChanged("UserIdAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateRequisits {
            get {
                return this.ValidateRequisitsField;
            }
            set {
                if ((this.ValidateRequisitsField.Equals(value) != true)) {
                    this.ValidateRequisitsField = value;
                    this.RaisePropertyChanged("ValidateRequisits");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Contragent.Address", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AddressContragentField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private EmExServiceClient.ContragentService.AddressType TypeAddressField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string AddressContragent {
                get {
                    return this.AddressContragentField;
                }
                set {
                    if ((object.ReferenceEquals(this.AddressContragentField, value) != true)) {
                        this.AddressContragentField = value;
                        this.RaisePropertyChanged("AddressContragent");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public EmExServiceClient.ContragentService.AddressType TypeAddress {
                get {
                    return this.TypeAddressField;
                }
                set {
                    if ((this.TypeAddressField.Equals(value) != true)) {
                        this.TypeAddressField = value;
                        this.RaisePropertyChanged("TypeAddress");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Contragent.Contact", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(long[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResult))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfInventory))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDocumentCorrectionCard))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfUser))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfGroup))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultstring))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryCommon))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryDetail))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultTupleOfbooleanstringlonglong))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDenyType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDeleteType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDenyStatus))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfChangeAnswerLogLine))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultDetailDto))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfMake))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.NullableDataContract))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSuppliersReturnsAuthority))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultint))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultboolean))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfConsumer))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerHistoryItem))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfTransportCompany))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultSupplier))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfContragent))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSupplierBase))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfSupplierDocumentReturnCard))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccountNew))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDetailSubstituteDto))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultlong))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccount2))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerDiscountManual))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultActionLock))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultNullableOfdateTime))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDecommission))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDecommissionDetail))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard2))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard3))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDiadocDocumentStatus))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfDocumentReturnCard))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfAccountDetailViewItem))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomer))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerSearchResultItem))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomer))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomer.CustomerGroup))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfContragentDocumentSetting))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerDelivery))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerScheduleAttribute))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultDeliveryRegionType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerScheduleAttribute))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfActRecycling))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultActRecycling))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfLocation))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfRegion))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultArrayOfCustomerDiscountHistoryItem))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerBalance))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.OperationResultCustomerIdentity))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Inventory[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Inventory))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentCorrectionCard[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentCorrectionCard))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SupplierDocumentReturnCard[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SupplierDocumentReturnCard))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentSticker[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentSticker))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.TransportDocumentSticker[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.TransportDocumentSticker))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Decommission[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Decommission))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DecommissionDetail[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DecommissionDetail))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountCard[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountCard))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountCard2[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountCard2))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountCard3[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountCard3))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DiadocDocumentStatus[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DiadocDocumentStatus))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentReturnCard[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentReturnCard))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentOptions))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentReasonType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DocumentType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ActRecycling[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ActRecycling))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.User[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.User))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Group[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Group))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerHistoryItem[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerHistoryItem))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent.Address))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AddressType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ContactTypes))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent.ContragentDogovor))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent.Address[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent.BankAccount))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent.Bank))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent.Contact[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent.ContragentDogovor[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent.BankAccount[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Supplier))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Supplier.SupplierGroup))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Supplier.SupplierStatus))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Contragent[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SupplierBase[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SupplierBase))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerDiscountManual))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.PartnerType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.WorkType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerContact))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerGroup))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerStorage))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerDispatchSetting))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerAccount))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerContract))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerPrintSetting))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerStatus))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerSearchResultItem[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerSearchResultItem))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerSearchResultItemType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Customer.CustomerGroup[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerIdentity[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerIdentity))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ContragentDocumentSetting[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ContragentDocumentSetting))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerDelivery))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ContragentIdentity[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ContragentIdentity))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerScheduleAttribute[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerScheduleAttribute))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerScheduleAccountMode))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerDiscountHistoryItem[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerDiscountHistoryItem))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerBalance))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SalesHistoryCommon[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SalesHistoryCommon))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SalesHistoryDetail[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SalesHistoryDetail))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DenyType[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DenyType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DeleteType[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DeleteType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DenyStatus[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DenyStatus))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ChangeAnswerLogLine[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ChangeAnswerLogLine))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Tuple<bool, string, long, long>))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DetailDto))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Make[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Make))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.PrintSticker[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.PrintSticker))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.StickerPrintMode))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DetailSubstituteDto[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DetailSubstituteDto))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SuppliersReturnsAuthority[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SuppliersReturnsAuthority))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ActionLock))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.ActionLockState))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Consumer[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Consumer))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.DeliveryRegionType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Location[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Location))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocationUser[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocationUser))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Region[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.Region))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.TransportCompany[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.TransportCompany))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountDetailViewItem[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountDetailViewItem))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountDetail))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.GatheringSchemeType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.CustomerDeliveryType))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocalStorageAccountNew[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocalStorageAccountNew))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocalStorageAccount2[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocalStorageAccount2))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Specialized.BitVector32))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocationSetting[]))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocationSetting))]
        [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.LocationPropertyType))]
        public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private object ContactPersonDoljnField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private object ContactPersonDoljnDPField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private object ContactPersonNameDPField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long ContragentIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string EmailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FIOField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FirstNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private object GenderField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PhoneNumberField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SurnameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private EmExServiceClient.ContragentService.ContactTypes TypeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public object ContactPersonDoljn {
                get {
                    return this.ContactPersonDoljnField;
                }
                set {
                    if ((object.ReferenceEquals(this.ContactPersonDoljnField, value) != true)) {
                        this.ContactPersonDoljnField = value;
                        this.RaisePropertyChanged("ContactPersonDoljn");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public object ContactPersonDoljnDP {
                get {
                    return this.ContactPersonDoljnDPField;
                }
                set {
                    if ((object.ReferenceEquals(this.ContactPersonDoljnDPField, value) != true)) {
                        this.ContactPersonDoljnDPField = value;
                        this.RaisePropertyChanged("ContactPersonDoljnDP");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public object ContactPersonNameDP {
                get {
                    return this.ContactPersonNameDPField;
                }
                set {
                    if ((object.ReferenceEquals(this.ContactPersonNameDPField, value) != true)) {
                        this.ContactPersonNameDPField = value;
                        this.RaisePropertyChanged("ContactPersonNameDP");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long ContragentId {
                get {
                    return this.ContragentIdField;
                }
                set {
                    if ((this.ContragentIdField.Equals(value) != true)) {
                        this.ContragentIdField = value;
                        this.RaisePropertyChanged("ContragentId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Email {
                get {
                    return this.EmailField;
                }
                set {
                    if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                        this.EmailField = value;
                        this.RaisePropertyChanged("Email");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FIO {
                get {
                    return this.FIOField;
                }
                set {
                    if ((object.ReferenceEquals(this.FIOField, value) != true)) {
                        this.FIOField = value;
                        this.RaisePropertyChanged("FIO");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FirstName {
                get {
                    return this.FirstNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                        this.FirstNameField = value;
                        this.RaisePropertyChanged("FirstName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public object Gender {
                get {
                    return this.GenderField;
                }
                set {
                    if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                        this.GenderField = value;
                        this.RaisePropertyChanged("Gender");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string PhoneNumber {
                get {
                    return this.PhoneNumberField;
                }
                set {
                    if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                        this.PhoneNumberField = value;
                        this.RaisePropertyChanged("PhoneNumber");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Surname {
                get {
                    return this.SurnameField;
                }
                set {
                    if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                        this.SurnameField = value;
                        this.RaisePropertyChanged("Surname");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public EmExServiceClient.ContragentService.ContactTypes Type {
                get {
                    return this.TypeField;
                }
                set {
                    if ((this.TypeField.Equals(value) != true)) {
                        this.TypeField = value;
                        this.RaisePropertyChanged("Type");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Contragent.ContragentDogovor", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class ContragentDogovor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private short BalanceIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long ChiefUserIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string CommentField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long ContragentIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime DateBeginField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime DateEndField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool DoNotSverkaSendField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string DogovorLogoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string DogovorNumField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int HasNDSField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long MngrUserIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long ObjectIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SchetField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SubSchetField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long TrebovanieIdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public short BalanceId {
                get {
                    return this.BalanceIdField;
                }
                set {
                    if ((this.BalanceIdField.Equals(value) != true)) {
                        this.BalanceIdField = value;
                        this.RaisePropertyChanged("BalanceId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long ChiefUserId {
                get {
                    return this.ChiefUserIdField;
                }
                set {
                    if ((this.ChiefUserIdField.Equals(value) != true)) {
                        this.ChiefUserIdField = value;
                        this.RaisePropertyChanged("ChiefUserId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Comment {
                get {
                    return this.CommentField;
                }
                set {
                    if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                        this.CommentField = value;
                        this.RaisePropertyChanged("Comment");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long ContragentId {
                get {
                    return this.ContragentIdField;
                }
                set {
                    if ((this.ContragentIdField.Equals(value) != true)) {
                        this.ContragentIdField = value;
                        this.RaisePropertyChanged("ContragentId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime DateBegin {
                get {
                    return this.DateBeginField;
                }
                set {
                    if ((this.DateBeginField.Equals(value) != true)) {
                        this.DateBeginField = value;
                        this.RaisePropertyChanged("DateBegin");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime DateEnd {
                get {
                    return this.DateEndField;
                }
                set {
                    if ((this.DateEndField.Equals(value) != true)) {
                        this.DateEndField = value;
                        this.RaisePropertyChanged("DateEnd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool DoNotSverkaSend {
                get {
                    return this.DoNotSverkaSendField;
                }
                set {
                    if ((this.DoNotSverkaSendField.Equals(value) != true)) {
                        this.DoNotSverkaSendField = value;
                        this.RaisePropertyChanged("DoNotSverkaSend");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string DogovorLogo {
                get {
                    return this.DogovorLogoField;
                }
                set {
                    if ((object.ReferenceEquals(this.DogovorLogoField, value) != true)) {
                        this.DogovorLogoField = value;
                        this.RaisePropertyChanged("DogovorLogo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string DogovorNum {
                get {
                    return this.DogovorNumField;
                }
                set {
                    if ((object.ReferenceEquals(this.DogovorNumField, value) != true)) {
                        this.DogovorNumField = value;
                        this.RaisePropertyChanged("DogovorNum");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int HasNDS {
                get {
                    return this.HasNDSField;
                }
                set {
                    if ((this.HasNDSField.Equals(value) != true)) {
                        this.HasNDSField = value;
                        this.RaisePropertyChanged("HasNDS");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long MngrUserId {
                get {
                    return this.MngrUserIdField;
                }
                set {
                    if ((this.MngrUserIdField.Equals(value) != true)) {
                        this.MngrUserIdField = value;
                        this.RaisePropertyChanged("MngrUserId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long ObjectId {
                get {
                    return this.ObjectIdField;
                }
                set {
                    if ((this.ObjectIdField.Equals(value) != true)) {
                        this.ObjectIdField = value;
                        this.RaisePropertyChanged("ObjectId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Schet {
                get {
                    return this.SchetField;
                }
                set {
                    if ((object.ReferenceEquals(this.SchetField, value) != true)) {
                        this.SchetField = value;
                        this.RaisePropertyChanged("Schet");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SubSchet {
                get {
                    return this.SubSchetField;
                }
                set {
                    if ((object.ReferenceEquals(this.SubSchetField, value) != true)) {
                        this.SubSchetField = value;
                        this.RaisePropertyChanged("SubSchet");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long TrebovanieId {
                get {
                    return this.TrebovanieIdField;
                }
                set {
                    if ((this.TrebovanieIdField.Equals(value) != true)) {
                        this.TrebovanieIdField = value;
                        this.RaisePropertyChanged("TrebovanieId");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Contragent.BankAccount", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class BankAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private EmExServiceClient.ContragentService.Contragent.Bank BankField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool ClosedField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long ContragentIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long IdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsDefaultField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NumberField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RSCommentPrefixField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RSINNField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RSKPPField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string RSNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int RSTypeSchetIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long UserIdAddField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private long UserIdCheckedField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public EmExServiceClient.ContragentService.Contragent.Bank Bank {
                get {
                    return this.BankField;
                }
                set {
                    if ((object.ReferenceEquals(this.BankField, value) != true)) {
                        this.BankField = value;
                        this.RaisePropertyChanged("Bank");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool Closed {
                get {
                    return this.ClosedField;
                }
                set {
                    if ((this.ClosedField.Equals(value) != true)) {
                        this.ClosedField = value;
                        this.RaisePropertyChanged("Closed");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long ContragentId {
                get {
                    return this.ContragentIdField;
                }
                set {
                    if ((this.ContragentIdField.Equals(value) != true)) {
                        this.ContragentIdField = value;
                        this.RaisePropertyChanged("ContragentId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long Id {
                get {
                    return this.IdField;
                }
                set {
                    if ((this.IdField.Equals(value) != true)) {
                        this.IdField = value;
                        this.RaisePropertyChanged("Id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsDefault {
                get {
                    return this.IsDefaultField;
                }
                set {
                    if ((this.IsDefaultField.Equals(value) != true)) {
                        this.IsDefaultField = value;
                        this.RaisePropertyChanged("IsDefault");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Number {
                get {
                    return this.NumberField;
                }
                set {
                    if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                        this.NumberField = value;
                        this.RaisePropertyChanged("Number");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RSCommentPrefix {
                get {
                    return this.RSCommentPrefixField;
                }
                set {
                    if ((object.ReferenceEquals(this.RSCommentPrefixField, value) != true)) {
                        this.RSCommentPrefixField = value;
                        this.RaisePropertyChanged("RSCommentPrefix");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RSINN {
                get {
                    return this.RSINNField;
                }
                set {
                    if ((object.ReferenceEquals(this.RSINNField, value) != true)) {
                        this.RSINNField = value;
                        this.RaisePropertyChanged("RSINN");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RSKPP {
                get {
                    return this.RSKPPField;
                }
                set {
                    if ((object.ReferenceEquals(this.RSKPPField, value) != true)) {
                        this.RSKPPField = value;
                        this.RaisePropertyChanged("RSKPP");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string RSName {
                get {
                    return this.RSNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.RSNameField, value) != true)) {
                        this.RSNameField = value;
                        this.RaisePropertyChanged("RSName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int RSTypeSchetId {
                get {
                    return this.RSTypeSchetIdField;
                }
                set {
                    if ((this.RSTypeSchetIdField.Equals(value) != true)) {
                        this.RSTypeSchetIdField = value;
                        this.RaisePropertyChanged("RSTypeSchetId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long UserIdAdd {
                get {
                    return this.UserIdAddField;
                }
                set {
                    if ((this.UserIdAddField.Equals(value) != true)) {
                        this.UserIdAddField = value;
                        this.RaisePropertyChanged("UserIdAdd");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public long UserIdChecked {
                get {
                    return this.UserIdCheckedField;
                }
                set {
                    if ((this.UserIdCheckedField.Equals(value) != true)) {
                        this.UserIdCheckedField = value;
                        this.RaisePropertyChanged("UserIdChecked");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Contragent.Bank", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class Bank : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string BIKField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string CityField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string INNField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string KSField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string BIK {
                get {
                    return this.BIKField;
                }
                set {
                    if ((object.ReferenceEquals(this.BIKField, value) != true)) {
                        this.BIKField = value;
                        this.RaisePropertyChanged("BIK");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string City {
                get {
                    return this.CityField;
                }
                set {
                    if ((object.ReferenceEquals(this.CityField, value) != true)) {
                        this.CityField = value;
                        this.RaisePropertyChanged("City");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string INN {
                get {
                    return this.INNField;
                }
                set {
                    if ((object.ReferenceEquals(this.INNField, value) != true)) {
                        this.INNField = value;
                        this.RaisePropertyChanged("INN");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string KS {
                get {
                    return this.KSField;
                }
                set {
                    if ((object.ReferenceEquals(this.KSField, value) != true)) {
                        this.KSField = value;
                        this.RaisePropertyChanged("KS");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class Customer : EmExServiceClient.ContragentService.Contragent {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.TransportCompany AlternativeTransportCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerCustLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CloseCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CloseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ContractDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerAccNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerActualAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerCityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerContactPersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDeliveryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDeliveryAddressAltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CustomerPayDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerTelephonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirFIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> DocumentCopiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DogovorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ExtraForWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FirmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceCustLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsResidentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        private string Logo1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailAnswerCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailBalanceCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailBalanceCustBCCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailConfidentialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailDeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.TransportCompany MainTransportCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnlinePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OptovikIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OptovikTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.PartnerType PartnerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PriAltSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PrintPacklistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptCustLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransportCompanyAlternativeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TransportCompanyGateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TransportCompanyGateAltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransportCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.WorkType WorkTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer.CustomerContact _customerContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer.CustomerGroup _customerGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer.CustomerStorage _customerStorageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer.CustomerDispatchSetting _dispatchSettingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer.CustomerAccount _сustomerAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer.CustomerContract _сustomerContractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer.CustomerPrintSetting _сustomerPrintSettingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.Customer.CustomerStatus _сustomerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> bitCustomerBalanceNULLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bitCustomerCloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> bitNotRunCustomerForTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bitPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> bitSendAccountWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bitTakeAllField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> bitUseGoodsTrellisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> bitVIPCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte flagAnswersCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte flagBalancesCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte flagInvoicesCustField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte flagReceiptsCustField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.TransportCompany AlternativeTransportCompany {
            get {
                return this.AlternativeTransportCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.AlternativeTransportCompanyField, value) != true)) {
                    this.AlternativeTransportCompanyField = value;
                    this.RaisePropertyChanged("AlternativeTransportCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnswerCustLogo {
            get {
                return this.AnswerCustLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerCustLogoField, value) != true)) {
                    this.AnswerCustLogoField = value;
                    this.RaisePropertyChanged("AnswerCustLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CloseComment {
            get {
                return this.CloseCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CloseCommentField, value) != true)) {
                    this.CloseCommentField = value;
                    this.RaisePropertyChanged("CloseComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CloseDate {
            get {
                return this.CloseDateField;
            }
            set {
                if ((this.CloseDateField.Equals(value) != true)) {
                    this.CloseDateField = value;
                    this.RaisePropertyChanged("CloseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ContractDate {
            get {
                return this.ContractDateField;
            }
            set {
                if ((this.ContractDateField.Equals(value) != true)) {
                    this.ContractDateField = value;
                    this.RaisePropertyChanged("ContractDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractNumberField, value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerAccNum {
            get {
                return this.CustomerAccNumField;
            }
            set {
                if ((this.CustomerAccNumField.Equals(value) != true)) {
                    this.CustomerAccNumField = value;
                    this.RaisePropertyChanged("CustomerAccNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerActualAddress {
            get {
                return this.CustomerActualAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerActualAddressField, value) != true)) {
                    this.CustomerActualAddressField = value;
                    this.RaisePropertyChanged("CustomerActualAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerAddress {
            get {
                return this.CustomerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAddressField, value) != true)) {
                    this.CustomerAddressField = value;
                    this.RaisePropertyChanged("CustomerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerCityId {
            get {
                return this.CustomerCityIdField;
            }
            set {
                if ((this.CustomerCityIdField.Equals(value) != true)) {
                    this.CustomerCityIdField = value;
                    this.RaisePropertyChanged("CustomerCityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerContactPersons {
            get {
                return this.CustomerContactPersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerContactPersonsField, value) != true)) {
                    this.CustomerContactPersonsField = value;
                    this.RaisePropertyChanged("CustomerContactPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDeliveryAddress {
            get {
                return this.CustomerDeliveryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDeliveryAddressField, value) != true)) {
                    this.CustomerDeliveryAddressField = value;
                    this.RaisePropertyChanged("CustomerDeliveryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDeliveryAddressAlt {
            get {
                return this.CustomerDeliveryAddressAltField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDeliveryAddressAltField, value) != true)) {
                    this.CustomerDeliveryAddressAltField = value;
                    this.RaisePropertyChanged("CustomerDeliveryAddressAlt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CustomerPayDelivery {
            get {
                return this.CustomerPayDeliveryField;
            }
            set {
                if ((this.CustomerPayDeliveryField.Equals(value) != true)) {
                    this.CustomerPayDeliveryField = value;
                    this.RaisePropertyChanged("CustomerPayDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerTelephones {
            get {
                return this.CustomerTelephonesField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerTelephonesField, value) != true)) {
                    this.CustomerTelephonesField = value;
                    this.RaisePropertyChanged("CustomerTelephones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerURL {
            get {
                return this.CustomerURLField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerURLField, value) != true)) {
                    this.CustomerURLField = value;
                    this.RaisePropertyChanged("CustomerURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirF {
            get {
                return this.DirFField;
            }
            set {
                if ((object.ReferenceEquals(this.DirFField, value) != true)) {
                    this.DirFField = value;
                    this.RaisePropertyChanged("DirF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirFI {
            get {
                return this.DirFIField;
            }
            set {
                if ((object.ReferenceEquals(this.DirFIField, value) != true)) {
                    this.DirFIField = value;
                    this.RaisePropertyChanged("DirFI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirI {
            get {
                return this.DirIField;
            }
            set {
                if ((object.ReferenceEquals(this.DirIField, value) != true)) {
                    this.DirIField = value;
                    this.RaisePropertyChanged("DirI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirO {
            get {
                return this.DirOField;
            }
            set {
                if ((object.ReferenceEquals(this.DirOField, value) != true)) {
                    this.DirOField = value;
                    this.RaisePropertyChanged("DirO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> DocumentCopies {
            get {
                return this.DocumentCopiesField;
            }
            set {
                if ((this.DocumentCopiesField.Equals(value) != true)) {
                    this.DocumentCopiesField = value;
                    this.RaisePropertyChanged("DocumentCopies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DogovorId {
            get {
                return this.DogovorIdField;
            }
            set {
                if ((this.DogovorIdField.Equals(value) != true)) {
                    this.DogovorIdField = value;
                    this.RaisePropertyChanged("DogovorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ExtraForWeight {
            get {
                return this.ExtraForWeightField;
            }
            set {
                if ((this.ExtraForWeightField.Equals(value) != true)) {
                    this.ExtraForWeightField = value;
                    this.RaisePropertyChanged("ExtraForWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FirmId {
            get {
                return this.FirmIdField;
            }
            set {
                if ((this.FirmIdField.Equals(value) != true)) {
                    this.FirmIdField = value;
                    this.RaisePropertyChanged("FirmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceCustLogo {
            get {
                return this.InvoiceCustLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceCustLogoField, value) != true)) {
                    this.InvoiceCustLogoField = value;
                    this.RaisePropertyChanged("InvoiceCustLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsResident {
            get {
                return this.IsResidentField;
            }
            set {
                if ((this.IsResidentField.Equals(value) != true)) {
                    this.IsResidentField = value;
                    this.RaisePropertyChanged("IsResident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Logo", IsRequired=true)]
        public string Logo1 {
            get {
                return this.Logo1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Logo1Field, value) != true)) {
                    this.Logo1Field = value;
                    this.RaisePropertyChanged("Logo1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailAnswerCust {
            get {
                return this.MailAnswerCustField;
            }
            set {
                if ((object.ReferenceEquals(this.MailAnswerCustField, value) != true)) {
                    this.MailAnswerCustField = value;
                    this.RaisePropertyChanged("MailAnswerCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailBalanceCust {
            get {
                return this.MailBalanceCustField;
            }
            set {
                if ((object.ReferenceEquals(this.MailBalanceCustField, value) != true)) {
                    this.MailBalanceCustField = value;
                    this.RaisePropertyChanged("MailBalanceCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailBalanceCustBCC {
            get {
                return this.MailBalanceCustBCCField;
            }
            set {
                if ((object.ReferenceEquals(this.MailBalanceCustBCCField, value) != true)) {
                    this.MailBalanceCustBCCField = value;
                    this.RaisePropertyChanged("MailBalanceCustBCC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailConfidential {
            get {
                return this.MailConfidentialField;
            }
            set {
                if ((object.ReferenceEquals(this.MailConfidentialField, value) != true)) {
                    this.MailConfidentialField = value;
                    this.RaisePropertyChanged("MailConfidential");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailDelivery {
            get {
                return this.MailDeliveryField;
            }
            set {
                if ((object.ReferenceEquals(this.MailDeliveryField, value) != true)) {
                    this.MailDeliveryField = value;
                    this.RaisePropertyChanged("MailDelivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.TransportCompany MainTransportCompany {
            get {
                return this.MainTransportCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.MainTransportCompanyField, value) != true)) {
                    this.MainTransportCompanyField = value;
                    this.RaisePropertyChanged("MainTransportCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OnlinePassword {
            get {
                return this.OnlinePasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OnlinePasswordField, value) != true)) {
                    this.OnlinePasswordField = value;
                    this.RaisePropertyChanged("OnlinePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OptovikId {
            get {
                return this.OptovikIdField;
            }
            set {
                if ((this.OptovikIdField.Equals(value) != true)) {
                    this.OptovikIdField = value;
                    this.RaisePropertyChanged("OptovikId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OptovikTel {
            get {
                return this.OptovikTelField;
            }
            set {
                if ((object.ReferenceEquals(this.OptovikTelField, value) != true)) {
                    this.OptovikTelField = value;
                    this.RaisePropertyChanged("OptovikTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.PartnerType PartnerStatus {
            get {
                return this.PartnerStatusField;
            }
            set {
                if ((this.PartnerStatusField.Equals(value) != true)) {
                    this.PartnerStatusField = value;
                    this.RaisePropertyChanged("PartnerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriAltSearch {
            get {
                return this.PriAltSearchField;
            }
            set {
                if ((this.PriAltSearchField.Equals(value) != true)) {
                    this.PriAltSearchField = value;
                    this.RaisePropertyChanged("PriAltSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PrintPacklist {
            get {
                return this.PrintPacklistField;
            }
            set {
                if ((this.PrintPacklistField.Equals(value) != true)) {
                    this.PrintPacklistField = value;
                    this.RaisePropertyChanged("PrintPacklist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptCustLogo {
            get {
                return this.ReceiptCustLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptCustLogoField, value) != true)) {
                    this.ReceiptCustLogoField = value;
                    this.RaisePropertyChanged("ReceiptCustLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationEmail {
            get {
                return this.RegistrationEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationEmailField, value) != true)) {
                    this.RegistrationEmailField = value;
                    this.RaisePropertyChanged("RegistrationEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransportCompanyAlternativeId {
            get {
                return this.TransportCompanyAlternativeIdField;
            }
            set {
                if ((this.TransportCompanyAlternativeIdField.Equals(value) != true)) {
                    this.TransportCompanyAlternativeIdField = value;
                    this.RaisePropertyChanged("TransportCompanyAlternativeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TransportCompanyGate {
            get {
                return this.TransportCompanyGateField;
            }
            set {
                if ((this.TransportCompanyGateField.Equals(value) != true)) {
                    this.TransportCompanyGateField = value;
                    this.RaisePropertyChanged("TransportCompanyGate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TransportCompanyGateAlt {
            get {
                return this.TransportCompanyGateAltField;
            }
            set {
                if ((this.TransportCompanyGateAltField.Equals(value) != true)) {
                    this.TransportCompanyGateAltField = value;
                    this.RaisePropertyChanged("TransportCompanyGateAlt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransportCompanyId {
            get {
                return this.TransportCompanyIdField;
            }
            set {
                if ((this.TransportCompanyIdField.Equals(value) != true)) {
                    this.TransportCompanyIdField = value;
                    this.RaisePropertyChanged("TransportCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.WorkType WorkType {
            get {
                return this.WorkTypeField;
            }
            set {
                if ((this.WorkTypeField.Equals(value) != true)) {
                    this.WorkTypeField = value;
                    this.RaisePropertyChanged("WorkType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer.CustomerContact _customerContact {
            get {
                return this._customerContactField;
            }
            set {
                if ((object.ReferenceEquals(this._customerContactField, value) != true)) {
                    this._customerContactField = value;
                    this.RaisePropertyChanged("_customerContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer.CustomerGroup _customerGroup {
            get {
                return this._customerGroupField;
            }
            set {
                if ((object.ReferenceEquals(this._customerGroupField, value) != true)) {
                    this._customerGroupField = value;
                    this.RaisePropertyChanged("_customerGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer.CustomerStorage _customerStorage {
            get {
                return this._customerStorageField;
            }
            set {
                if ((object.ReferenceEquals(this._customerStorageField, value) != true)) {
                    this._customerStorageField = value;
                    this.RaisePropertyChanged("_customerStorage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer.CustomerDispatchSetting _dispatchSetting {
            get {
                return this._dispatchSettingField;
            }
            set {
                if ((object.ReferenceEquals(this._dispatchSettingField, value) != true)) {
                    this._dispatchSettingField = value;
                    this.RaisePropertyChanged("_dispatchSetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer.CustomerAccount _сustomerAccount {
            get {
                return this._сustomerAccountField;
            }
            set {
                if ((object.ReferenceEquals(this._сustomerAccountField, value) != true)) {
                    this._сustomerAccountField = value;
                    this.RaisePropertyChanged("_сustomerAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer.CustomerContract _сustomerContract {
            get {
                return this._сustomerContractField;
            }
            set {
                if ((object.ReferenceEquals(this._сustomerContractField, value) != true)) {
                    this._сustomerContractField = value;
                    this.RaisePropertyChanged("_сustomerContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer.CustomerPrintSetting _сustomerPrintSetting {
            get {
                return this._сustomerPrintSettingField;
            }
            set {
                if ((object.ReferenceEquals(this._сustomerPrintSettingField, value) != true)) {
                    this._сustomerPrintSettingField = value;
                    this.RaisePropertyChanged("_сustomerPrintSetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.Customer.CustomerStatus _сustomerStatus {
            get {
                return this._сustomerStatusField;
            }
            set {
                if ((object.ReferenceEquals(this._сustomerStatusField, value) != true)) {
                    this._сustomerStatusField = value;
                    this.RaisePropertyChanged("_сustomerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> bitCustomerBalanceNULL {
            get {
                return this.bitCustomerBalanceNULLField;
            }
            set {
                if ((this.bitCustomerBalanceNULLField.Equals(value) != true)) {
                    this.bitCustomerBalanceNULLField = value;
                    this.RaisePropertyChanged("bitCustomerBalanceNULL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bitCustomerClose {
            get {
                return this.bitCustomerCloseField;
            }
            set {
                if ((this.bitCustomerCloseField.Equals(value) != true)) {
                    this.bitCustomerCloseField = value;
                    this.RaisePropertyChanged("bitCustomerClose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> bitNotRunCustomerForTime {
            get {
                return this.bitNotRunCustomerForTimeField;
            }
            set {
                if ((this.bitNotRunCustomerForTimeField.Equals(value) != true)) {
                    this.bitNotRunCustomerForTimeField = value;
                    this.RaisePropertyChanged("bitNotRunCustomerForTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bitPublic {
            get {
                return this.bitPublicField;
            }
            set {
                if ((this.bitPublicField.Equals(value) != true)) {
                    this.bitPublicField = value;
                    this.RaisePropertyChanged("bitPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> bitSendAccountWeight {
            get {
                return this.bitSendAccountWeightField;
            }
            set {
                if ((this.bitSendAccountWeightField.Equals(value) != true)) {
                    this.bitSendAccountWeightField = value;
                    this.RaisePropertyChanged("bitSendAccountWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bitTakeAll {
            get {
                return this.bitTakeAllField;
            }
            set {
                if ((this.bitTakeAllField.Equals(value) != true)) {
                    this.bitTakeAllField = value;
                    this.RaisePropertyChanged("bitTakeAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> bitUseGoodsTrellis {
            get {
                return this.bitUseGoodsTrellisField;
            }
            set {
                if ((this.bitUseGoodsTrellisField.Equals(value) != true)) {
                    this.bitUseGoodsTrellisField = value;
                    this.RaisePropertyChanged("bitUseGoodsTrellis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> bitVIPCustomer {
            get {
                return this.bitVIPCustomerField;
            }
            set {
                if ((this.bitVIPCustomerField.Equals(value) != true)) {
                    this.bitVIPCustomerField = value;
                    this.RaisePropertyChanged("bitVIPCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte flagAnswersCust {
            get {
                return this.flagAnswersCustField;
            }
            set {
                if ((this.flagAnswersCustField.Equals(value) != true)) {
                    this.flagAnswersCustField = value;
                    this.RaisePropertyChanged("flagAnswersCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte flagBalancesCust {
            get {
                return this.flagBalancesCustField;
            }
            set {
                if ((this.flagBalancesCustField.Equals(value) != true)) {
                    this.flagBalancesCustField = value;
                    this.RaisePropertyChanged("flagBalancesCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte flagInvoicesCust {
            get {
                return this.flagInvoicesCustField;
            }
            set {
                if ((this.flagInvoicesCustField.Equals(value) != true)) {
                    this.flagInvoicesCustField = value;
                    this.RaisePropertyChanged("flagInvoicesCust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte flagReceiptsCust {
            get {
                return this.flagReceiptsCustField;
            }
            set {
                if ((this.flagReceiptsCustField.Equals(value) != true)) {
                    this.flagReceiptsCustField = value;
                    this.RaisePropertyChanged("flagReceiptsCust");
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerContact", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class CustomerContact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AddressField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string ContactPersonsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string DeliveryAddressField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string InfoSourceField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string MailAnswerCustField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string TelephonesField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Address {
                get {
                    return this.AddressField;
                }
                set {
                    if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                        this.AddressField = value;
                        this.RaisePropertyChanged("Address");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string ContactPersons {
                get {
                    return this.ContactPersonsField;
                }
                set {
                    if ((object.ReferenceEquals(this.ContactPersonsField, value) != true)) {
                        this.ContactPersonsField = value;
                        this.RaisePropertyChanged("ContactPersons");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string DeliveryAddress {
                get {
                    return this.DeliveryAddressField;
                }
                set {
                    if ((object.ReferenceEquals(this.DeliveryAddressField, value) != true)) {
                        this.DeliveryAddressField = value;
                        this.RaisePropertyChanged("DeliveryAddress");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string InfoSource {
                get {
                    return this.InfoSourceField;
                }
                set {
                    if ((object.ReferenceEquals(this.InfoSourceField, value) != true)) {
                        this.InfoSourceField = value;
                        this.RaisePropertyChanged("InfoSource");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string MailAnswerCust {
                get {
                    return this.MailAnswerCustField;
                }
                set {
                    if ((object.ReferenceEquals(this.MailAnswerCustField, value) != true)) {
                        this.MailAnswerCustField = value;
                        this.RaisePropertyChanged("MailAnswerCust");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Telephones {
                get {
                    return this.TelephonesField;
                }
                set {
                    if ((object.ReferenceEquals(this.TelephonesField, value) != true)) {
                        this.TelephonesField = value;
                        this.RaisePropertyChanged("Telephones");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerGroup", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class CustomerGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<long> IdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string LogoField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<long> Id {
                get {
                    return this.IdField;
                }
                set {
                    if ((this.IdField.Equals(value) != true)) {
                        this.IdField = value;
                        this.RaisePropertyChanged("Id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Logo {
                get {
                    return this.LogoField;
                }
                set {
                    if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                        this.LogoField = value;
                        this.RaisePropertyChanged("Logo");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerStorage", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class CustomerStorage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int FreeHoursBaseField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int FreeHoursCorrectiveField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int HoursOfFreeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsPaymentField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int FreeHoursBase {
                get {
                    return this.FreeHoursBaseField;
                }
                set {
                    if ((this.FreeHoursBaseField.Equals(value) != true)) {
                        this.FreeHoursBaseField = value;
                        this.RaisePropertyChanged("FreeHoursBase");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int FreeHoursCorrective {
                get {
                    return this.FreeHoursCorrectiveField;
                }
                set {
                    if ((this.FreeHoursCorrectiveField.Equals(value) != true)) {
                        this.FreeHoursCorrectiveField = value;
                        this.RaisePropertyChanged("FreeHoursCorrective");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int HoursOfFree {
                get {
                    return this.HoursOfFreeField;
                }
                set {
                    if ((this.HoursOfFreeField.Equals(value) != true)) {
                        this.HoursOfFreeField = value;
                        this.RaisePropertyChanged("HoursOfFree");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsPayment {
                get {
                    return this.IsPaymentField;
                }
                set {
                    if ((this.IsPaymentField.Equals(value) != true)) {
                        this.IsPaymentField = value;
                        this.RaisePropertyChanged("IsPayment");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerDispatchSetting", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class CustomerDispatchSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AnswersDispatchEmailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int AnswersDispatchTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string BalancesDispatchEmailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string BalancesDispatchEmailBCCField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int BalancesDispatchTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string InvoicesDispatchEmailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int InvoicesDispatchTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string MailConfidentialField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string UserEmailsField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string AnswersDispatchEmail {
                get {
                    return this.AnswersDispatchEmailField;
                }
                set {
                    if ((object.ReferenceEquals(this.AnswersDispatchEmailField, value) != true)) {
                        this.AnswersDispatchEmailField = value;
                        this.RaisePropertyChanged("AnswersDispatchEmail");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int AnswersDispatchType {
                get {
                    return this.AnswersDispatchTypeField;
                }
                set {
                    if ((this.AnswersDispatchTypeField.Equals(value) != true)) {
                        this.AnswersDispatchTypeField = value;
                        this.RaisePropertyChanged("AnswersDispatchType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string BalancesDispatchEmail {
                get {
                    return this.BalancesDispatchEmailField;
                }
                set {
                    if ((object.ReferenceEquals(this.BalancesDispatchEmailField, value) != true)) {
                        this.BalancesDispatchEmailField = value;
                        this.RaisePropertyChanged("BalancesDispatchEmail");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string BalancesDispatchEmailBCC {
                get {
                    return this.BalancesDispatchEmailBCCField;
                }
                set {
                    if ((object.ReferenceEquals(this.BalancesDispatchEmailBCCField, value) != true)) {
                        this.BalancesDispatchEmailBCCField = value;
                        this.RaisePropertyChanged("BalancesDispatchEmailBCC");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int BalancesDispatchType {
                get {
                    return this.BalancesDispatchTypeField;
                }
                set {
                    if ((this.BalancesDispatchTypeField.Equals(value) != true)) {
                        this.BalancesDispatchTypeField = value;
                        this.RaisePropertyChanged("BalancesDispatchType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string InvoicesDispatchEmail {
                get {
                    return this.InvoicesDispatchEmailField;
                }
                set {
                    if ((object.ReferenceEquals(this.InvoicesDispatchEmailField, value) != true)) {
                        this.InvoicesDispatchEmailField = value;
                        this.RaisePropertyChanged("InvoicesDispatchEmail");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int InvoicesDispatchType {
                get {
                    return this.InvoicesDispatchTypeField;
                }
                set {
                    if ((this.InvoicesDispatchTypeField.Equals(value) != true)) {
                        this.InvoicesDispatchTypeField = value;
                        this.RaisePropertyChanged("InvoicesDispatchType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string MailConfidential {
                get {
                    return this.MailConfidentialField;
                }
                set {
                    if ((object.ReferenceEquals(this.MailConfidentialField, value) != true)) {
                        this.MailConfidentialField = value;
                        this.RaisePropertyChanged("MailConfidential");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string UserEmails {
                get {
                    return this.UserEmailsField;
                }
                set {
                    if ((object.ReferenceEquals(this.UserEmailsField, value) != true)) {
                        this.UserEmailsField = value;
                        this.RaisePropertyChanged("UserEmails");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerAccount", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class CustomerAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte FlagAccountsCustField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private byte FlagAccountsShowField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsInvoicePrintField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsInvoiceSendField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsInvoiceTypeOnePrintField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsInvoiceTypeOneSendField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsInvoiceTypeOneViewField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsInvoiceViewField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsTorg12PrintField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsTorg12SendField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsTorg12ViewField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsUpdPrintField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsUpdSendField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsUpdViewField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int LastAccountNumberField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal MaxDebtField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal MaxDebtCoeffField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private decimal PayDeliveryField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte FlagAccountsCust {
                get {
                    return this.FlagAccountsCustField;
                }
                set {
                    if ((this.FlagAccountsCustField.Equals(value) != true)) {
                        this.FlagAccountsCustField = value;
                        this.RaisePropertyChanged("FlagAccountsCust");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public byte FlagAccountsShow {
                get {
                    return this.FlagAccountsShowField;
                }
                set {
                    if ((this.FlagAccountsShowField.Equals(value) != true)) {
                        this.FlagAccountsShowField = value;
                        this.RaisePropertyChanged("FlagAccountsShow");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsInvoicePrint {
                get {
                    return this.IsInvoicePrintField;
                }
                set {
                    if ((this.IsInvoicePrintField.Equals(value) != true)) {
                        this.IsInvoicePrintField = value;
                        this.RaisePropertyChanged("IsInvoicePrint");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsInvoiceSend {
                get {
                    return this.IsInvoiceSendField;
                }
                set {
                    if ((this.IsInvoiceSendField.Equals(value) != true)) {
                        this.IsInvoiceSendField = value;
                        this.RaisePropertyChanged("IsInvoiceSend");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsInvoiceTypeOnePrint {
                get {
                    return this.IsInvoiceTypeOnePrintField;
                }
                set {
                    if ((this.IsInvoiceTypeOnePrintField.Equals(value) != true)) {
                        this.IsInvoiceTypeOnePrintField = value;
                        this.RaisePropertyChanged("IsInvoiceTypeOnePrint");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsInvoiceTypeOneSend {
                get {
                    return this.IsInvoiceTypeOneSendField;
                }
                set {
                    if ((this.IsInvoiceTypeOneSendField.Equals(value) != true)) {
                        this.IsInvoiceTypeOneSendField = value;
                        this.RaisePropertyChanged("IsInvoiceTypeOneSend");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsInvoiceTypeOneView {
                get {
                    return this.IsInvoiceTypeOneViewField;
                }
                set {
                    if ((this.IsInvoiceTypeOneViewField.Equals(value) != true)) {
                        this.IsInvoiceTypeOneViewField = value;
                        this.RaisePropertyChanged("IsInvoiceTypeOneView");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsInvoiceView {
                get {
                    return this.IsInvoiceViewField;
                }
                set {
                    if ((this.IsInvoiceViewField.Equals(value) != true)) {
                        this.IsInvoiceViewField = value;
                        this.RaisePropertyChanged("IsInvoiceView");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsTorg12Print {
                get {
                    return this.IsTorg12PrintField;
                }
                set {
                    if ((this.IsTorg12PrintField.Equals(value) != true)) {
                        this.IsTorg12PrintField = value;
                        this.RaisePropertyChanged("IsTorg12Print");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsTorg12Send {
                get {
                    return this.IsTorg12SendField;
                }
                set {
                    if ((this.IsTorg12SendField.Equals(value) != true)) {
                        this.IsTorg12SendField = value;
                        this.RaisePropertyChanged("IsTorg12Send");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsTorg12View {
                get {
                    return this.IsTorg12ViewField;
                }
                set {
                    if ((this.IsTorg12ViewField.Equals(value) != true)) {
                        this.IsTorg12ViewField = value;
                        this.RaisePropertyChanged("IsTorg12View");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsUpdPrint {
                get {
                    return this.IsUpdPrintField;
                }
                set {
                    if ((this.IsUpdPrintField.Equals(value) != true)) {
                        this.IsUpdPrintField = value;
                        this.RaisePropertyChanged("IsUpdPrint");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsUpdSend {
                get {
                    return this.IsUpdSendField;
                }
                set {
                    if ((this.IsUpdSendField.Equals(value) != true)) {
                        this.IsUpdSendField = value;
                        this.RaisePropertyChanged("IsUpdSend");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsUpdView {
                get {
                    return this.IsUpdViewField;
                }
                set {
                    if ((this.IsUpdViewField.Equals(value) != true)) {
                        this.IsUpdViewField = value;
                        this.RaisePropertyChanged("IsUpdView");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int LastAccountNumber {
                get {
                    return this.LastAccountNumberField;
                }
                set {
                    if ((this.LastAccountNumberField.Equals(value) != true)) {
                        this.LastAccountNumberField = value;
                        this.RaisePropertyChanged("LastAccountNumber");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal MaxDebt {
                get {
                    return this.MaxDebtField;
                }
                set {
                    if ((this.MaxDebtField.Equals(value) != true)) {
                        this.MaxDebtField = value;
                        this.RaisePropertyChanged("MaxDebt");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal MaxDebtCoeff {
                get {
                    return this.MaxDebtCoeffField;
                }
                set {
                    if ((this.MaxDebtCoeffField.Equals(value) != true)) {
                        this.MaxDebtCoeffField = value;
                        this.RaisePropertyChanged("MaxDebtCoeff");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public decimal PayDelivery {
                get {
                    return this.PayDeliveryField;
                }
                set {
                    if ((this.PayDeliveryField.Equals(value) != true)) {
                        this.PayDeliveryField = value;
                        this.RaisePropertyChanged("PayDelivery");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerContract", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class CustomerContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<long> ContragentIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<System.DateTime> DateField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<int> DogovorIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool HasNdsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string LogoField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NumberField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SchetField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<long> ContragentId {
                get {
                    return this.ContragentIdField;
                }
                set {
                    if ((this.ContragentIdField.Equals(value) != true)) {
                        this.ContragentIdField = value;
                        this.RaisePropertyChanged("ContragentId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<System.DateTime> Date {
                get {
                    return this.DateField;
                }
                set {
                    if ((this.DateField.Equals(value) != true)) {
                        this.DateField = value;
                        this.RaisePropertyChanged("Date");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<int> DogovorId {
                get {
                    return this.DogovorIdField;
                }
                set {
                    if ((this.DogovorIdField.Equals(value) != true)) {
                        this.DogovorIdField = value;
                        this.RaisePropertyChanged("DogovorId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool HasNds {
                get {
                    return this.HasNdsField;
                }
                set {
                    if ((this.HasNdsField.Equals(value) != true)) {
                        this.HasNdsField = value;
                        this.RaisePropertyChanged("HasNds");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Logo {
                get {
                    return this.LogoField;
                }
                set {
                    if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                        this.LogoField = value;
                        this.RaisePropertyChanged("Logo");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Number {
                get {
                    return this.NumberField;
                }
                set {
                    if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                        this.NumberField = value;
                        this.RaisePropertyChanged("Number");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Schet {
                get {
                    return this.SchetField;
                }
                set {
                    if ((object.ReferenceEquals(this.SchetField, value) != true)) {
                        this.SchetField = value;
                        this.RaisePropertyChanged("Schet");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerPrintSetting", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class CustomerPrintSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int DocumentCopiesField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool IsPrintPackSheetField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int DocumentCopies {
                get {
                    return this.DocumentCopiesField;
                }
                set {
                    if ((this.DocumentCopiesField.Equals(value) != true)) {
                        this.DocumentCopiesField = value;
                        this.RaisePropertyChanged("DocumentCopies");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool IsPrintPackSheet {
                get {
                    return this.IsPrintPackSheetField;
                }
                set {
                    if ((this.IsPrintPackSheetField.Equals(value) != true)) {
                        this.IsPrintPackSheetField = value;
                        this.RaisePropertyChanged("IsPrintPackSheet");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Customer.CustomerStatus", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
        [System.SerializableAttribute()]
        public partial class CustomerStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Collections.Specialized.BitVector32 _flagsField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Collections.Specialized.BitVector32 _flags {
                get {
                    return this._flagsField;
                }
                set {
                    if ((this._flagsField.Equals(value) != true)) {
                        this._flagsField = value;
                        this.RaisePropertyChanged("_flags");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    public enum AddressType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Legal = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Actual = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delivery = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierDocumentReturnCard", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class SupplierDocumentReturnCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanOverSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanRecreateReturnDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CanRevocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DiadocDateSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocHyperlinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DocumentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumberSFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumberStandartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InvoiceSfLostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRowHiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecreateReturnDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ReturnDocumentIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunOverSetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RunRevocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeLostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanOverSet {
            get {
                return this.CanOverSetField;
            }
            set {
                if ((this.CanOverSetField.Equals(value) != true)) {
                    this.CanOverSetField = value;
                    this.RaisePropertyChanged("CanOverSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanRecreateReturnDocument {
            get {
                return this.CanRecreateReturnDocumentField;
            }
            set {
                if ((this.CanRecreateReturnDocumentField.Equals(value) != true)) {
                    this.CanRecreateReturnDocumentField = value;
                    this.RaisePropertyChanged("CanRecreateReturnDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanRevocation {
            get {
                return this.CanRevocationField;
            }
            set {
                if ((this.CanRevocationField.Equals(value) != true)) {
                    this.CanRevocationField = value;
                    this.RaisePropertyChanged("CanRevocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DiadocDateSet {
            get {
                return this.DiadocDateSetField;
            }
            set {
                if ((this.DiadocDateSetField.Equals(value) != true)) {
                    this.DiadocDateSetField = value;
                    this.RaisePropertyChanged("DiadocDateSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocHyperlink {
            get {
                return this.DocHyperlinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DocHyperlinkField, value) != true)) {
                    this.DocHyperlinkField = value;
                    this.RaisePropertyChanged("DocHyperlink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocNumber {
            get {
                return this.DocNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocNumberField, value) != true)) {
                    this.DocNumberField = value;
                    this.RaisePropertyChanged("DocNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DocumentDate {
            get {
                return this.DocumentDateField;
            }
            set {
                if ((this.DocumentDateField.Equals(value) != true)) {
                    this.DocumentDateField = value;
                    this.RaisePropertyChanged("DocumentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DocumentId {
            get {
                return this.DocumentIdField;
            }
            set {
                if ((this.DocumentIdField.Equals(value) != true)) {
                    this.DocumentIdField = value;
                    this.RaisePropertyChanged("DocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertDate {
            get {
                return this.InsertDateField;
            }
            set {
                if ((this.InsertDateField.Equals(value) != true)) {
                    this.InsertDateField = value;
                    this.RaisePropertyChanged("InsertDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumberSF {
            get {
                return this.InvoiceNumberSFField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberSFField, value) != true)) {
                    this.InvoiceNumberSFField = value;
                    this.RaisePropertyChanged("InvoiceNumberSF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumberStandart {
            get {
                return this.InvoiceNumberStandartField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberStandartField, value) != true)) {
                    this.InvoiceNumberStandartField = value;
                    this.RaisePropertyChanged("InvoiceNumberStandart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InvoiceSfLostId {
            get {
                return this.InvoiceSfLostIdField;
            }
            set {
                if ((this.InvoiceSfLostIdField.Equals(value) != true)) {
                    this.InvoiceSfLostIdField = value;
                    this.RaisePropertyChanged("InvoiceSfLostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRowHidden {
            get {
                return this.IsRowHiddenField;
            }
            set {
                if ((this.IsRowHiddenField.Equals(value) != true)) {
                    this.IsRowHiddenField = value;
                    this.RaisePropertyChanged("IsRowHidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecreateReturnDocument {
            get {
                return this.RecreateReturnDocumentField;
            }
            set {
                if ((this.RecreateReturnDocumentField.Equals(value) != true)) {
                    this.RecreateReturnDocumentField = value;
                    this.RaisePropertyChanged("RecreateReturnDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] ReturnDocumentIds {
            get {
                return this.ReturnDocumentIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnDocumentIdsField, value) != true)) {
                    this.ReturnDocumentIdsField = value;
                    this.RaisePropertyChanged("ReturnDocumentIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RunOverSet {
            get {
                return this.RunOverSetField;
            }
            set {
                if ((this.RunOverSetField.Equals(value) != true)) {
                    this.RunOverSetField = value;
                    this.RaisePropertyChanged("RunOverSet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RunRevocation {
            get {
                return this.RunRevocationField;
            }
            set {
                if ((this.RunRevocationField.Equals(value) != true)) {
                    this.RunRevocationField = value;
                    this.RaisePropertyChanged("RunRevocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierLogo {
            get {
                return this.SupplierLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierLogoField, value) != true)) {
                    this.SupplierLogoField = value;
                    this.RaisePropertyChanged("SupplierLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeLost {
            get {
                return this.TypeLostField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeLostField, value) != true)) {
                    this.TypeLostField = value;
                    this.RaisePropertyChanged("TypeLost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentSticker", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class DocumentSticker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReestrObjectIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAndTime {
            get {
                return this.DateAndTimeField;
            }
            set {
                if ((this.DateAndTimeField.Equals(value) != true)) {
                    this.DateAndTimeField = value;
                    this.RaisePropertyChanged("DateAndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocDate {
            get {
                return this.DocDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DocDateField, value) != true)) {
                    this.DocDateField = value;
                    this.RaisePropertyChanged("DocDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocNumber {
            get {
                return this.DocNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocNumberField, value) != true)) {
                    this.DocNumberField = value;
                    this.RaisePropertyChanged("DocNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReestrObjectId {
            get {
                return this.ReestrObjectIdField;
            }
            set {
                if ((this.ReestrObjectIdField.Equals(value) != true)) {
                    this.ReestrObjectIdField = value;
                    this.RaisePropertyChanged("ReestrObjectId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransportDocumentSticker", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class TransportDocumentSticker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateAndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReestrObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipperCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipperContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipperNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAndTime {
            get {
                return this.DateAndTimeField;
            }
            set {
                if ((this.DateAndTimeField.Equals(value) != true)) {
                    this.DateAndTimeField = value;
                    this.RaisePropertyChanged("DateAndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReestrObjectId {
            get {
                return this.ReestrObjectIdField;
            }
            set {
                if ((this.ReestrObjectIdField.Equals(value) != true)) {
                    this.ReestrObjectIdField = value;
                    this.RaisePropertyChanged("ReestrObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipperCity {
            get {
                return this.ShipperCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipperCityField, value) != true)) {
                    this.ShipperCityField = value;
                    this.RaisePropertyChanged("ShipperCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipperContact {
            get {
                return this.ShipperContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipperContactField, value) != true)) {
                    this.ShipperContactField = value;
                    this.RaisePropertyChanged("ShipperContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipperName {
            get {
                return this.ShipperNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipperNameField, value) != true)) {
                    this.ShipperNameField = value;
                    this.RaisePropertyChanged("ShipperName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Decommission", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class Decommission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecycledDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecyclingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SummaWithoutNDSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecycledDocumentId {
            get {
                return this.RecycledDocumentIdField;
            }
            set {
                if ((this.RecycledDocumentIdField.Equals(value) != true)) {
                    this.RecycledDocumentIdField = value;
                    this.RaisePropertyChanged("RecycledDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecyclingType {
            get {
                return this.RecyclingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecyclingTypeField, value) != true)) {
                    this.RecyclingTypeField = value;
                    this.RaisePropertyChanged("RecyclingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SummaWithoutNDS {
            get {
                return this.SummaWithoutNDSField;
            }
            set {
                if ((this.SummaWithoutNDSField.Equals(value) != true)) {
                    this.SummaWithoutNDSField = value;
                    this.RaisePropertyChanged("SummaWithoutNDS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DecommissionDetail", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class DecommissionDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetailQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderDetailSubIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecycledDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecycledDocumentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecyclingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendToUtilizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceBarcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailName {
            get {
                return this.DetailNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameField, value) != true)) {
                    this.DetailNameField = value;
                    this.RaisePropertyChanged("DetailName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNum {
            get {
                return this.DetailNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNumField, value) != true)) {
                    this.DetailNumField = value;
                    this.RaisePropertyChanged("DetailNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetailQuantity {
            get {
                return this.DetailQuantityField;
            }
            set {
                if ((this.DetailQuantityField.Equals(value) != true)) {
                    this.DetailQuantityField = value;
                    this.RaisePropertyChanged("DetailQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeName {
            get {
                return this.MakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeNameField, value) != true)) {
                    this.MakeNameField = value;
                    this.RaisePropertyChanged("MakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderDetailSubId {
            get {
                return this.OrderDetailSubIdField;
            }
            set {
                if ((this.OrderDetailSubIdField.Equals(value) != true)) {
                    this.OrderDetailSubIdField = value;
                    this.RaisePropertyChanged("OrderDetailSubId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Portion {
            get {
                return this.PortionField;
            }
            set {
                if ((this.PortionField.Equals(value) != true)) {
                    this.PortionField = value;
                    this.RaisePropertyChanged("Portion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecycledDetailId {
            get {
                return this.RecycledDetailIdField;
            }
            set {
                if ((this.RecycledDetailIdField.Equals(value) != true)) {
                    this.RecycledDetailIdField = value;
                    this.RaisePropertyChanged("RecycledDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecycledDocumentId {
            get {
                return this.RecycledDocumentIdField;
            }
            set {
                if ((this.RecycledDocumentIdField.Equals(value) != true)) {
                    this.RecycledDocumentIdField = value;
                    this.RaisePropertyChanged("RecycledDocumentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecyclingType {
            get {
                return this.RecyclingTypeField;
            }
            set {
                if ((this.RecyclingTypeField.Equals(value) != true)) {
                    this.RecyclingTypeField = value;
                    this.RaisePropertyChanged("RecyclingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendToUtilization {
            get {
                return this.SendToUtilizationField;
            }
            set {
                if ((this.SendToUtilizationField.Equals(value) != true)) {
                    this.SendToUtilizationField = value;
                    this.RaisePropertyChanged("SendToUtilization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceBarcode {
            get {
                return this.SourceBarcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceBarcodeField, value) != true)) {
                    this.SourceBarcodeField = value;
                    this.RaisePropertyChanged("SourceBarcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountCard", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class AccountCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccountDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BalanceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArchiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int buhBalanceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccountDate {
            get {
                return this.AccountDateField;
            }
            set {
                if ((this.AccountDateField.Equals(value) != true)) {
                    this.AccountDateField = value;
                    this.RaisePropertyChanged("AccountDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((this.AccountNumberField.Equals(value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BalanceName {
            get {
                return this.BalanceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceNameField, value) != true)) {
                    this.BalanceNameField = value;
                    this.RaisePropertyChanged("BalanceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLogo {
            get {
                return this.CustomerLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLogoField, value) != true)) {
                    this.CustomerLogoField = value;
                    this.RaisePropertyChanged("CustomerLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocType {
            get {
                return this.DocTypeField;
            }
            set {
                if ((this.DocTypeField.Equals(value) != true)) {
                    this.DocTypeField = value;
                    this.RaisePropertyChanged("DocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNumber {
            get {
                return this.InvoiceNumberField;
            }
            set {
                if ((this.InvoiceNumberField.Equals(value) != true)) {
                    this.InvoiceNumberField = value;
                    this.RaisePropertyChanged("InvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArchive {
            get {
                return this.IsArchiveField;
            }
            set {
                if ((this.IsArchiveField.Equals(value) != true)) {
                    this.IsArchiveField = value;
                    this.RaisePropertyChanged("IsArchive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsError {
            get {
                return this.IsErrorField;
            }
            set {
                if ((this.IsErrorField.Equals(value) != true)) {
                    this.IsErrorField = value;
                    this.RaisePropertyChanged("IsError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSum {
            get {
                return this.TotalSumField;
            }
            set {
                if ((this.TotalSumField.Equals(value) != true)) {
                    this.TotalSumField = value;
                    this.RaisePropertyChanged("TotalSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int buhBalanceId {
            get {
                return this.buhBalanceIdField;
            }
            set {
                if ((this.buhBalanceIdField.Equals(value) != true)) {
                    this.buhBalanceIdField = value;
                    this.RaisePropertyChanged("buhBalanceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountCard2", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountCard3))]
    public partial class AccountCard2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccountDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BalanceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DocTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InvoiceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsArchiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int buhBalanceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccountDate {
            get {
                return this.AccountDateField;
            }
            set {
                if ((this.AccountDateField.Equals(value) != true)) {
                    this.AccountDateField = value;
                    this.RaisePropertyChanged("AccountDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((this.AccountNumberField.Equals(value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BalanceName {
            get {
                return this.BalanceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BalanceNameField, value) != true)) {
                    this.BalanceNameField = value;
                    this.RaisePropertyChanged("BalanceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLogo {
            get {
                return this.CustomerLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLogoField, value) != true)) {
                    this.CustomerLogoField = value;
                    this.RaisePropertyChanged("CustomerLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte DocType {
            get {
                return this.DocTypeField;
            }
            set {
                if ((this.DocTypeField.Equals(value) != true)) {
                    this.DocTypeField = value;
                    this.RaisePropertyChanged("DocType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvoiceNumber {
            get {
                return this.InvoiceNumberField;
            }
            set {
                if ((this.InvoiceNumberField.Equals(value) != true)) {
                    this.InvoiceNumberField = value;
                    this.RaisePropertyChanged("InvoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsArchive {
            get {
                return this.IsArchiveField;
            }
            set {
                if ((this.IsArchiveField.Equals(value) != true)) {
                    this.IsArchiveField = value;
                    this.RaisePropertyChanged("IsArchive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsError {
            get {
                return this.IsErrorField;
            }
            set {
                if ((this.IsErrorField.Equals(value) != true)) {
                    this.IsErrorField = value;
                    this.RaisePropertyChanged("IsError");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSum {
            get {
                return this.TotalSumField;
            }
            set {
                if ((this.TotalSumField.Equals(value) != true)) {
                    this.TotalSumField = value;
                    this.RaisePropertyChanged("TotalSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int buhBalanceId {
            get {
                return this.buhBalanceIdField;
            }
            set {
                if ((this.buhBalanceIdField.Equals(value) != true)) {
                    this.buhBalanceIdField = value;
                    this.RaisePropertyChanged("buhBalanceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountCard3", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class AccountCard3 : EmExServiceClient.ContragentService.AccountCard2 {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNumberStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDocumentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentLink {
            get {
                return this.DocumentLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentLinkField, value) != true)) {
                    this.DocumentLinkField = value;
                    this.RaisePropertyChanged("DocumentLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceNumberString {
            get {
                return this.InvoiceNumberStringField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNumberStringField, value) != true)) {
                    this.InvoiceNumberStringField = value;
                    this.RaisePropertyChanged("InvoiceNumberString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDocument {
            get {
                return this.StatusDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDocumentField, value) != true)) {
                    this.StatusDocumentField = value;
                    this.RaisePropertyChanged("StatusDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDocument {
            get {
                return this.TypeDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDocumentField, value) != true)) {
                    this.TypeDocumentField = value;
                    this.RaisePropertyChanged("TypeDocument");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiadocDocumentStatus", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class DiadocDocumentStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDocument {
            get {
                return this.StatusDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDocumentField, value) != true)) {
                    this.StatusDocumentField = value;
                    this.RaisePropertyChanged("StatusDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentReturnCard", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class DocumentReturnCard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AccountDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DefectPreDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> DefectPreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefectPreNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListOfClaimHeadersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListOfUkdHeadersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListOfСorrectionInvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Torg12DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Torg12NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Torg2DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> Torg2IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Torg2NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalSumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VVDocNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VVFullPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AccountDate {
            get {
                return this.AccountDateField;
            }
            set {
                if ((this.AccountDateField.Equals(value) != true)) {
                    this.AccountDateField = value;
                    this.RaisePropertyChanged("AccountDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLogo {
            get {
                return this.CustomerLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLogoField, value) != true)) {
                    this.CustomerLogoField = value;
                    this.RaisePropertyChanged("CustomerLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DefectPreDate {
            get {
                return this.DefectPreDateField;
            }
            set {
                if ((this.DefectPreDateField.Equals(value) != true)) {
                    this.DefectPreDateField = value;
                    this.RaisePropertyChanged("DefectPreDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> DefectPreId {
            get {
                return this.DefectPreIdField;
            }
            set {
                if ((this.DefectPreIdField.Equals(value) != true)) {
                    this.DefectPreIdField = value;
                    this.RaisePropertyChanged("DefectPreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefectPreNumber {
            get {
                return this.DefectPreNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectPreNumberField, value) != true)) {
                    this.DefectPreNumberField = value;
                    this.RaisePropertyChanged("DefectPreNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListOfClaimHeaders {
            get {
                return this.ListOfClaimHeadersField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfClaimHeadersField, value) != true)) {
                    this.ListOfClaimHeadersField = value;
                    this.RaisePropertyChanged("ListOfClaimHeaders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListOfUkdHeaders {
            get {
                return this.ListOfUkdHeadersField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfUkdHeadersField, value) != true)) {
                    this.ListOfUkdHeadersField = value;
                    this.RaisePropertyChanged("ListOfUkdHeaders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListOfСorrectionInvoiceId {
            get {
                return this.ListOfСorrectionInvoiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ListOfСorrectionInvoiceIdField, value) != true)) {
                    this.ListOfСorrectionInvoiceIdField = value;
                    this.RaisePropertyChanged("ListOfСorrectionInvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Torg12Date {
            get {
                return this.Torg12DateField;
            }
            set {
                if ((this.Torg12DateField.Equals(value) != true)) {
                    this.Torg12DateField = value;
                    this.RaisePropertyChanged("Torg12Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Torg12Number {
            get {
                return this.Torg12NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Torg12NumberField, value) != true)) {
                    this.Torg12NumberField = value;
                    this.RaisePropertyChanged("Torg12Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Torg2Date {
            get {
                return this.Torg2DateField;
            }
            set {
                if ((object.ReferenceEquals(this.Torg2DateField, value) != true)) {
                    this.Torg2DateField = value;
                    this.RaisePropertyChanged("Torg2Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> Torg2Id {
            get {
                return this.Torg2IdField;
            }
            set {
                if ((this.Torg2IdField.Equals(value) != true)) {
                    this.Torg2IdField = value;
                    this.RaisePropertyChanged("Torg2Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Torg2Number {
            get {
                return this.Torg2NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Torg2NumberField, value) != true)) {
                    this.Torg2NumberField = value;
                    this.RaisePropertyChanged("Torg2Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalSum {
            get {
                return this.TotalSumField;
            }
            set {
                if ((this.TotalSumField.Equals(value) != true)) {
                    this.TotalSumField = value;
                    this.RaisePropertyChanged("TotalSum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VVDocNumber {
            get {
                return this.VVDocNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.VVDocNumberField, value) != true)) {
                    this.VVDocNumberField = value;
                    this.RaisePropertyChanged("VVDocNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> VVFullPrice {
            get {
                return this.VVFullPriceField;
            }
            set {
                if ((this.VVFullPriceField.Equals(value) != true)) {
                    this.VVFullPriceField = value;
                    this.RaisePropertyChanged("VVFullPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentOptions", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    public enum DocumentOptions : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Print = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Send = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnExcel = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnImage = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnPDF = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnCSV = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Save = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnDoc = 64,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentReasonType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    public enum DocumentReasonType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Account = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceClose = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ClientReturn = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMRShipping = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoName = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WMSCloseCollect = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WMSCloseShipping = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicesSFProcessingPayment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalStorageAccount = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplierPenalty = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplierReturn = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnFromCustomer = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BarcodeProcessingPayment = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicesSFOnlineClientPayment = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        JointProcessingPayment = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OF8WebService = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProtectionFromReturnPayment = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplierReturnSale = 32,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    public enum DocumentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Torg12 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoice = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceTypeOne = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerBarcodeFile = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PackSheet = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Statement = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        M11DemandBill = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Torg12WithGrouping = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TTN = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TORG2 = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ActSurplusTORG2 = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        M15 = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InfoLost = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMR = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsuranceRequest = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RegionPackSheet = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BuhAccountPlan = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Torg12Return = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Upd = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdReturn = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ukd = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Counterfeit = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ksf = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_1 = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_2 = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_3 = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_4 = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_5 = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_6 = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_7 = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_8 = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_9 = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Util_2_10 = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryList = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryOrder = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryRegister = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryCollationStatement = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryResultDirective = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DueDiligence = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupplierReturnsRegister = 65,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActRecycling", Namespace="http://schemas.datacontract.org/2004/07/Emex.Document")]
    [System.SerializableAttribute()]
    public partial class ActRecycling : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ActDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarcodeDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BarcodeImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SummaWithoutTaxField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActDate {
            get {
                return this.ActDateField;
            }
            set {
                if ((this.ActDateField.Equals(value) != true)) {
                    this.ActDateField = value;
                    this.RaisePropertyChanged("ActDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActNumber {
            get {
                return this.ActNumberField;
            }
            set {
                if ((this.ActNumberField.Equals(value) != true)) {
                    this.ActNumberField = value;
                    this.RaisePropertyChanged("ActNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BarcodeData {
            get {
                return this.BarcodeDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BarcodeDataField, value) != true)) {
                    this.BarcodeDataField = value;
                    this.RaisePropertyChanged("BarcodeData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] BarcodeImage {
            get {
                return this.BarcodeImageField;
            }
            set {
                if ((object.ReferenceEquals(this.BarcodeImageField, value) != true)) {
                    this.BarcodeImageField = value;
                    this.RaisePropertyChanged("BarcodeImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SummaWithoutTax {
            get {
                return this.SummaWithoutTaxField;
            }
            set {
                if ((this.SummaWithoutTaxField.Equals(value) != true)) {
                    this.SummaWithoutTaxField = value;
                    this.RaisePropertyChanged("SummaWithoutTax");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactTypes", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    public enum ContactTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CEO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Director = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChiefAccountant = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accountant = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReturnDocuments = 18,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierBase", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class SupplierBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string LogoField;
        
        private long SupplierIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDiscountManual", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class CustomerDiscountManual : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discounts {
            get {
                return this.DiscountsField;
            }
            set {
                if ((this.DiscountsField.Equals(value) != true)) {
                    this.DiscountsField = value;
                    this.RaisePropertyChanged("Discounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireDate {
            get {
                return this.ExpireDateField;
            }
            set {
                if ((this.ExpireDateField.Equals(value) != true)) {
                    this.ExpireDateField = value;
                    this.RaisePropertyChanged("ExpireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLogo {
            get {
                return this.UserLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLogoField, value) != true)) {
                    this.UserLogoField = value;
                    this.RaisePropertyChanged("UserLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    public enum PartnerType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Partner = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Partner3Rank = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Companion = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    public enum WorkType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdvancePayment = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WithoutAdvancePayment = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerSearchResultItem", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class CustomerSearchResultItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ContragentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerSearchResultItemType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WholesalerLogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ContragentId {
            get {
                return this.ContragentIdField;
            }
            set {
                if ((this.ContragentIdField.Equals(value) != true)) {
                    this.ContragentIdField = value;
                    this.RaisePropertyChanged("ContragentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClosed {
            get {
                return this.IsClosedField;
            }
            set {
                if ((this.IsClosedField.Equals(value) != true)) {
                    this.IsClosedField = value;
                    this.RaisePropertyChanged("IsClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerSearchResultItemType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WholesalerLogo {
            get {
                return this.WholesalerLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.WholesalerLogoField, value) != true)) {
                    this.WholesalerLogoField = value;
                    this.RaisePropertyChanged("WholesalerLogo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerSearchResultItemType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    public enum CustomerSearchResultItemType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wholesaler = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Consumer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerIdentity", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class CustomerIdentity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INN {
            get {
                return this.INNField;
            }
            set {
                if ((object.ReferenceEquals(this.INNField, value) != true)) {
                    this.INNField = value;
                    this.RaisePropertyChanged("INN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContragentDocumentSetting", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class ContragentDocumentSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte CopiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.GatheringSchemeType GatheringSchemesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DocumentOptions OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrinterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DocumentReasonType ReasonTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DocumentType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VersionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte VersionNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Copies {
            get {
                return this.CopiesField;
            }
            set {
                if ((this.CopiesField.Equals(value) != true)) {
                    this.CopiesField = value;
                    this.RaisePropertyChanged("Copies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.GatheringSchemeType GatheringSchemes {
            get {
                return this.GatheringSchemesField;
            }
            set {
                if ((this.GatheringSchemesField.Equals(value) != true)) {
                    this.GatheringSchemesField = value;
                    this.RaisePropertyChanged("GatheringSchemes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DocumentOptions Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((this.OptionsField.Equals(value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrinterName {
            get {
                return this.PrinterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterNameField, value) != true)) {
                    this.PrinterNameField = value;
                    this.RaisePropertyChanged("PrinterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DocumentReasonType ReasonType {
            get {
                return this.ReasonTypeField;
            }
            set {
                if ((this.ReasonTypeField.Equals(value) != true)) {
                    this.ReasonTypeField = value;
                    this.RaisePropertyChanged("ReasonType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DocumentType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VersionId {
            get {
                return this.VersionIdField;
            }
            set {
                if ((this.VersionIdField.Equals(value) != true)) {
                    this.VersionIdField = value;
                    this.RaisePropertyChanged("VersionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDelivery", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class CustomerDelivery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AdditionalTransporterContragentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoxReturnReusingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentForAccountButtonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentForMobileRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> TransportCompanyGateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AdditionalTransporterContragentId {
            get {
                return this.AdditionalTransporterContragentIdField;
            }
            set {
                if ((this.AdditionalTransporterContragentIdField.Equals(value) != true)) {
                    this.AdditionalTransporterContragentIdField = value;
                    this.RaisePropertyChanged("AdditionalTransporterContragentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoxReturnReusing {
            get {
                return this.BoxReturnReusingField;
            }
            set {
                if ((this.BoxReturnReusingField.Equals(value) != true)) {
                    this.BoxReturnReusingField = value;
                    this.RaisePropertyChanged("BoxReturnReusing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentForAccountButton {
            get {
                return this.CommentForAccountButtonField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentForAccountButtonField, value) != true)) {
                    this.CommentForAccountButtonField = value;
                    this.RaisePropertyChanged("CommentForAccountButton");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentForMobileRegion {
            get {
                return this.CommentForMobileRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentForMobileRegionField, value) != true)) {
                    this.CommentForMobileRegionField = value;
                    this.RaisePropertyChanged("CommentForMobileRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipient {
            get {
                return this.RecipientField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientField, value) != true)) {
                    this.RecipientField = value;
                    this.RaisePropertyChanged("Recipient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> TransportCompanyGate {
            get {
                return this.TransportCompanyGateField;
            }
            set {
                if ((this.TransportCompanyGateField.Equals(value) != true)) {
                    this.TransportCompanyGateField = value;
                    this.RaisePropertyChanged("TransportCompanyGate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContragentIdentity", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class ContragentIdentity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerScheduleAttribute", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class CustomerScheduleAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerScheduleAccountMode AccountModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DAY_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DAY_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DAY_3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DAY_4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DAY_5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DAY_6Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DAY_7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<byte> DaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.DeliveryRegionType DeliveryRegionTypeAttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAlternativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCustomerScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinSumCostForAutoOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MinWeightForAutoOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PrepareForAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScheduleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.TransportCompany TransportCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransportCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransportDaysField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerScheduleAccountMode AccountMode {
            get {
                return this.AccountModeField;
            }
            set {
                if ((this.AccountModeField.Equals(value) != true)) {
                    this.AccountModeField = value;
                    this.RaisePropertyChanged("AccountMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DAY_1 {
            get {
                return this.DAY_1Field;
            }
            set {
                if ((object.ReferenceEquals(this.DAY_1Field, value) != true)) {
                    this.DAY_1Field = value;
                    this.RaisePropertyChanged("DAY_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DAY_2 {
            get {
                return this.DAY_2Field;
            }
            set {
                if ((object.ReferenceEquals(this.DAY_2Field, value) != true)) {
                    this.DAY_2Field = value;
                    this.RaisePropertyChanged("DAY_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DAY_3 {
            get {
                return this.DAY_3Field;
            }
            set {
                if ((object.ReferenceEquals(this.DAY_3Field, value) != true)) {
                    this.DAY_3Field = value;
                    this.RaisePropertyChanged("DAY_3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DAY_4 {
            get {
                return this.DAY_4Field;
            }
            set {
                if ((object.ReferenceEquals(this.DAY_4Field, value) != true)) {
                    this.DAY_4Field = value;
                    this.RaisePropertyChanged("DAY_4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DAY_5 {
            get {
                return this.DAY_5Field;
            }
            set {
                if ((object.ReferenceEquals(this.DAY_5Field, value) != true)) {
                    this.DAY_5Field = value;
                    this.RaisePropertyChanged("DAY_5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DAY_6 {
            get {
                return this.DAY_6Field;
            }
            set {
                if ((object.ReferenceEquals(this.DAY_6Field, value) != true)) {
                    this.DAY_6Field = value;
                    this.RaisePropertyChanged("DAY_6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DAY_7 {
            get {
                return this.DAY_7Field;
            }
            set {
                if ((object.ReferenceEquals(this.DAY_7Field, value) != true)) {
                    this.DAY_7Field = value;
                    this.RaisePropertyChanged("DAY_7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> Days {
            get {
                return this.DaysField;
            }
            set {
                if ((this.DaysField.Equals(value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.DeliveryRegionType DeliveryRegionTypeAttributes {
            get {
                return this.DeliveryRegionTypeAttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryRegionTypeAttributesField, value) != true)) {
                    this.DeliveryRegionTypeAttributesField = value;
                    this.RaisePropertyChanged("DeliveryRegionTypeAttributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAlternative {
            get {
                return this.IsAlternativeField;
            }
            set {
                if ((this.IsAlternativeField.Equals(value) != true)) {
                    this.IsAlternativeField = value;
                    this.RaisePropertyChanged("IsAlternative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCustomerSchedule {
            get {
                return this.IsCustomerScheduleField;
            }
            set {
                if ((this.IsCustomerScheduleField.Equals(value) != true)) {
                    this.IsCustomerScheduleField = value;
                    this.RaisePropertyChanged("IsCustomerSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinSumCostForAutoOut {
            get {
                return this.MinSumCostForAutoOutField;
            }
            set {
                if ((this.MinSumCostForAutoOutField.Equals(value) != true)) {
                    this.MinSumCostForAutoOutField = value;
                    this.RaisePropertyChanged("MinSumCostForAutoOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MinWeightForAutoOut {
            get {
                return this.MinWeightForAutoOutField;
            }
            set {
                if ((this.MinWeightForAutoOutField.Equals(value) != true)) {
                    this.MinWeightForAutoOutField = value;
                    this.RaisePropertyChanged("MinWeightForAutoOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PrepareForAccount {
            get {
                return this.PrepareForAccountField;
            }
            set {
                if ((this.PrepareForAccountField.Equals(value) != true)) {
                    this.PrepareForAccountField = value;
                    this.RaisePropertyChanged("PrepareForAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ScheduleId {
            get {
                return this.ScheduleIdField;
            }
            set {
                if ((this.ScheduleIdField.Equals(value) != true)) {
                    this.ScheduleIdField = value;
                    this.RaisePropertyChanged("ScheduleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.TransportCompany TransportCompany {
            get {
                return this.TransportCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.TransportCompanyField, value) != true)) {
                    this.TransportCompanyField = value;
                    this.RaisePropertyChanged("TransportCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransportCompanyId {
            get {
                return this.TransportCompanyIdField;
            }
            set {
                if ((this.TransportCompanyIdField.Equals(value) != true)) {
                    this.TransportCompanyIdField = value;
                    this.RaisePropertyChanged("TransportCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransportDays {
            get {
                return this.TransportDaysField;
            }
            set {
                if ((this.TransportDaysField.Equals(value) != true)) {
                    this.TransportDaysField = value;
                    this.RaisePropertyChanged("TransportDays");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerScheduleAccountMode", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    public enum CustomerScheduleAccountMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CollectionIsForbidden = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StandardCharge = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UrgentCollection = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDiscountHistoryItem", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class CustomerDiscountHistoryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MoneyTurnoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MoneyTurnover {
            get {
                return this.MoneyTurnoverField;
            }
            set {
                if ((this.MoneyTurnoverField.Equals(value) != true)) {
                    this.MoneyTurnoverField = value;
                    this.RaisePropertyChanged("MoneyTurnover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerBalance", Namespace="http://schemas.datacontract.org/2004/07/Emex.Contragent")]
    [System.SerializableAttribute()]
    public partial class CustomerBalance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AllowAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AllowOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BalanceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DebtAccountBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DebtOnLocalWarehouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DebtOrderBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InorderBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPartialReceiptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaxDebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageEmExField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OborotPrevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ReadyForAccountBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReadyForAccountQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SaldoBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SaldoForPartialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StorageBNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumDetailWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bitCustomerBalanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AllowAccount {
            get {
                return this.AllowAccountField;
            }
            set {
                if ((this.AllowAccountField.Equals(value) != true)) {
                    this.AllowAccountField = value;
                    this.RaisePropertyChanged("AllowAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AllowOrder {
            get {
                return this.AllowOrderField;
            }
            set {
                if ((this.AllowOrderField.Equals(value) != true)) {
                    this.AllowOrderField = value;
                    this.RaisePropertyChanged("AllowOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BalanceDate {
            get {
                return this.BalanceDateField;
            }
            set {
                if ((this.BalanceDateField.Equals(value) != true)) {
                    this.BalanceDateField = value;
                    this.RaisePropertyChanged("BalanceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DebtAccountBN {
            get {
                return this.DebtAccountBNField;
            }
            set {
                if ((this.DebtAccountBNField.Equals(value) != true)) {
                    this.DebtAccountBNField = value;
                    this.RaisePropertyChanged("DebtAccountBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DebtOnLocalWarehouse {
            get {
                return this.DebtOnLocalWarehouseField;
            }
            set {
                if ((this.DebtOnLocalWarehouseField.Equals(value) != true)) {
                    this.DebtOnLocalWarehouseField = value;
                    this.RaisePropertyChanged("DebtOnLocalWarehouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DebtOrderBN {
            get {
                return this.DebtOrderBNField;
            }
            set {
                if ((this.DebtOrderBNField.Equals(value) != true)) {
                    this.DebtOrderBNField = value;
                    this.RaisePropertyChanged("DebtOrderBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fine {
            get {
                return this.FineField;
            }
            set {
                if ((this.FineField.Equals(value) != true)) {
                    this.FineField = value;
                    this.RaisePropertyChanged("Fine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InorderBN {
            get {
                return this.InorderBNField;
            }
            set {
                if ((this.InorderBNField.Equals(value) != true)) {
                    this.InorderBNField = value;
                    this.RaisePropertyChanged("InorderBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPartialReceipt {
            get {
                return this.IsPartialReceiptField;
            }
            set {
                if ((this.IsPartialReceiptField.Equals(value) != true)) {
                    this.IsPartialReceiptField = value;
                    this.RaisePropertyChanged("IsPartialReceipt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxDebt {
            get {
                return this.MaxDebtField;
            }
            set {
                if ((this.MaxDebtField.Equals(value) != true)) {
                    this.MaxDebtField = value;
                    this.RaisePropertyChanged("MaxDebt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageCustomer {
            get {
                return this.MessageCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageCustomerField, value) != true)) {
                    this.MessageCustomerField = value;
                    this.RaisePropertyChanged("MessageCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageEmEx {
            get {
                return this.MessageEmExField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageEmExField, value) != true)) {
                    this.MessageEmExField = value;
                    this.RaisePropertyChanged("MessageEmEx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OborotPrev {
            get {
                return this.OborotPrevField;
            }
            set {
                if ((this.OborotPrevField.Equals(value) != true)) {
                    this.OborotPrevField = value;
                    this.RaisePropertyChanged("OborotPrev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ReadyForAccountBN {
            get {
                return this.ReadyForAccountBNField;
            }
            set {
                if ((this.ReadyForAccountBNField.Equals(value) != true)) {
                    this.ReadyForAccountBNField = value;
                    this.RaisePropertyChanged("ReadyForAccountBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReadyForAccountQuantity {
            get {
                return this.ReadyForAccountQuantityField;
            }
            set {
                if ((this.ReadyForAccountQuantityField.Equals(value) != true)) {
                    this.ReadyForAccountQuantityField = value;
                    this.RaisePropertyChanged("ReadyForAccountQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SaldoBN {
            get {
                return this.SaldoBNField;
            }
            set {
                if ((this.SaldoBNField.Equals(value) != true)) {
                    this.SaldoBNField = value;
                    this.RaisePropertyChanged("SaldoBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SaldoForPartial {
            get {
                return this.SaldoForPartialField;
            }
            set {
                if ((this.SaldoForPartialField.Equals(value) != true)) {
                    this.SaldoForPartialField = value;
                    this.RaisePropertyChanged("SaldoForPartial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StorageBN {
            get {
                return this.StorageBNField;
            }
            set {
                if ((this.StorageBNField.Equals(value) != true)) {
                    this.StorageBNField = value;
                    this.RaisePropertyChanged("StorageBN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SumDetailWeight {
            get {
                return this.SumDetailWeightField;
            }
            set {
                if ((this.SumDetailWeightField.Equals(value) != true)) {
                    this.SumDetailWeightField = value;
                    this.RaisePropertyChanged("SumDetailWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bitCustomerBalance {
            get {
                return this.bitCustomerBalanceField;
            }
            set {
                if ((this.bitCustomerBalanceField.Equals(value) != true)) {
                    this.bitCustomerBalanceField = value;
                    this.RaisePropertyChanged("bitCustomerBalance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PrintSticker", Namespace="http://schemas.datacontract.org/2004/07/Emex.Stock")]
    [System.SerializableAttribute()]
    public partial struct PrintSticker : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderDetailSubIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortionField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderDetailSubId {
            get {
                return this.OrderDetailSubIdField;
            }
            set {
                if ((this.OrderDetailSubIdField.Equals(value) != true)) {
                    this.OrderDetailSubIdField = value;
                    this.RaisePropertyChanged("OrderDetailSubId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Portion {
            get {
                return this.PortionField;
            }
            set {
                if ((this.PortionField.Equals(value) != true)) {
                    this.PortionField = value;
                    this.RaisePropertyChanged("Portion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StickerPrintMode", Namespace="http://schemas.datacontract.org/2004/07/Emex.Stock")]
    public enum StickerPrintMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        A4Printer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StickerPrinter = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DetailSubstituteDto", Namespace="http://schemas.datacontract.org/2004/07/Emex.Stock")]
    [System.SerializableAttribute()]
    public partial class DetailSubstituteDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorrelationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MakeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubstTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correlation {
            get {
                return this.CorrelationField;
            }
            set {
                if ((object.ReferenceEquals(this.CorrelationField, value) != true)) {
                    this.CorrelationField = value;
                    this.RaisePropertyChanged("Correlation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateChange {
            get {
                return this.DateChangeField;
            }
            set {
                if ((this.DateChangeField.Equals(value) != true)) {
                    this.DateChangeField = value;
                    this.RaisePropertyChanged("DateChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DetailId {
            get {
                return this.DetailIdField;
            }
            set {
                if ((this.DetailIdField.Equals(value) != true)) {
                    this.DetailIdField = value;
                    this.RaisePropertyChanged("DetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailName {
            get {
                return this.DetailNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameField, value) != true)) {
                    this.DetailNameField = value;
                    this.RaisePropertyChanged("DetailName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNum {
            get {
                return this.DetailNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNumField, value) != true)) {
                    this.DetailNumField = value;
                    this.RaisePropertyChanged("DetailNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MakeId {
            get {
                return this.MakeIdField;
            }
            set {
                if ((this.MakeIdField.Equals(value) != true)) {
                    this.MakeIdField = value;
                    this.RaisePropertyChanged("MakeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeLogo {
            get {
                return this.MakeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeLogoField, value) != true)) {
                    this.MakeLogoField = value;
                    this.RaisePropertyChanged("MakeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeName {
            get {
                return this.MakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeNameField, value) != true)) {
                    this.MakeNameField = value;
                    this.RaisePropertyChanged("MakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubstType {
            get {
                return this.SubstTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubstTypeField, value) != true)) {
                    this.SubstTypeField = value;
                    this.RaisePropertyChanged("SubstType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SuppliersReturnsAuthorityModel", Namespace="http://schemas.datacontract.org/2004/07/Emex.Supplier")]
    [System.SerializableAttribute()]
    public partial class SuppliersReturnsAuthorityModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorityDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AuthorityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IssueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssuePlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerGenitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerPostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignerPostGenitiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SuppliersReturnsAuthoritiesIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorityData {
            get {
                return this.AuthorityDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorityDataField, value) != true)) {
                    this.AuthorityDataField = value;
                    this.RaisePropertyChanged("AuthorityData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AuthorityType {
            get {
                return this.AuthorityTypeField;
            }
            set {
                if ((this.AuthorityTypeField.Equals(value) != true)) {
                    this.AuthorityTypeField = value;
                    this.RaisePropertyChanged("AuthorityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime IssueDate {
            get {
                return this.IssueDateField;
            }
            set {
                if ((this.IssueDateField.Equals(value) != true)) {
                    this.IssueDateField = value;
                    this.RaisePropertyChanged("IssueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssuePlace {
            get {
                return this.IssuePlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.IssuePlaceField, value) != true)) {
                    this.IssuePlaceField = value;
                    this.RaisePropertyChanged("IssuePlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Signer {
            get {
                return this.SignerField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerField, value) != true)) {
                    this.SignerField = value;
                    this.RaisePropertyChanged("Signer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignerDocument {
            get {
                return this.SignerDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerDocumentField, value) != true)) {
                    this.SignerDocumentField = value;
                    this.RaisePropertyChanged("SignerDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignerGenitive {
            get {
                return this.SignerGenitiveField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerGenitiveField, value) != true)) {
                    this.SignerGenitiveField = value;
                    this.RaisePropertyChanged("SignerGenitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignerPost {
            get {
                return this.SignerPostField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerPostField, value) != true)) {
                    this.SignerPostField = value;
                    this.RaisePropertyChanged("SignerPost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignerPostGenitive {
            get {
                return this.SignerPostGenitiveField;
            }
            set {
                if ((object.ReferenceEquals(this.SignerPostGenitiveField, value) != true)) {
                    this.SignerPostGenitiveField = value;
                    this.RaisePropertyChanged("SignerPostGenitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SuppliersReturnsAuthoritiesId {
            get {
                return this.SuppliersReturnsAuthoritiesIdField;
            }
            set {
                if ((this.SuppliersReturnsAuthoritiesIdField.Equals(value) != true)) {
                    this.SuppliersReturnsAuthoritiesIdField = value;
                    this.RaisePropertyChanged("SuppliersReturnsAuthoritiesId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionLock", Namespace="http://schemas.datacontract.org/2004/07/Emex.Data")]
    [System.SerializableAttribute()]
    public partial class ActionLock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.ActionLockState StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireDate {
            get {
                return this.ExpireDateField;
            }
            set {
                if ((this.ExpireDateField.Equals(value) != true)) {
                    this.ExpireDateField = value;
                    this.RaisePropertyChanged("ExpireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.ActionLockState State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionLockState", Namespace="http://schemas.datacontract.org/2004/07/Emex.Data")]
    public enum ActionLockState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Valid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliveryRegionType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Online")]
    [System.SerializableAttribute()]
    public partial class DeliveryRegionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float DeliveryCoeffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.CustomerDeliveryType DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBkkPayerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float DeliveryCoeff {
            get {
                return this.DeliveryCoeffField;
            }
            set {
                if ((this.DeliveryCoeffField.Equals(value) != true)) {
                    this.DeliveryCoeffField = value;
                    this.RaisePropertyChanged("DeliveryCoeff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.CustomerDeliveryType DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((this.DeliveryTypeField.Equals(value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBkkPayer {
            get {
                return this.IsBkkPayerField;
            }
            set {
                if ((this.IsBkkPayerField.Equals(value) != true)) {
                    this.IsBkkPayerField = value;
                    this.RaisePropertyChanged("IsBkkPayer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/Emex.Online")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.LocationUser[] LocationUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OptovikIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.LocationSetting[] SettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool bitPublishField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPersons {
            get {
                return this.ContactPersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonsField, value) != true)) {
                    this.ContactPersonsField = value;
                    this.RaisePropertyChanged("ContactPersons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emails {
            get {
                return this.EmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailsField, value) != true)) {
                    this.EmailsField = value;
                    this.RaisePropertyChanged("Emails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.LocationUser[] LocationUsers {
            get {
                return this.LocationUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationUsersField, value) != true)) {
                    this.LocationUsersField = value;
                    this.RaisePropertyChanged("LocationUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OptovikId {
            get {
                return this.OptovikIdField;
            }
            set {
                if ((this.OptovikIdField.Equals(value) != true)) {
                    this.OptovikIdField = value;
                    this.RaisePropertyChanged("OptovikId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.LocationSetting[] Settings {
            get {
                return this.SettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingsField, value) != true)) {
                    this.SettingsField = value;
                    this.RaisePropertyChanged("Settings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypePoint {
            get {
                return this.TypePointField;
            }
            set {
                if ((object.ReferenceEquals(this.TypePointField, value) != true)) {
                    this.TypePointField = value;
                    this.RaisePropertyChanged("TypePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTime {
            get {
                return this.WorkTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkTimeField, value) != true)) {
                    this.WorkTimeField = value;
                    this.RaisePropertyChanged("WorkTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool bitPublish {
            get {
                return this.bitPublishField;
            }
            set {
                if ((this.bitPublishField.Equals(value) != true)) {
                    this.bitPublishField = value;
                    this.RaisePropertyChanged("bitPublish");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationUser", Namespace="http://schemas.datacontract.org/2004/07/Emex.Online")]
    [System.SerializableAttribute()]
    public partial class LocationUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRoles {
            get {
                return this.UserRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRolesField, value) != true)) {
                    this.UserRolesField = value;
                    this.RaisePropertyChanged("UserRoles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/Emex.Online")]
    [System.SerializableAttribute()]
    public partial class Region : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionParent {
            get {
                return this.RegionParentField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionParentField, value) != true)) {
                    this.RegionParentField = value;
                    this.RaisePropertyChanged("RegionParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionType {
            get {
                return this.RegionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionTypeField, value) != true)) {
                    this.RegionTypeField = value;
                    this.RaisePropertyChanged("RegionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDetailViewItem", Namespace="http://schemas.datacontract.org/2004/07/Emex.Delivery")]
    [System.SerializableAttribute()]
    public partial class AccountDetailViewItem : EmExServiceClient.ContragentService.AccountDetail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountsDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BoxRegIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoxesRegionBarcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CustomsDutyCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CustomsFeeCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DetailId1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InsuranceCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MakeId1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MakeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PricelistIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StockTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumOfTaxCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SummaWithoutTaxCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte ZoneTypeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountsDetailId {
            get {
                return this.AccountsDetailIdField;
            }
            set {
                if ((this.AccountsDetailIdField.Equals(value) != true)) {
                    this.AccountsDetailIdField = value;
                    this.RaisePropertyChanged("AccountsDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxNumber {
            get {
                return this.BoxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxNumberField, value) != true)) {
                    this.BoxNumberField = value;
                    this.RaisePropertyChanged("BoxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BoxRegId {
            get {
                return this.BoxRegIdField;
            }
            set {
                if ((this.BoxRegIdField.Equals(value) != true)) {
                    this.BoxRegIdField = value;
                    this.RaisePropertyChanged("BoxRegId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoxesRegionBarcode {
            get {
                return this.BoxesRegionBarcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BoxesRegionBarcodeField, value) != true)) {
                    this.BoxesRegionBarcodeField = value;
                    this.RaisePropertyChanged("BoxesRegionBarcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CustomsDutyCost {
            get {
                return this.CustomsDutyCostField;
            }
            set {
                if ((this.CustomsDutyCostField.Equals(value) != true)) {
                    this.CustomsDutyCostField = value;
                    this.RaisePropertyChanged("CustomsDutyCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CustomsFeeCost {
            get {
                return this.CustomsFeeCostField;
            }
            set {
                if ((this.CustomsFeeCostField.Equals(value) != true)) {
                    this.CustomsFeeCostField = value;
                    this.RaisePropertyChanged("CustomsFeeCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="DetailId")]
        public long DetailId1 {
            get {
                return this.DetailId1Field;
            }
            set {
                if ((this.DetailId1Field.Equals(value) != true)) {
                    this.DetailId1Field = value;
                    this.RaisePropertyChanged("DetailId1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailName {
            get {
                return this.DetailNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNameField, value) != true)) {
                    this.DetailNameField = value;
                    this.RaisePropertyChanged("DetailName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InsuranceCost {
            get {
                return this.InsuranceCostField;
            }
            set {
                if ((this.InsuranceCostField.Equals(value) != true)) {
                    this.InsuranceCostField = value;
                    this.RaisePropertyChanged("InsuranceCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="MakeId")]
        public int MakeId1 {
            get {
                return this.MakeId1Field;
            }
            set {
                if ((this.MakeId1Field.Equals(value) != true)) {
                    this.MakeId1Field = value;
                    this.RaisePropertyChanged("MakeId1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeLogo {
            get {
                return this.MakeLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeLogoField, value) != true)) {
                    this.MakeLogoField = value;
                    this.RaisePropertyChanged("MakeLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MakeName {
            get {
                return this.MakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MakeNameField, value) != true)) {
                    this.MakeNameField = value;
                    this.RaisePropertyChanged("MakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PricelistId {
            get {
                return this.PricelistIdField;
            }
            set {
                if ((this.PricelistIdField.Equals(value) != true)) {
                    this.PricelistIdField = value;
                    this.RaisePropertyChanged("PricelistId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StockTypeId {
            get {
                return this.StockTypeIdField;
            }
            set {
                if ((this.StockTypeIdField.Equals(value) != true)) {
                    this.StockTypeIdField = value;
                    this.RaisePropertyChanged("StockTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SumOfTaxCost {
            get {
                return this.SumOfTaxCostField;
            }
            set {
                if ((this.SumOfTaxCostField.Equals(value) != true)) {
                    this.SumOfTaxCostField = value;
                    this.RaisePropertyChanged("SumOfTaxCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SummaWithoutTaxCost {
            get {
                return this.SummaWithoutTaxCostField;
            }
            set {
                if ((this.SummaWithoutTaxCostField.Equals(value) != true)) {
                    this.SummaWithoutTaxCostField = value;
                    this.RaisePropertyChanged("SummaWithoutTaxCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((this.TaxField.Equals(value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneLogo {
            get {
                return this.ZoneLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneLogoField, value) != true)) {
                    this.ZoneLogoField = value;
                    this.RaisePropertyChanged("ZoneLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte ZoneTypeId {
            get {
                return this.ZoneTypeIdField;
            }
            set {
                if ((this.ZoneTypeIdField.Equals(value) != true)) {
                    this.ZoneTypeIdField = value;
                    this.RaisePropertyChanged("ZoneTypeId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDetail", Namespace="http://schemas.datacontract.org/2004/07/Emex.Delivery")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EmExServiceClient.ContragentService.AccountDetailViewItem))]
    public partial class AccountDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountCustPriceSaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AccountCustPriceSaleRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditPayRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DetailQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MakeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderDetailSubIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PortionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceSaleFullRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceSaleFullRURNDSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceSumRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ReceiptsDetailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal StorePayRURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxPercentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountCustPriceSale {
            get {
                return this.AccountCustPriceSaleField;
            }
            set {
                if ((this.AccountCustPriceSaleField.Equals(value) != true)) {
                    this.AccountCustPriceSaleField = value;
                    this.RaisePropertyChanged("AccountCustPriceSale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AccountCustPriceSaleRUR {
            get {
                return this.AccountCustPriceSaleRURField;
            }
            set {
                if ((this.AccountCustPriceSaleRURField.Equals(value) != true)) {
                    this.AccountCustPriceSaleRURField = value;
                    this.RaisePropertyChanged("AccountCustPriceSaleRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CreditPayRUR {
            get {
                return this.CreditPayRURField;
            }
            set {
                if ((this.CreditPayRURField.Equals(value) != true)) {
                    this.CreditPayRURField = value;
                    this.RaisePropertyChanged("CreditPayRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DetailId {
            get {
                return this.DetailIdField;
            }
            set {
                if ((this.DetailIdField.Equals(value) != true)) {
                    this.DetailIdField = value;
                    this.RaisePropertyChanged("DetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DetailNum {
            get {
                return this.DetailNumField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailNumField, value) != true)) {
                    this.DetailNumField = value;
                    this.RaisePropertyChanged("DetailNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetailQuantity {
            get {
                return this.DetailQuantityField;
            }
            set {
                if ((this.DetailQuantityField.Equals(value) != true)) {
                    this.DetailQuantityField = value;
                    this.RaisePropertyChanged("DetailQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GTD {
            get {
                return this.GTDField;
            }
            set {
                if ((object.ReferenceEquals(this.GTDField, value) != true)) {
                    this.GTDField = value;
                    this.RaisePropertyChanged("GTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MakeId {
            get {
                return this.MakeIdField;
            }
            set {
                if ((this.MakeIdField.Equals(value) != true)) {
                    this.MakeIdField = value;
                    this.RaisePropertyChanged("MakeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderDetailId {
            get {
                return this.OrderDetailIdField;
            }
            set {
                if ((this.OrderDetailIdField.Equals(value) != true)) {
                    this.OrderDetailIdField = value;
                    this.RaisePropertyChanged("OrderDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderDetailSubId {
            get {
                return this.OrderDetailSubIdField;
            }
            set {
                if ((this.OrderDetailSubIdField.Equals(value) != true)) {
                    this.OrderDetailSubIdField = value;
                    this.RaisePropertyChanged("OrderDetailSubId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Portion {
            get {
                return this.PortionField;
            }
            set {
                if ((this.PortionField.Equals(value) != true)) {
                    this.PortionField = value;
                    this.RaisePropertyChanged("Portion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceRUR {
            get {
                return this.PriceRURField;
            }
            set {
                if ((this.PriceRURField.Equals(value) != true)) {
                    this.PriceRURField = value;
                    this.RaisePropertyChanged("PriceRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceSaleFullRUR {
            get {
                return this.PriceSaleFullRURField;
            }
            set {
                if ((this.PriceSaleFullRURField.Equals(value) != true)) {
                    this.PriceSaleFullRURField = value;
                    this.RaisePropertyChanged("PriceSaleFullRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceSaleFullRURNDS {
            get {
                return this.PriceSaleFullRURNDSField;
            }
            set {
                if ((this.PriceSaleFullRURNDSField.Equals(value) != true)) {
                    this.PriceSaleFullRURNDSField = value;
                    this.RaisePropertyChanged("PriceSaleFullRURNDS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceSumRUR {
            get {
                return this.PriceSumRURField;
            }
            set {
                if ((this.PriceSumRURField.Equals(value) != true)) {
                    this.PriceSumRURField = value;
                    this.RaisePropertyChanged("PriceSumRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ReceiptsDetailId {
            get {
                return this.ReceiptsDetailIdField;
            }
            set {
                if ((this.ReceiptsDetailIdField.Equals(value) != true)) {
                    this.ReceiptsDetailIdField = value;
                    this.RaisePropertyChanged("ReceiptsDetailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal StorePayRUR {
            get {
                return this.StorePayRURField;
            }
            set {
                if ((this.StorePayRURField.Equals(value) != true)) {
                    this.StorePayRURField = value;
                    this.RaisePropertyChanged("StorePayRUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxPercent {
            get {
                return this.TaxPercentField;
            }
            set {
                if ((this.TaxPercentField.Equals(value) != true)) {
                    this.TaxPercentField = value;
                    this.RaisePropertyChanged("TaxPercent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="GatheringSchemeType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Delivery")]
    public enum GatheringSchemeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UND = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MSC = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REG = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SAMO = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CIS = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDeliveryType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Delivery")]
    public enum CustomerDeliveryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Primary = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alternative = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalStorageAccountNew", Namespace="http://schemas.datacontract.org/2004/07/Emex.Buh")]
    [System.SerializableAttribute()]
    public partial class LocalStorageAccountNew : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccountDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BuhOperaciaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContragentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocalStorageAccountNewIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort MonthNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrintDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumOfTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SumWithoutTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort YearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long buhContragentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccountDate {
            get {
                return this.AccountDateField;
            }
            set {
                if ((this.AccountDateField.Equals(value) != true)) {
                    this.AccountDateField = value;
                    this.RaisePropertyChanged("AccountDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BuhOperaciaId {
            get {
                return this.BuhOperaciaIdField;
            }
            set {
                if ((this.BuhOperaciaIdField.Equals(value) != true)) {
                    this.BuhOperaciaIdField = value;
                    this.RaisePropertyChanged("BuhOperaciaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContragentName {
            get {
                return this.ContragentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContragentNameField, value) != true)) {
                    this.ContragentNameField = value;
                    this.RaisePropertyChanged("ContragentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLogo {
            get {
                return this.CustomerLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLogoField, value) != true)) {
                    this.CustomerLogoField = value;
                    this.RaisePropertyChanged("CustomerLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocalStorageAccountNewId {
            get {
                return this.LocalStorageAccountNewIdField;
            }
            set {
                if ((this.LocalStorageAccountNewIdField.Equals(value) != true)) {
                    this.LocalStorageAccountNewIdField = value;
                    this.RaisePropertyChanged("LocalStorageAccountNewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort MonthNumber {
            get {
                return this.MonthNumberField;
            }
            set {
                if ((this.MonthNumberField.Equals(value) != true)) {
                    this.MonthNumberField = value;
                    this.RaisePropertyChanged("MonthNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrintDate {
            get {
                return this.PrintDateField;
            }
            set {
                if ((this.PrintDateField.Equals(value) != true)) {
                    this.PrintDateField = value;
                    this.RaisePropertyChanged("PrintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SumMoney {
            get {
                return this.SumMoneyField;
            }
            set {
                if ((this.SumMoneyField.Equals(value) != true)) {
                    this.SumMoneyField = value;
                    this.RaisePropertyChanged("SumMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SumOfTax {
            get {
                return this.SumOfTaxField;
            }
            set {
                if ((this.SumOfTaxField.Equals(value) != true)) {
                    this.SumOfTaxField = value;
                    this.RaisePropertyChanged("SumOfTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SumWithoutTax {
            get {
                return this.SumWithoutTaxField;
            }
            set {
                if ((this.SumWithoutTaxField.Equals(value) != true)) {
                    this.SumWithoutTaxField = value;
                    this.RaisePropertyChanged("SumWithoutTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long buhContragentId {
            get {
                return this.buhContragentIdField;
            }
            set {
                if ((this.buhContragentIdField.Equals(value) != true)) {
                    this.buhContragentIdField = value;
                    this.RaisePropertyChanged("buhContragentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalStorageAccount2", Namespace="http://schemas.datacontract.org/2004/07/Emex.Buh")]
    [System.SerializableAttribute()]
    public partial class LocalStorageAccount2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AccountDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BuhBalanceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> BuhOperaciaIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContragentCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContragentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostWithTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostWithoutTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DogovorDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DogovorLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DogovorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRegNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LocalStorageAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort MonthNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PrintDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SendDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort YearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long buhContragentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long buhDogovorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccountDate {
            get {
                return this.AccountDateField;
            }
            set {
                if ((this.AccountDateField.Equals(value) != true)) {
                    this.AccountDateField = value;
                    this.RaisePropertyChanged("AccountDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountTax {
            get {
                return this.AmountTaxField;
            }
            set {
                if ((this.AmountTaxField.Equals(value) != true)) {
                    this.AmountTaxField = value;
                    this.RaisePropertyChanged("AmountTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BuhBalanceId {
            get {
                return this.BuhBalanceIdField;
            }
            set {
                if ((this.BuhBalanceIdField.Equals(value) != true)) {
                    this.BuhBalanceIdField = value;
                    this.RaisePropertyChanged("BuhBalanceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> BuhOperaciaId {
            get {
                return this.BuhOperaciaIdField;
            }
            set {
                if ((this.BuhOperaciaIdField.Equals(value) != true)) {
                    this.BuhOperaciaIdField = value;
                    this.RaisePropertyChanged("BuhOperaciaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContragentComment {
            get {
                return this.ContragentCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContragentCommentField, value) != true)) {
                    this.ContragentCommentField = value;
                    this.RaisePropertyChanged("ContragentComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContragentName {
            get {
                return this.ContragentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContragentNameField, value) != true)) {
                    this.ContragentNameField = value;
                    this.RaisePropertyChanged("ContragentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostWithTax {
            get {
                return this.CostWithTaxField;
            }
            set {
                if ((this.CostWithTaxField.Equals(value) != true)) {
                    this.CostWithTaxField = value;
                    this.RaisePropertyChanged("CostWithTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostWithoutTax {
            get {
                return this.CostWithoutTaxField;
            }
            set {
                if ((this.CostWithoutTaxField.Equals(value) != true)) {
                    this.CostWithoutTaxField = value;
                    this.RaisePropertyChanged("CostWithoutTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLogo {
            get {
                return this.CustomerLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLogoField, value) != true)) {
                    this.CustomerLogoField = value;
                    this.RaisePropertyChanged("CustomerLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DogovorDate {
            get {
                return this.DogovorDateField;
            }
            set {
                if ((this.DogovorDateField.Equals(value) != true)) {
                    this.DogovorDateField = value;
                    this.RaisePropertyChanged("DogovorDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DogovorLogo {
            get {
                return this.DogovorLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.DogovorLogoField, value) != true)) {
                    this.DogovorLogoField = value;
                    this.RaisePropertyChanged("DogovorLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DogovorNumber {
            get {
                return this.DogovorNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DogovorNumberField, value) != true)) {
                    this.DogovorNumberField = value;
                    this.RaisePropertyChanged("DogovorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRegNew {
            get {
                return this.IsRegNewField;
            }
            set {
                if ((this.IsRegNewField.Equals(value) != true)) {
                    this.IsRegNewField = value;
                    this.RaisePropertyChanged("IsRegNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long LocalStorageAccountId {
            get {
                return this.LocalStorageAccountIdField;
            }
            set {
                if ((this.LocalStorageAccountIdField.Equals(value) != true)) {
                    this.LocalStorageAccountIdField = value;
                    this.RaisePropertyChanged("LocalStorageAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort MonthNumber {
            get {
                return this.MonthNumberField;
            }
            set {
                if ((this.MonthNumberField.Equals(value) != true)) {
                    this.MonthNumberField = value;
                    this.RaisePropertyChanged("MonthNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PrintDate {
            get {
                return this.PrintDateField;
            }
            set {
                if ((this.PrintDateField.Equals(value) != true)) {
                    this.PrintDateField = value;
                    this.RaisePropertyChanged("PrintDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendDate {
            get {
                return this.SendDateField;
            }
            set {
                if ((this.SendDateField.Equals(value) != true)) {
                    this.SendDateField = value;
                    this.RaisePropertyChanged("SendDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long buhContragentId {
            get {
                return this.buhContragentIdField;
            }
            set {
                if ((this.buhContragentIdField.Equals(value) != true)) {
                    this.buhContragentIdField = value;
                    this.RaisePropertyChanged("buhContragentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long buhDogovorId {
            get {
                return this.buhDogovorIdField;
            }
            set {
                if ((this.buhDogovorIdField.Equals(value) != true)) {
                    this.buhDogovorIdField = value;
                    this.RaisePropertyChanged("buhDogovorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationSetting", Namespace="http://schemas.datacontract.org/2004/07/Emex.Interaction")]
    [System.SerializableAttribute()]
    public partial class LocationSetting : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EmExServiceClient.ContragentService.LocationPropertyType PropertyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EmExServiceClient.ContragentService.LocationPropertyType PropertyType {
            get {
                return this.PropertyTypeField;
            }
            set {
                if ((this.PropertyTypeField.Equals(value) != true)) {
                    this.PropertyTypeField = value;
                    this.RaisePropertyChanged("PropertyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyValue {
            get {
                return this.PropertyValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyValueField, value) != true)) {
                    this.PropertyValueField = value;
                    this.RaisePropertyChanged("PropertyValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationPropertyType", Namespace="http://schemas.datacontract.org/2004/07/Emex.Interaction")]
    public enum LocationPropertyType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PointType = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MethodOfPayment = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Services = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContragentService.IEmexContragentService")]
    public interface IEmexContragentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateInventory", ReplyAction="http://tempuri.org/IEmexContragentService/CreateInventoryResponse")]
        EmExServiceClient.ContragentService.OperationResult CreateInventory(int[] decommissionList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateInventory", ReplyAction="http://tempuri.org/IEmexContragentService/CreateInventoryResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CreateInventoryAsync(int[] decommissionList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetInventoryList", ReplyAction="http://tempuri.org/IEmexContragentService/GetInventoryListResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfInventory GetInventoryList(System.DateTime dateBegin, System.DateTime dateEnd, bool processed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetInventoryList", ReplyAction="http://tempuri.org/IEmexContragentService/GetInventoryListResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfInventory> GetInventoryListAsync(System.DateTime dateBegin, System.DateTime dateEnd, bool processed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SetRevocation", ReplyAction="http://tempuri.org/IEmexContragentService/SetRevocationResponse")]
        EmExServiceClient.ContragentService.OperationResult SetRevocation(long documentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SetRevocation", ReplyAction="http://tempuri.org/IEmexContragentService/SetRevocationResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SetRevocationAsync(long documentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/RunOverSet", ReplyAction="http://tempuri.org/IEmexContragentService/RunOverSetResponse")]
        EmExServiceClient.ContragentService.OperationResult RunOverSet(long invoiceSFLostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/RunOverSet", ReplyAction="http://tempuri.org/IEmexContragentService/RunOverSetResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> RunOverSetAsync(long invoiceSFLostId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/RecreateReturnDocument", ReplyAction="http://tempuri.org/IEmexContragentService/RecreateReturnDocumentResponse")]
        EmExServiceClient.ContragentService.OperationResult RecreateReturnDocument(long invoiceSFLostId, string typeLost, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/RecreateReturnDocument", ReplyAction="http://tempuri.org/IEmexContragentService/RecreateReturnDocumentResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> RecreateReturnDocumentAsync(long invoiceSFLostId, string typeLost, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDocumentCorrectionCards", ReplyAction="http://tempuri.org/IEmexContragentService/GetDocumentCorrectionCardsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDocumentCorrectionCard GetDocumentCorrectionCards(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo, string documentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDocumentCorrectionCards", ReplyAction="http://tempuri.org/IEmexContragentService/GetDocumentCorrectionCardsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDocumentCorrectionCard> GetDocumentCorrectionCardsAsync(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo, string documentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetActualUsers", ReplyAction="http://tempuri.org/IEmexContragentService/GetActualUsersResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfUser GetActualUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetActualUsers", ReplyAction="http://tempuri.org/IEmexContragentService/GetActualUsersResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfUser> GetActualUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetGroups", ReplyAction="http://tempuri.org/IEmexContragentService/GetGroupsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfGroup GetGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetGroups", ReplyAction="http://tempuri.org/IEmexContragentService/GetGroupsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfGroup> GetGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateUserData", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateUserDataResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateUserData(long userId, long groupId, string userEmails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateUserData", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateUserDataResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateUserDataAsync(long userId, long groupId, string userEmails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendPasswordUserToEmail", ReplyAction="http://tempuri.org/IEmexContragentService/SendPasswordUserToEmailResponse")]
        EmExServiceClient.ContragentService.OperationResultstring SendPasswordUserToEmail(long connUserId, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendPasswordUserToEmail", ReplyAction="http://tempuri.org/IEmexContragentService/SendPasswordUserToEmailResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> SendPasswordUserToEmailAsync(long connUserId, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetSalesHistoryCommon", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetSalesHistoryCommonRes" +
            "ponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryCommon DetailsHistory_GetSalesHistoryCommon(string detailNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetSalesHistoryCommon", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetSalesHistoryCommonRes" +
            "ponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryCommon> DetailsHistory_GetSalesHistoryCommonAsync(string detailNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetSalesHistoryDetail", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetSalesHistoryDetailRes" +
            "ponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryDetail DetailsHistory_GetSalesHistoryDetail(System.Nullable<long> orderDetailSubId, System.Nullable<long> orderDetailId, System.Nullable<long> globalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetSalesHistoryDetail", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetSalesHistoryDetailRes" +
            "ponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryDetail> DetailsHistory_GetSalesHistoryDetailAsync(System.Nullable<long> orderDetailSubId, System.Nullable<long> orderDetailId, System.Nullable<long> globalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_VerifyInvoiceBeforDelete" +
            "", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_VerifyInvoiceBeforDelete" +
            "Response")]
        EmExServiceClient.ContragentService.OperationResultTupleOfbooleanstringlonglong DetailsHistory_VerifyInvoiceBeforDelete(string invoiceLogo, string invoiceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_VerifyInvoiceBeforDelete" +
            "", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_VerifyInvoiceBeforDelete" +
            "Response")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultTupleOfbooleanstringlonglong> DetailsHistory_VerifyInvoiceBeforDeleteAsync(string invoiceLogo, string invoiceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeAnswerComment", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeAnswerCommentRespo" +
            "nse")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeAnswerComment(long orderDetailSubId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeAnswerComment", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeAnswerCommentRespo" +
            "nse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeAnswerCommentAsync(long orderDetailSubId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantity", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantityResponse")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeQuantity(long orderDetailSubId, long quantity, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantity", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantityResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeQuantityAsync(long orderDetailSubId, long quantity, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_DeleteInvoice", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_DeleteInvoiceResponse")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_DeleteInvoice(long invoiceId, long supplierDeliveryId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_DeleteInvoice", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_DeleteInvoiceResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_DeleteInvoiceAsync(long invoiceId, long supplierDeliveryId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDenyTypes", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDenyTypesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDenyType DetailsHistory_GetDenyTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDenyTypes", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDenyTypesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDenyType> DetailsHistory_GetDenyTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDeleteTypes", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDeleteTypesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDeleteType DetailsHistory_GetDeleteTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDeleteTypes", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDeleteTypesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDeleteType> DetailsHistory_GetDeleteTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDenyStatuses", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDenyStatusesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDenyStatus DetailsHistory_GetDenyStatuses(long orderDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDenyStatuses", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetDenyStatusesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDenyStatus> DetailsHistory_GetDenyStatusesAsync(long orderDetailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_RemoveDenyDetails", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_RemoveDenyDetailsRespons" +
            "e")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_RemoveDenyDetails(long orderDetailId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_RemoveDenyDetails", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_RemoveDenyDetailsRespons" +
            "e")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_RemoveDenyDetailsAsync(long orderDetailId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_AddDenyDetails", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_AddDenyDetailsResponse")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_AddDenyDetails(long orderDetailId, int denyDetailTypeId, string comments, float discount, int statusId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_AddDenyDetails", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_AddDenyDetailsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_AddDenyDetailsAsync(long orderDetailId, int denyDetailTypeId, string comments, float discount, int statusId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_RemoveONLY", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_RemoveONLYResponse")]
        EmExServiceClient.ContragentService.OperationResult DetailsHistory_RemoveONLY(long globalId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_RemoveONLY", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_RemoveONLYResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DetailsHistory_RemoveONLYAsync(long globalId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetChangeAnswerLogLines", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetChangeAnswerLogLinesR" +
            "esponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfChangeAnswerLogLine DetailsHistory_GetChangeAnswerLogLines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_GetChangeAnswerLogLines", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_GetChangeAnswerLogLinesR" +
            "esponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfChangeAnswerLogLine> DetailsHistory_GetChangeAnswerLogLinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_CloseOrderByDetail", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_CloseOrderByDetailRespon" +
            "se")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_CloseOrderByDetail(long orderDetailSubId, bool bitStatistic, int userId, string customerComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_CloseOrderByDetail", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_CloseOrderByDetailRespon" +
            "se")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_CloseOrderByDetailAsync(long orderDetailSubId, bool bitStatistic, int userId, string customerComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantityByInvoice", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantityByInvoiceR" +
            "esponse")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeQuantityByInvoice(long orderDetailSubId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantityByInvoice", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantityByInvoiceR" +
            "esponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeQuantityByInvoiceAsync(long orderDetailSubId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantity_2", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantity_2Response" +
            "")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeQuantity_2(long orderDetailSubId, long quantity, bool bitStatistic, int userId, string customerComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantity_2", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeQuantity_2Response" +
            "")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeQuantity_2Async(long orderDetailSubId, long quantity, bool bitStatistic, int userId, string customerComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeDeliveryType", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeDeliveryTypeRespon" +
            "se")]
        EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeDeliveryType(long orderDetailSubId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeDeliveryType", ReplyAction="http://tempuri.org/IEmexContragentService/DetailsHistory_ChangeDeliveryTypeRespon" +
            "se")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeDeliveryTypeAsync(long orderDetailSubId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/FindDetail", ReplyAction="http://tempuri.org/IEmexContragentService/FindDetailResponse")]
        EmExServiceClient.ContragentService.OperationResultDetailDto FindDetail(string detailNum, string make);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/FindDetail", ReplyAction="http://tempuri.org/IEmexContragentService/FindDetailResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultDetailDto> FindDetailAsync(string detailNum, string make);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteAllDetailSubstitutes", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteAllDetailSubstitutesResponse")]
        EmExServiceClient.ContragentService.OperationResult DeleteAllDetailSubstitutes(long detailId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteAllDetailSubstitutes", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteAllDetailSubstitutesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteAllDetailSubstitutesAsync(long detailId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetMakes", ReplyAction="http://tempuri.org/IEmexContragentService/GetMakesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfMake GetMakes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetMakes", ReplyAction="http://tempuri.org/IEmexContragentService/GetMakesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfMake> GetMakesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthorities", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthoritiesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfSuppliersReturnsAuthority GetSupplierReturnAuthorities(long supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthorities", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthoritiesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSuppliersReturnsAuthority> GetSupplierReturnAuthoritiesAsync(long supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthority", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthorityResponse")]
        EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority GetSupplierReturnAuthority(int supplierReturnAuthorityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthority", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthorityResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority> GetSupplierReturnAuthorityAsync(int supplierReturnAuthorityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthorityBySupplierIdA" +
            "ndBarcode", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthorityBySupplierIdA" +
            "ndBarcodeResponse")]
        EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority GetSupplierReturnAuthorityBySupplierIdAndBarcode(long supplierId, string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthorityBySupplierIdA" +
            "ndBarcode", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthorityBySupplierIdA" +
            "ndBarcodeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority> GetSupplierReturnAuthorityBySupplierIdAndBarcodeAsync(long supplierId, string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/AddSupplierReturnAuthority", ReplyAction="http://tempuri.org/IEmexContragentService/AddSupplierReturnAuthorityResponse")]
        EmExServiceClient.ContragentService.OperationResultint AddSupplierReturnAuthority(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel supplierReturnAuthority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/AddSupplierReturnAuthority", ReplyAction="http://tempuri.org/IEmexContragentService/AddSupplierReturnAuthorityResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultint> AddSupplierReturnAuthorityAsync(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel supplierReturnAuthority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateSupplierReturnAuthority", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateSupplierReturnAuthorityResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateSupplierReturnAuthority(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel supplierReturnAuthority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateSupplierReturnAuthority", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateSupplierReturnAuthorityResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateSupplierReturnAuthorityAsync(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel supplierReturnAuthority);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SetSupplierReturnAuthorityState", ReplyAction="http://tempuri.org/IEmexContragentService/SetSupplierReturnAuthorityStateResponse" +
            "")]
        EmExServiceClient.ContragentService.OperationResult SetSupplierReturnAuthorityState(long supplierId, int supplierReturnAuthorityId, byte authorityState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SetSupplierReturnAuthorityState", ReplyAction="http://tempuri.org/IEmexContragentService/SetSupplierReturnAuthorityStateResponse" +
            "")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SetSupplierReturnAuthorityStateAsync(long supplierId, int supplierReturnAuthorityId, byte authorityState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SetSupplierReturnAuthorityScanUrl", ReplyAction="http://tempuri.org/IEmexContragentService/SetSupplierReturnAuthorityScanUrlRespon" +
            "se")]
        EmExServiceClient.ContragentService.OperationResult SetSupplierReturnAuthorityScanUrl(long supplierId, int supplierReturnAuthorityId, string authorityScanUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SetSupplierReturnAuthorityScanUrl", ReplyAction="http://tempuri.org/IEmexContragentService/SetSupplierReturnAuthorityScanUrlRespon" +
            "se")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SetSupplierReturnAuthorityScanUrlAsync(long supplierId, int supplierReturnAuthorityId, string authorityScanUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthoritySign", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthoritySignResponse")]
        EmExServiceClient.ContragentService.OperationResultboolean GetSupplierReturnAuthoritySign(string supplierLogo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthoritySign", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnAuthoritySignResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultboolean> GetSupplierReturnAuthoritySignAsync(string supplierLogo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnsAuthorityByBarcode", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnsAuthorityByBarcodeRes" +
            "ponse")]
        EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority GetSupplierReturnsAuthorityByBarcode(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierReturnsAuthorityByBarcode", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierReturnsAuthorityByBarcodeRes" +
            "ponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority> GetSupplierReturnsAuthorityByBarcodeAsync(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerQuantityHoursOfFree" +
            "Storage", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerQuantityHoursOfFree" +
            "StorageResponse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerQuantityHoursOfFreeStorage(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerQuantityHoursOfFree" +
            "Storage", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerQuantityHoursOfFree" +
            "StorageResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerQuantityHoursOfFreeStorageAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetConsumers", ReplyAction="http://tempuri.org/IEmexContragentService/GetConsumersResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfConsumer GetConsumers(long wholesalerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetConsumers", ReplyAction="http://tempuri.org/IEmexContragentService/GetConsumersResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfConsumer> GetConsumersAsync(long wholesalerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateConsumer", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateConsumerResponse")]
        EmExServiceClient.ContragentService.OperationResult BeginUpdateConsumer(long consumerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateConsumer", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateConsumerResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> BeginUpdateConsumerAsync(long consumerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateConsumer", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateConsumerResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateConsumer(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Consumer consumer, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateConsumer", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateConsumerResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateConsumerAsync(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Consumer consumer, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateConsumer", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateConsumerResponse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateConsumer(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateConsumer", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateConsumerResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateConsumerAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerChangesHistory", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerChangesHistoryResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfCustomerHistoryItem GetCustomerChangesHistory(long customerId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerChangesHistory", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerChangesHistoryResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerHistoryItem> GetCustomerChangesHistoryAsync(long customerId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendNotAnswersMsgToSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/SendNotAnswersMsgToSupplierResponse")]
        EmExServiceClient.ContragentService.OperationResult SendNotAnswersMsgToSupplier();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendNotAnswersMsgToSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/SendNotAnswersMsgToSupplierResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendNotAnswersMsgToSupplierAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendNotReceiptMsgToSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/SendNotReceiptMsgToSupplierResponse")]
        EmExServiceClient.ContragentService.OperationResult SendNotReceiptMsgToSupplier();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendNotReceiptMsgToSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/SendNotReceiptMsgToSupplierResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendNotReceiptMsgToSupplierAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendNotReceiptMsgToManager", ReplyAction="http://tempuri.org/IEmexContragentService/SendNotReceiptMsgToManagerResponse")]
        EmExServiceClient.ContragentService.OperationResult SendNotReceiptMsgToManager();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendNotReceiptMsgToManager", ReplyAction="http://tempuri.org/IEmexContragentService/SendNotReceiptMsgToManagerResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendNotReceiptMsgToManagerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendSuppliersMissingDocuments", ReplyAction="http://tempuri.org/IEmexContragentService/SendSuppliersMissingDocumentsResponse")]
        EmExServiceClient.ContragentService.OperationResult SendSuppliersMissingDocuments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendSuppliersMissingDocuments", ReplyAction="http://tempuri.org/IEmexContragentService/SendSuppliersMissingDocumentsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendSuppliersMissingDocumentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateClosingProvodkaForContragents", ReplyAction="http://tempuri.org/IEmexContragentService/CreateClosingProvodkaForContragentsResp" +
            "onse")]
        EmExServiceClient.ContragentService.OperationResult CreateClosingProvodkaForContragents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateClosingProvodkaForContragents", ReplyAction="http://tempuri.org/IEmexContragentService/CreateClosingProvodkaForContragentsResp" +
            "onse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CreateClosingProvodkaForContragentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetTransportCompanies", ReplyAction="http://tempuri.org/IEmexContragentService/GetTransportCompaniesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfTransportCompany GetTransportCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetTransportCompanies", ReplyAction="http://tempuri.org/IEmexContragentService/GetTransportCompaniesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfTransportCompany> GetTransportCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SaveContragentSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/SaveContragentSupplierResponse")]
        EmExServiceClient.ContragentService.OperationResultSupplier SaveContragentSupplier(EmExServiceClient.ContragentService.Contragent contragent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SaveContragentSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/SaveContragentSupplierResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultSupplier> SaveContragentSupplierAsync(EmExServiceClient.ContragentService.Contragent contragent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/IsSupplierLogoExists", ReplyAction="http://tempuri.org/IEmexContragentService/IsSupplierLogoExistsResponse")]
        EmExServiceClient.ContragentService.OperationResultboolean IsSupplierLogoExists(string logo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/IsSupplierLogoExists", ReplyAction="http://tempuri.org/IEmexContragentService/IsSupplierLogoExistsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultboolean> IsSupplierLogoExistsAsync(string logo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetNewLogoForSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/GetNewLogoForSupplierResponse")]
        EmExServiceClient.ContragentService.OperationResultstring GetNewLogoForSupplier();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetNewLogoForSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/GetNewLogoForSupplierResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> GetNewLogoForSupplierAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/RepeatEmailToSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/RepeatEmailToSupplierResponse")]
        EmExServiceClient.ContragentService.OperationResult RepeatEmailToSupplier(string supplierLogo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/RepeatEmailToSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/RepeatEmailToSupplierResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> RepeatEmailToSupplierAsync(string supplierLogo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetNonResidentCustomers", ReplyAction="http://tempuri.org/IEmexContragentService/GetNonResidentCustomersResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfContragent GetNonResidentCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetNonResidentCustomers", ReplyAction="http://tempuri.org/IEmexContragentService/GetNonResidentCustomersResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfContragent> GetNonResidentCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateCustomerSortingServicePayments", ReplyAction="http://tempuri.org/IEmexContragentService/CreateCustomerSortingServicePaymentsRes" +
            "ponse")]
        void CreateCustomerSortingServicePayments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateCustomerSortingServicePayments", ReplyAction="http://tempuri.org/IEmexContragentService/CreateCustomerSortingServicePaymentsRes" +
            "ponse")]
        System.Threading.Tasks.Task CreateCustomerSortingServicePaymentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/LocalStorageSetMonthlyBill", ReplyAction="http://tempuri.org/IEmexContragentService/LocalStorageSetMonthlyBillResponse")]
        void LocalStorageSetMonthlyBill();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/LocalStorageSetMonthlyBill", ReplyAction="http://tempuri.org/IEmexContragentService/LocalStorageSetMonthlyBillResponse")]
        System.Threading.Tasks.Task LocalStorageSetMonthlyBillAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/LocalStorageSetMonthlyBill_v2", ReplyAction="http://tempuri.org/IEmexContragentService/LocalStorageSetMonthlyBill_v2Response")]
        void LocalStorageSetMonthlyBill_v2();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/LocalStorageSetMonthlyBill_v2", ReplyAction="http://tempuri.org/IEmexContragentService/LocalStorageSetMonthlyBill_v2Response")]
        System.Threading.Tasks.Task LocalStorageSetMonthlyBill_v2Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/ReportOnDebitCredit", ReplyAction="http://tempuri.org/IEmexContragentService/ReportOnDebitCreditResponse")]
        EmExServiceClient.ContragentService.OperationResult ReportOnDebitCredit(int balanceId, System.DateTime startDate, System.DateTime endDate, System.Nullable<bool> isSupplier, System.Nullable<long> buhContragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/ReportOnDebitCredit", ReplyAction="http://tempuri.org/IEmexContragentService/ReportOnDebitCreditResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> ReportOnDebitCreditAsync(int balanceId, System.DateTime startDate, System.DateTime endDate, System.Nullable<bool> isSupplier, System.Nullable<long> buhContragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UserMailingPriceSTAC", ReplyAction="http://tempuri.org/IEmexContragentService/UserMailingPriceSTACResponse")]
        EmExServiceClient.ContragentService.OperationResult UserMailingPriceSTAC();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UserMailingPriceSTAC", ReplyAction="http://tempuri.org/IEmexContragentService/UserMailingPriceSTACResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UserMailingPriceSTACAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UserMailingPriceSTDF", ReplyAction="http://tempuri.org/IEmexContragentService/UserMailingPriceSTDFResponse")]
        EmExServiceClient.ContragentService.OperationResult UserMailingPriceSTDF();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UserMailingPriceSTDF", ReplyAction="http://tempuri.org/IEmexContragentService/UserMailingPriceSTDFResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UserMailingPriceSTDFAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UserMailingPriceSTOC", ReplyAction="http://tempuri.org/IEmexContragentService/UserMailingPriceSTOCResponse")]
        EmExServiceClient.ContragentService.OperationResult UserMailingPriceSTOC();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UserMailingPriceSTOC", ReplyAction="http://tempuri.org/IEmexContragentService/UserMailingPriceSTOCResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UserMailingPriceSTOCAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UserMailing", ReplyAction="http://tempuri.org/IEmexContragentService/UserMailingResponse")]
        EmExServiceClient.ContragentService.OperationResult UserMailing(long mailingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UserMailing", ReplyAction="http://tempuri.org/IEmexContragentService/UserMailingResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UserMailingAsync(long mailingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateBccMercLostFiles", ReplyAction="http://tempuri.org/IEmexContragentService/CreateBccMercLostFilesResponse")]
        void CreateBccMercLostFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateBccMercLostFiles", ReplyAction="http://tempuri.org/IEmexContragentService/CreateBccMercLostFilesResponse")]
        System.Threading.Tasks.Task CreateBccMercLostFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateBesaMercLostFiles", ReplyAction="http://tempuri.org/IEmexContragentService/CreateBesaMercLostFilesResponse")]
        void CreateBesaMercLostFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateBesaMercLostFiles", ReplyAction="http://tempuri.org/IEmexContragentService/CreateBesaMercLostFilesResponse")]
        System.Threading.Tasks.Task CreateBesaMercLostFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateBCCMercFiles", ReplyAction="http://tempuri.org/IEmexContragentService/CreateBCCMercFilesResponse")]
        void CreateBCCMercFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateBCCMercFiles", ReplyAction="http://tempuri.org/IEmexContragentService/CreateBCCMercFilesResponse")]
        System.Threading.Tasks.Task CreateBCCMercFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateBesaMercFiles", ReplyAction="http://tempuri.org/IEmexContragentService/CreateBesaMercFilesResponse")]
        void CreateBesaMercFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateBesaMercFiles", ReplyAction="http://tempuri.org/IEmexContragentService/CreateBesaMercFilesResponse")]
        System.Threading.Tasks.Task CreateBesaMercFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendReturnsToWmsMinutely", ReplyAction="http://tempuri.org/IEmexContragentService/SendReturnsToWmsMinutelyResponse")]
        void SendReturnsToWmsMinutely();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendReturnsToWmsMinutely", ReplyAction="http://tempuri.org/IEmexContragentService/SendReturnsToWmsMinutelyResponse")]
        System.Threading.Tasks.Task SendReturnsToWmsMinutelyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendPDC_Claim", ReplyAction="http://tempuri.org/IEmexContragentService/SendPDC_ClaimResponse")]
        void SendPDC_Claim();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendPDC_Claim", ReplyAction="http://tempuri.org/IEmexContragentService/SendPDC_ClaimResponse")]
        System.Threading.Tasks.Task SendPDC_ClaimAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendMsgToSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/SendMsgToSupplierResponse")]
        void SendMsgToSupplier();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendMsgToSupplier", ReplyAction="http://tempuri.org/IEmexContragentService/SendMsgToSupplierResponse")]
        System.Threading.Tasks.Task SendMsgToSupplierAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/AccountDateModifier", ReplyAction="http://tempuri.org/IEmexContragentService/AccountDateModifierResponse")]
        void AccountDateModifier();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/AccountDateModifier", ReplyAction="http://tempuri.org/IEmexContragentService/AccountDateModifierResponse")]
        System.Threading.Tasks.Task AccountDateModifierAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateAndCloseBuhReestrForDiadocDocumen" +
            "ts", ReplyAction="http://tempuri.org/IEmexContragentService/CreateAndCloseBuhReestrForDiadocDocumen" +
            "tsResponse")]
        void CreateAndCloseBuhReestrForDiadocDocuments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateAndCloseBuhReestrForDiadocDocumen" +
            "ts", ReplyAction="http://tempuri.org/IEmexContragentService/CreateAndCloseBuhReestrForDiadocDocumen" +
            "tsResponse")]
        System.Threading.Tasks.Task CreateAndCloseBuhReestrForDiadocDocumentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendSecurityDepositTo1C", ReplyAction="http://tempuri.org/IEmexContragentService/SendSecurityDepositTo1CResponse")]
        void SendSecurityDepositTo1C();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendSecurityDepositTo1C", ReplyAction="http://tempuri.org/IEmexContragentService/SendSecurityDepositTo1CResponse")]
        System.Threading.Tasks.Task SendSecurityDepositTo1CAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendReclamationToPdc", ReplyAction="http://tempuri.org/IEmexContragentService/SendReclamationToPdcResponse")]
        void SendReclamationToPdc();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendReclamationToPdc", ReplyAction="http://tempuri.org/IEmexContragentService/SendReclamationToPdcResponse")]
        System.Threading.Tasks.Task SendReclamationToPdcAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSuppliers", ReplyAction="http://tempuri.org/IEmexContragentService/GetSuppliersResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfSupplierBase GetSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSuppliers", ReplyAction="http://tempuri.org/IEmexContragentService/GetSuppliersResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSupplierBase> GetSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierDocumentReturnCards", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierDocumentReturnCardsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfSupplierDocumentReturnCard GetSupplierDocumentReturnCards(long supplierId, System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSupplierDocumentReturnCards", ReplyAction="http://tempuri.org/IEmexContragentService/GetSupplierDocumentReturnCardsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSupplierDocumentReturnCard> GetSupplierDocumentReturnCardsAsync(long supplierId, System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetBarcodePicture", ReplyAction="http://tempuri.org/IEmexContragentService/GetBarcodePictureResponse")]
        byte[] GetBarcodePicture(long orderDetailSubId, int portion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetBarcodePicture", ReplyAction="http://tempuri.org/IEmexContragentService/GetBarcodePictureResponse")]
        System.Threading.Tasks.Task<byte[]> GetBarcodePictureAsync(long orderDetailSubId, int portion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateDetailsStickers", ReplyAction="http://tempuri.org/IEmexContragentService/CreateDetailsStickersResponse")]
        byte[] CreateDetailsStickers(EmExServiceClient.ContragentService.PrintSticker[] details, EmExServiceClient.ContragentService.StickerPrintMode mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateDetailsStickers", ReplyAction="http://tempuri.org/IEmexContragentService/CreateDetailsStickersResponse")]
        System.Threading.Tasks.Task<byte[]> CreateDetailsStickersAsync(EmExServiceClient.ContragentService.PrintSticker[] details, EmExServiceClient.ContragentService.StickerPrintMode mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateDocumentStickers", ReplyAction="http://tempuri.org/IEmexContragentService/CreateDocumentStickersResponse")]
        byte[] CreateDocumentStickers(EmExServiceClient.ContragentService.DocumentSticker[] documents, EmExServiceClient.ContragentService.StickerPrintMode mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateDocumentStickers", ReplyAction="http://tempuri.org/IEmexContragentService/CreateDocumentStickersResponse")]
        System.Threading.Tasks.Task<byte[]> CreateDocumentStickersAsync(EmExServiceClient.ContragentService.DocumentSticker[] documents, EmExServiceClient.ContragentService.StickerPrintMode mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateTransportDocumentStickers", ReplyAction="http://tempuri.org/IEmexContragentService/CreateTransportDocumentStickersResponse" +
            "")]
        byte[] CreateTransportDocumentStickers(EmExServiceClient.ContragentService.TransportDocumentSticker[] documents, EmExServiceClient.ContragentService.StickerPrintMode mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateTransportDocumentStickers", ReplyAction="http://tempuri.org/IEmexContragentService/CreateTransportDocumentStickersResponse" +
            "")]
        System.Threading.Tasks.Task<byte[]> CreateTransportDocumentStickersAsync(EmExServiceClient.ContragentService.TransportDocumentSticker[] documents, EmExServiceClient.ContragentService.StickerPrintMode mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetLocalStorageAccounts", ReplyAction="http://tempuri.org/IEmexContragentService/GetLocalStorageAccountsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccountNew GetLocalStorageAccounts(int supplierId, System.DateTime fromUtcDate, System.DateTime toUtcDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetLocalStorageAccounts", ReplyAction="http://tempuri.org/IEmexContragentService/GetLocalStorageAccountsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccountNew> GetLocalStorageAccountsAsync(int supplierId, System.DateTime fromUtcDate, System.DateTime toUtcDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSubstitutes", ReplyAction="http://tempuri.org/IEmexContragentService/GetSubstitutesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDetailSubstituteDto GetSubstitutes(long detailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetSubstitutes", ReplyAction="http://tempuri.org/IEmexContragentService/GetSubstitutesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDetailSubstituteDto> GetSubstitutesAsync(long detailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateDetail", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateDetailResponse")]
        EmExServiceClient.ContragentService.OperationResultlong UpdateDetail(EmExServiceClient.ContragentService.DetailDto detail, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateDetail", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateDetailResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultlong> UpdateDetailAsync(EmExServiceClient.ContragentService.DetailDto detail, long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/AddDetail", ReplyAction="http://tempuri.org/IEmexContragentService/AddDetailResponse")]
        EmExServiceClient.ContragentService.OperationResult AddDetail(EmExServiceClient.ContragentService.DetailDto detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/AddDetail", ReplyAction="http://tempuri.org/IEmexContragentService/AddDetailResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> AddDetailAsync(EmExServiceClient.ContragentService.DetailDto detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteDetail", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteDetailResponse")]
        EmExServiceClient.ContragentService.OperationResult DeleteDetail(long detailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteDetail", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteDetailResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteDetailAsync(long detailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteDetailSubstitute", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteDetailSubstituteResponse")]
        EmExServiceClient.ContragentService.OperationResult DeleteDetailSubstitute(long detailId, long substId, long userId, string comment, string substType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteDetailSubstitute", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteDetailSubstituteResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteDetailSubstituteAsync(long detailId, long substId, long userId, string comment, string substType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetLocalStorageAccounts2", ReplyAction="http://tempuri.org/IEmexContragentService/GetLocalStorageAccounts2Response")]
        EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccount2 GetLocalStorageAccounts2(long customerId, short buhBalanceId, System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetLocalStorageAccounts2", ReplyAction="http://tempuri.org/IEmexContragentService/GetLocalStorageAccounts2Response")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccount2> GetLocalStorageAccounts2Async(long customerId, short buhBalanceId, System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerDiscountManual", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerDiscountManualResponse")]
        EmExServiceClient.ContragentService.OperationResultCustomerDiscountManual GetCustomerDiscountManual(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerDiscountManual", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerDiscountManualResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerDiscountManual> GetCustomerDiscountManualAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerDiscountManual", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerDiscountManualRespon" +
            "se")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerDiscountManual(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerDiscountManual", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerDiscountManualRespon" +
            "se")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerDiscountManualAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerDiscountManual", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerDiscountManualResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerDiscountManual(EmExServiceClient.ContragentService.ActionLock actionLock, long customerId, decimal discount, System.DateTime expireDate, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerDiscountManual", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerDiscountManualResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerDiscountManualAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long customerId, decimal discount, System.DateTime expireDate, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerDiscountManual", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerDiscountManualRespo" +
            "nse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerDiscountManual(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerDiscountManual", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerDiscountManualRespo" +
            "nse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerDiscountManualAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/IsContragentWorkDirectDeliveryUpd", ReplyAction="http://tempuri.org/IEmexContragentService/IsContragentWorkDirectDeliveryUpdRespon" +
            "se")]
        EmExServiceClient.ContragentService.OperationResultboolean IsContragentWorkDirectDeliveryUpd(string inn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/IsContragentWorkDirectDeliveryUpd", ReplyAction="http://tempuri.org/IEmexContragentService/IsContragentWorkDirectDeliveryUpdRespon" +
            "se")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultboolean> IsContragentWorkDirectDeliveryUpdAsync(string inn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CustomerDocumentsFlowType", ReplyAction="http://tempuri.org/IEmexContragentService/CustomerDocumentsFlowTypeResponse")]
        EmExServiceClient.ContragentService.OperationResultNullableOfdateTime CustomerDocumentsFlowType(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CustomerDocumentsFlowType", ReplyAction="http://tempuri.org/IEmexContragentService/CustomerDocumentsFlowTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultNullableOfdateTime> CustomerDocumentsFlowTypeAsync(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetMinDateUpd", ReplyAction="http://tempuri.org/IEmexContragentService/GetMinDateUpdResponse")]
        EmExServiceClient.ContragentService.OperationResultNullableOfdateTime GetMinDateUpd(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetMinDateUpd", ReplyAction="http://tempuri.org/IEmexContragentService/GetMinDateUpdResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultNullableOfdateTime> GetMinDateUpdAsync(int customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UtilizationFinalize", ReplyAction="http://tempuri.org/IEmexContragentService/UtilizationFinalizeResponse")]
        EmExServiceClient.ContragentService.OperationResult UtilizationFinalize(int actNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UtilizationFinalize", ReplyAction="http://tempuri.org/IEmexContragentService/UtilizationFinalizeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UtilizationFinalizeAsync(int actNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UtilizationCreate", ReplyAction="http://tempuri.org/IEmexContragentService/UtilizationCreateResponse")]
        EmExServiceClient.ContragentService.OperationResult UtilizationCreate(int actNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UtilizationCreate", ReplyAction="http://tempuri.org/IEmexContragentService/UtilizationCreateResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UtilizationCreateAsync(int actNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDecommissionList", ReplyAction="http://tempuri.org/IEmexContragentService/GetDecommissionListResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDecommission GetDecommissionList(System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDecommissionList", ReplyAction="http://tempuri.org/IEmexContragentService/GetDecommissionListResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDecommission> GetDecommissionListAsync(System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDecommissionDetailsList", ReplyAction="http://tempuri.org/IEmexContragentService/GetDecommissionDetailsListResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDecommissionDetail GetDecommissionDetailsList(int recycledDocumentId, System.Nullable<int> recyclingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDecommissionDetailsList", ReplyAction="http://tempuri.org/IEmexContragentService/GetDecommissionDetailsListResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDecommissionDetail> GetDecommissionDetailsListAsync(int recycledDocumentId, System.Nullable<int> recyclingType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/RollbackDetailDecommission", ReplyAction="http://tempuri.org/IEmexContragentService/RollbackDetailDecommissionResponse")]
        EmExServiceClient.ContragentService.OperationResult RollbackDetailDecommission(int recycledDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/RollbackDetailDecommission", ReplyAction="http://tempuri.org/IEmexContragentService/RollbackDetailDecommissionResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> RollbackDetailDecommissionAsync(int recycledDocumentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendDetailsToUtilization", ReplyAction="http://tempuri.org/IEmexContragentService/SendDetailsToUtilizationResponse")]
        EmExServiceClient.ContragentService.OperationResult SendDetailsToUtilization(int recycledDocumentId, long[] detailIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SendDetailsToUtilization", ReplyAction="http://tempuri.org/IEmexContragentService/SendDetailsToUtilizationResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendDetailsToUtilizationAsync(int recycledDocumentId, long[] detailIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SetDecommissionType", ReplyAction="http://tempuri.org/IEmexContragentService/SetDecommissionTypeResponse")]
        EmExServiceClient.ContragentService.OperationResult SetDecommissionType(int[] decommissionList, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SetDecommissionType", ReplyAction="http://tempuri.org/IEmexContragentService/SetDecommissionTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SetDecommissionTypeAsync(int[] decommissionList, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateUtilizationDocuments", ReplyAction="http://tempuri.org/IEmexContragentService/CreateUtilizationDocumentsResponse")]
        EmExServiceClient.ContragentService.OperationResultint CreateUtilizationDocuments(int[] decommissionList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CreateUtilizationDocuments", ReplyAction="http://tempuri.org/IEmexContragentService/CreateUtilizationDocumentsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultint> CreateUtilizationDocumentsAsync(int[] decommissionList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAccountCards", ReplyAction="http://tempuri.org/IEmexContragentService/GetAccountCardsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard GetAccountCards(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAccountCards", ReplyAction="http://tempuri.org/IEmexContragentService/GetAccountCardsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard> GetAccountCardsAsync(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAccountCards2", ReplyAction="http://tempuri.org/IEmexContragentService/GetAccountCards2Response")]
        EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard2 GetAccountCards2(string customerLogo, System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAccountCards2", ReplyAction="http://tempuri.org/IEmexContragentService/GetAccountCards2Response")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard2> GetAccountCards2Async(string customerLogo, System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAccountCards3", ReplyAction="http://tempuri.org/IEmexContragentService/GetAccountCards3Response")]
        EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard3 GetAccountCards3(string customerLogo, System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAccountCards3", ReplyAction="http://tempuri.org/IEmexContragentService/GetAccountCards3Response")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard3> GetAccountCards3Async(string customerLogo, System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDiadocDocumentStatuses", ReplyAction="http://tempuri.org/IEmexContragentService/GetDiadocDocumentStatusesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDiadocDocumentStatus GetDiadocDocumentStatuses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDiadocDocumentStatuses", ReplyAction="http://tempuri.org/IEmexContragentService/GetDiadocDocumentStatusesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDiadocDocumentStatus> GetDiadocDocumentStatusesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDocumentReturnCards", ReplyAction="http://tempuri.org/IEmexContragentService/GetDocumentReturnCardsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfDocumentReturnCard GetDocumentReturnCards(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo, System.Nullable<bool> taken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetDocumentReturnCards", ReplyAction="http://tempuri.org/IEmexContragentService/GetDocumentReturnCardsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDocumentReturnCard> GetDocumentReturnCardsAsync(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo, System.Nullable<bool> taken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAccountDetails", ReplyAction="http://tempuri.org/IEmexContragentService/GetAccountDetailsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfAccountDetailViewItem GetAccountDetails(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAccountDetails", ReplyAction="http://tempuri.org/IEmexContragentService/GetAccountDetailsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfAccountDetailViewItem> GetAccountDetailsAsync(long accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/IsAlive", ReplyAction="http://tempuri.org/IEmexContragentService/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/IsAlive", ReplyAction="http://tempuri.org/IEmexContragentService/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomers", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomersResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfCustomer GetCustomers(bool isIncludeClosed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomers", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomersResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomer> GetCustomersAsync(bool isIncludeClosed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SearchCustomersByContext", ReplyAction="http://tempuri.org/IEmexContragentService/SearchCustomersByContextResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfCustomerSearchResultItem SearchCustomersByContext(string context, bool isIncludeClosed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/SearchCustomersByContext", ReplyAction="http://tempuri.org/IEmexContragentService/SearchCustomersByContextResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerSearchResultItem> SearchCustomersByContextAsync(string context, bool isIncludeClosed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerByContragentId", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerByContragentIdResponse")]
        EmExServiceClient.ContragentService.OperationResultCustomer GetCustomerByContragentId(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerByContragentId", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerByContragentIdResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomer> GetCustomerByContragentIdAsync(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerGroups", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerGroupsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfCustomer.CustomerGroup GetCustomerGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerGroups", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerGroupsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomer.CustomerGroup> GetCustomerGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerIdentities", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerIdentitiesResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity GetCustomerIdentities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerIdentities", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerIdentitiesResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity> GetCustomerIdentitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerIdentitiesBuhContragent", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerIdentitiesBuhContragentRespo" +
            "nse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity GetCustomerIdentitiesBuhContragent(bool isIncludeClosed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerIdentitiesBuhContragent", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerIdentitiesBuhContragentRespo" +
            "nse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity> GetCustomerIdentitiesBuhContragentAsync(bool isIncludeClosed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerDocumentSettings", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerDocumentSettingsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfContragentDocumentSetting GetCustomerDocumentSettings(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerDocumentSettings", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerDocumentSettingsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfContragentDocumentSetting> GetCustomerDocumentSettingsAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerGroup", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerGroupResponse")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerGroup(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerGroup", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerGroupResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerGroupAsync(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerGroup", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerGroupResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerGroup(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, long customerGroupId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerGroup", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerGroupResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerGroupAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, long customerGroupId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerGroup", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerGroupResponse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerGroup(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerGroup", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerGroupResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerGroupAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerPartnerType", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerPartnerTypeResponse")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerPartnerType(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerPartnerType", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerPartnerTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerPartnerTypeAsync(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerPartnerType", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerPartnerTypeResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerPartnerType(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, EmExServiceClient.ContragentService.PartnerType partnerType, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerPartnerType", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerPartnerTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerPartnerTypeAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, EmExServiceClient.ContragentService.PartnerType partnerType, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerPartnerType", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerPartnerTypeResponse" +
            "")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerPartnerType(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerPartnerType", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerPartnerTypeResponse" +
            "")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerPartnerTypeAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerWorkType", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerWorkTypeResponse")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerWorkType(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerWorkType", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerWorkTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerWorkTypeAsync(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerWorkType", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerWorkTypeResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerWorkType(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, EmExServiceClient.ContragentService.WorkType workType, System.DateTime expireDate, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerWorkType", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerWorkTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerWorkTypeAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, EmExServiceClient.ContragentService.WorkType workType, System.DateTime expireDate, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerWorkType", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerWorkTypeResponse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerWorkType(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerWorkType", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerWorkTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerWorkTypeAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BlockCustomerWork", ReplyAction="http://tempuri.org/IEmexContragentService/BlockCustomerWorkResponse")]
        EmExServiceClient.ContragentService.OperationResult BlockCustomerWork(long customerId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BlockCustomerWork", ReplyAction="http://tempuri.org/IEmexContragentService/BlockCustomerWorkResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> BlockCustomerWorkAsync(long customerId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UnblockCustomerWork", ReplyAction="http://tempuri.org/IEmexContragentService/UnblockCustomerWorkResponse")]
        EmExServiceClient.ContragentService.OperationResult UnblockCustomerWork(long customerId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UnblockCustomerWork", ReplyAction="http://tempuri.org/IEmexContragentService/UnblockCustomerWorkResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UnblockCustomerWorkAsync(long customerId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerDelivery", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerDeliveryResponse")]
        EmExServiceClient.ContragentService.OperationResultCustomerDelivery GetCustomerDelivery(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerDelivery", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerDeliveryResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerDelivery> GetCustomerDeliveryAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerDelivery", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerDeliveryResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerDelivery(EmExServiceClient.ContragentService.CustomerDelivery customerDelivery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerDelivery", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerDeliveryResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerDeliveryAsync(EmExServiceClient.ContragentService.CustomerDelivery customerDelivery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetTransportersList", ReplyAction="http://tempuri.org/IEmexContragentService/GetTransportersListResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity GetTransportersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetTransportersList", ReplyAction="http://tempuri.org/IEmexContragentService/GetTransportersListResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity> GetTransportersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetTransportCompaniesList", ReplyAction="http://tempuri.org/IEmexContragentService/GetTransportCompaniesListResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity GetTransportCompaniesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetTransportCompaniesList", ReplyAction="http://tempuri.org/IEmexContragentService/GetTransportCompaniesListResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity> GetTransportCompaniesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/ReplaceDeliveryRegionType", ReplyAction="http://tempuri.org/IEmexContragentService/ReplaceDeliveryRegionTypeResponse")]
        EmExServiceClient.ContragentService.OperationResult ReplaceDeliveryRegionType(long customerId, string customerLogo, string typeFrom, string typeTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/ReplaceDeliveryRegionType", ReplyAction="http://tempuri.org/IEmexContragentService/ReplaceDeliveryRegionTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> ReplaceDeliveryRegionTypeAsync(long customerId, string customerLogo, string typeFrom, string typeTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerScheduleList", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerScheduleListResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfCustomerScheduleAttribute GetCustomerScheduleList(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerScheduleList", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerScheduleListResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerScheduleAttribute> GetCustomerScheduleListAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetPrimaryDeliveryRegionType", ReplyAction="http://tempuri.org/IEmexContragentService/GetPrimaryDeliveryRegionTypeResponse")]
        EmExServiceClient.ContragentService.OperationResultDeliveryRegionType GetPrimaryDeliveryRegionType(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetPrimaryDeliveryRegionType", ReplyAction="http://tempuri.org/IEmexContragentService/GetPrimaryDeliveryRegionTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultDeliveryRegionType> GetPrimaryDeliveryRegionTypeAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetTransportCompanySchedule", ReplyAction="http://tempuri.org/IEmexContragentService/GetTransportCompanyScheduleResponse")]
        EmExServiceClient.ContragentService.OperationResultCustomerScheduleAttribute GetTransportCompanySchedule(long TransportCompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetTransportCompanySchedule", ReplyAction="http://tempuri.org/IEmexContragentService/GetTransportCompanyScheduleResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerScheduleAttribute> GetTransportCompanyScheduleAsync(long TransportCompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAltDeliveryRegionType", ReplyAction="http://tempuri.org/IEmexContragentService/GetAltDeliveryRegionTypeResponse")]
        EmExServiceClient.ContragentService.OperationResultDeliveryRegionType GetAltDeliveryRegionType(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetAltDeliveryRegionType", ReplyAction="http://tempuri.org/IEmexContragentService/GetAltDeliveryRegionTypeResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultDeliveryRegionType> GetAltDeliveryRegionTypeAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerPrimaryTransportCompany", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerPrimaryTransportCompanyRe" +
            "sponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerPrimaryTransportCompany(long customerId, long newTransportCompanyId, long oldTransportCompanyId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerPrimaryTransportCompany", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerPrimaryTransportCompanyRe" +
            "sponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerPrimaryTransportCompanyAsync(long customerId, long newTransportCompanyId, long oldTransportCompanyId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerAlternativeTransportCompa" +
            "ny", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerAlternativeTransportCompa" +
            "nyResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerAlternativeTransportCompany(long customerId, long newTransportCompanyId, long oldTransportCompanyId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerAlternativeTransportCompa" +
            "ny", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerAlternativeTransportCompa" +
            "nyResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerAlternativeTransportCompanyAsync(long customerId, long newTransportCompanyId, long oldTransportCompanyId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteCustomerPrimaryTransportCompany", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteCustomerPrimaryTransportCompanyRe" +
            "sponse")]
        EmExServiceClient.ContragentService.OperationResult DeleteCustomerPrimaryTransportCompany(long customerId, long transportCompanyId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteCustomerPrimaryTransportCompany", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteCustomerPrimaryTransportCompanyRe" +
            "sponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteCustomerPrimaryTransportCompanyAsync(long customerId, long transportCompanyId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteCustomerAlternativeTransportCompa" +
            "ny", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteCustomerAlternativeTransportCompa" +
            "nyResponse")]
        EmExServiceClient.ContragentService.OperationResult DeleteCustomerAlternativeTransportCompany(long customerId, long transportCompanyId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteCustomerAlternativeTransportCompa" +
            "ny", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteCustomerAlternativeTransportCompa" +
            "nyResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteCustomerAlternativeTransportCompanyAsync(long customerId, long transportCompanyId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerScheduleAttribute", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerScheduleAttributeResponse" +
            "")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerScheduleAttribute(EmExServiceClient.ContragentService.CustomerScheduleAttribute customerScheduleAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerScheduleAttribute", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerScheduleAttributeResponse" +
            "")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerScheduleAttributeAsync(EmExServiceClient.ContragentService.CustomerScheduleAttribute customerScheduleAttribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetRecyclingActs", ReplyAction="http://tempuri.org/IEmexContragentService/GetRecyclingActsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfActRecycling GetRecyclingActs(System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetRecyclingActs", ReplyAction="http://tempuri.org/IEmexContragentService/GetRecyclingActsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfActRecycling> GetRecyclingActsAsync(System.DateTime dateBegin, System.DateTime dateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetRecyclingAct", ReplyAction="http://tempuri.org/IEmexContragentService/GetRecyclingActResponse")]
        EmExServiceClient.ContragentService.OperationResultActRecycling GetRecyclingAct(int actNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetRecyclingAct", ReplyAction="http://tempuri.org/IEmexContragentService/GetRecyclingActResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActRecycling> GetRecyclingActAsync(int actNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetLocationsByOptovikId", ReplyAction="http://tempuri.org/IEmexContragentService/GetLocationsByOptovikIdResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfLocation GetLocationsByOptovikId(long optovikId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetLocationsByOptovikId", ReplyAction="http://tempuri.org/IEmexContragentService/GetLocationsByOptovikIdResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfLocation> GetLocationsByOptovikIdAsync(long optovikId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetRegions", ReplyAction="http://tempuri.org/IEmexContragentService/GetRegionsResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfRegion GetRegions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetRegions", ReplyAction="http://tempuri.org/IEmexContragentService/GetRegionsResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfRegion> GetRegionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/InsertLocation", ReplyAction="http://tempuri.org/IEmexContragentService/InsertLocationResponse")]
        EmExServiceClient.ContragentService.OperationResultint InsertLocation(EmExServiceClient.ContragentService.Location l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/InsertLocation", ReplyAction="http://tempuri.org/IEmexContragentService/InsertLocationResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultint> InsertLocationAsync(EmExServiceClient.ContragentService.Location l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateLocation", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateLocationResponse")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateLocation(long locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateLocation", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateLocationResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateLocationAsync(long locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateLocation", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateLocationResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateLocation(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Location location, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateLocation", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateLocationResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateLocationAsync(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Location location, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateLocation", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateLocationResponse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateLocation(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateLocation", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateLocationResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateLocationAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateLocationBitPublish", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateLocationBitPublishResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateLocationBitPublish(long locationId, bool bitPublish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateLocationBitPublish", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateLocationBitPublishResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateLocationBitPublishAsync(long locationId, bool bitPublish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateLocationRegion", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateLocationRegionResponse")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateLocationRegion(long locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateLocationRegion", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateLocationRegionResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateLocationRegionAsync(long locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateLocationRegion", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateLocationRegionResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateLocationRegion(EmExServiceClient.ContragentService.ActionLock actionLock, long locationId, string region, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateLocationRegion", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateLocationRegionResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateLocationRegionAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long locationId, string region, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateLocationRegion", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateLocationRegionResponse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateLocationRegion(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateLocationRegion", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateLocationRegionResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateLocationRegionAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteLocation", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteLocationResponse")]
        EmExServiceClient.ContragentService.OperationResult DeleteLocation(long locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/DeleteLocation", ReplyAction="http://tempuri.org/IEmexContragentService/DeleteLocationResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteLocationAsync(long locationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerDiscountHistory", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerDiscountHistoryResponse")]
        EmExServiceClient.ContragentService.OperationResultArrayOfCustomerDiscountHistoryItem GetCustomerDiscountHistory(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetCustomerDiscountHistory", ReplyAction="http://tempuri.org/IEmexContragentService/GetCustomerDiscountHistoryResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerDiscountHistoryItem> GetCustomerDiscountHistoryAsync(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerDiscount", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerDiscountResponse")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerDiscount(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerDiscount", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerDiscountResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerDiscountAsync(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerDiscount", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerDiscountResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerDiscount(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Customer customer, System.DateTime expireStartDate, System.DateTime expireEndDate, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerDiscount", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerDiscountResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerDiscountAsync(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Customer customer, System.DateTime expireStartDate, System.DateTime expireEndDate, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerDiscount", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerDiscountResponse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerDiscount(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerDiscount", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdateCustomerDiscountResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerDiscountAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetLastCustomerBalanceCalculation", ReplyAction="http://tempuri.org/IEmexContragentService/GetLastCustomerBalanceCalculationRespon" +
            "se")]
        EmExServiceClient.ContragentService.OperationResultCustomerBalance GetLastCustomerBalanceCalculation(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetLastCustomerBalanceCalculation", ReplyAction="http://tempuri.org/IEmexContragentService/GetLastCustomerBalanceCalculationRespon" +
            "se")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerBalance> GetLastCustomerBalanceCalculationAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CalculateCustomerBalance", ReplyAction="http://tempuri.org/IEmexContragentService/CalculateCustomerBalanceResponse")]
        EmExServiceClient.ContragentService.OperationResultCustomerBalance CalculateCustomerBalance(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CalculateCustomerBalance", ReplyAction="http://tempuri.org/IEmexContragentService/CalculateCustomerBalanceResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerBalance> CalculateCustomerBalanceAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetPreviousCustomer", ReplyAction="http://tempuri.org/IEmexContragentService/GetPreviousCustomerResponse")]
        EmExServiceClient.ContragentService.OperationResultCustomerIdentity GetPreviousCustomer(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/GetPreviousCustomer", ReplyAction="http://tempuri.org/IEmexContragentService/GetPreviousCustomerResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerIdentity> GetPreviousCustomerAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdatePreviousCustomerId", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdatePreviousCustomerIdResponse")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdatePreviousCustomerId(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdatePreviousCustomerId", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdatePreviousCustomerIdResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdatePreviousCustomerIdAsync(long customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdatePreviousCustomerId", ReplyAction="http://tempuri.org/IEmexContragentService/UpdatePreviousCustomerIdResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdatePreviousCustomerId(EmExServiceClient.ContragentService.ActionLock actionLock, long customerId, System.Nullable<long> prevCustomerId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdatePreviousCustomerId", ReplyAction="http://tempuri.org/IEmexContragentService/UpdatePreviousCustomerIdResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdatePreviousCustomerIdAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long customerId, System.Nullable<long> prevCustomerId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdatePreviousCustomerId", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdatePreviousCustomerIdResponse")]
        EmExServiceClient.ContragentService.OperationResult CancelUpdatePreviousCustomerId(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/CancelUpdatePreviousCustomerId", ReplyAction="http://tempuri.org/IEmexContragentService/CancelUpdatePreviousCustomerIdResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdatePreviousCustomerIdAsync(EmExServiceClient.ContragentService.ActionLock actionLock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerQuantityHoursOfFreeS" +
            "torage", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerQuantityHoursOfFreeS" +
            "torageResponse")]
        EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerQuantityHoursOfFreeStorage(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerQuantityHoursOfFreeS" +
            "torage", ReplyAction="http://tempuri.org/IEmexContragentService/BeginUpdateCustomerQuantityHoursOfFreeS" +
            "torageResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerQuantityHoursOfFreeStorageAsync(long contragentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerQuantityHoursOfFreeStorag" +
            "e", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerQuantityHoursOfFreeStorag" +
            "eResponse")]
        EmExServiceClient.ContragentService.OperationResult UpdateCustomerQuantityHoursOfFreeStorage(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, int quantityHours, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmexContragentService/UpdateCustomerQuantityHoursOfFreeStorag" +
            "e", ReplyAction="http://tempuri.org/IEmexContragentService/UpdateCustomerQuantityHoursOfFreeStorag" +
            "eResponse")]
        System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerQuantityHoursOfFreeStorageAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, int quantityHours, string comment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmexContragentServiceChannel : EmExServiceClient.ContragentService.IEmexContragentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmexContragentServiceClient : System.ServiceModel.ClientBase<EmExServiceClient.ContragentService.IEmexContragentService>, EmExServiceClient.ContragentService.IEmexContragentService {
        
        public EmexContragentServiceClient() {
        }
        
        public EmexContragentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmexContragentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmexContragentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmexContragentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EmExServiceClient.ContragentService.OperationResult CreateInventory(int[] decommissionList) {
            return base.Channel.CreateInventory(decommissionList);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CreateInventoryAsync(int[] decommissionList) {
            return base.Channel.CreateInventoryAsync(decommissionList);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfInventory GetInventoryList(System.DateTime dateBegin, System.DateTime dateEnd, bool processed) {
            return base.Channel.GetInventoryList(dateBegin, dateEnd, processed);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfInventory> GetInventoryListAsync(System.DateTime dateBegin, System.DateTime dateEnd, bool processed) {
            return base.Channel.GetInventoryListAsync(dateBegin, dateEnd, processed);
        }
        
        public EmExServiceClient.ContragentService.OperationResult SetRevocation(long documentId, string comment) {
            return base.Channel.SetRevocation(documentId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SetRevocationAsync(long documentId, string comment) {
            return base.Channel.SetRevocationAsync(documentId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult RunOverSet(long invoiceSFLostId) {
            return base.Channel.RunOverSet(invoiceSFLostId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> RunOverSetAsync(long invoiceSFLostId) {
            return base.Channel.RunOverSetAsync(invoiceSFLostId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult RecreateReturnDocument(long invoiceSFLostId, string typeLost, long userId) {
            return base.Channel.RecreateReturnDocument(invoiceSFLostId, typeLost, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> RecreateReturnDocumentAsync(long invoiceSFLostId, string typeLost, long userId) {
            return base.Channel.RecreateReturnDocumentAsync(invoiceSFLostId, typeLost, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDocumentCorrectionCard GetDocumentCorrectionCards(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo, string documentType) {
            return base.Channel.GetDocumentCorrectionCards(dateBegin, dateEnd, customerLogo, documentType);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDocumentCorrectionCard> GetDocumentCorrectionCardsAsync(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo, string documentType) {
            return base.Channel.GetDocumentCorrectionCardsAsync(dateBegin, dateEnd, customerLogo, documentType);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfUser GetActualUsers() {
            return base.Channel.GetActualUsers();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfUser> GetActualUsersAsync() {
            return base.Channel.GetActualUsersAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfGroup GetGroups() {
            return base.Channel.GetGroups();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfGroup> GetGroupsAsync() {
            return base.Channel.GetGroupsAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateUserData(long userId, long groupId, string userEmails) {
            return base.Channel.UpdateUserData(userId, groupId, userEmails);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateUserDataAsync(long userId, long groupId, string userEmails) {
            return base.Channel.UpdateUserDataAsync(userId, groupId, userEmails);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring SendPasswordUserToEmail(long connUserId, long userId) {
            return base.Channel.SendPasswordUserToEmail(connUserId, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> SendPasswordUserToEmailAsync(long connUserId, long userId) {
            return base.Channel.SendPasswordUserToEmailAsync(connUserId, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryCommon DetailsHistory_GetSalesHistoryCommon(string detailNum) {
            return base.Channel.DetailsHistory_GetSalesHistoryCommon(detailNum);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryCommon> DetailsHistory_GetSalesHistoryCommonAsync(string detailNum) {
            return base.Channel.DetailsHistory_GetSalesHistoryCommonAsync(detailNum);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryDetail DetailsHistory_GetSalesHistoryDetail(System.Nullable<long> orderDetailSubId, System.Nullable<long> orderDetailId, System.Nullable<long> globalId) {
            return base.Channel.DetailsHistory_GetSalesHistoryDetail(orderDetailSubId, orderDetailId, globalId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSalesHistoryDetail> DetailsHistory_GetSalesHistoryDetailAsync(System.Nullable<long> orderDetailSubId, System.Nullable<long> orderDetailId, System.Nullable<long> globalId) {
            return base.Channel.DetailsHistory_GetSalesHistoryDetailAsync(orderDetailSubId, orderDetailId, globalId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultTupleOfbooleanstringlonglong DetailsHistory_VerifyInvoiceBeforDelete(string invoiceLogo, string invoiceNumber) {
            return base.Channel.DetailsHistory_VerifyInvoiceBeforDelete(invoiceLogo, invoiceNumber);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultTupleOfbooleanstringlonglong> DetailsHistory_VerifyInvoiceBeforDeleteAsync(string invoiceLogo, string invoiceNumber) {
            return base.Channel.DetailsHistory_VerifyInvoiceBeforDeleteAsync(invoiceLogo, invoiceNumber);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeAnswerComment(long orderDetailSubId, string comment) {
            return base.Channel.DetailsHistory_ChangeAnswerComment(orderDetailSubId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeAnswerCommentAsync(long orderDetailSubId, string comment) {
            return base.Channel.DetailsHistory_ChangeAnswerCommentAsync(orderDetailSubId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeQuantity(long orderDetailSubId, long quantity, int userId) {
            return base.Channel.DetailsHistory_ChangeQuantity(orderDetailSubId, quantity, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeQuantityAsync(long orderDetailSubId, long quantity, int userId) {
            return base.Channel.DetailsHistory_ChangeQuantityAsync(orderDetailSubId, quantity, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_DeleteInvoice(long invoiceId, long supplierDeliveryId, int userId) {
            return base.Channel.DetailsHistory_DeleteInvoice(invoiceId, supplierDeliveryId, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_DeleteInvoiceAsync(long invoiceId, long supplierDeliveryId, int userId) {
            return base.Channel.DetailsHistory_DeleteInvoiceAsync(invoiceId, supplierDeliveryId, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDenyType DetailsHistory_GetDenyTypes() {
            return base.Channel.DetailsHistory_GetDenyTypes();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDenyType> DetailsHistory_GetDenyTypesAsync() {
            return base.Channel.DetailsHistory_GetDenyTypesAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDeleteType DetailsHistory_GetDeleteTypes() {
            return base.Channel.DetailsHistory_GetDeleteTypes();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDeleteType> DetailsHistory_GetDeleteTypesAsync() {
            return base.Channel.DetailsHistory_GetDeleteTypesAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDenyStatus DetailsHistory_GetDenyStatuses(long orderDetailId) {
            return base.Channel.DetailsHistory_GetDenyStatuses(orderDetailId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDenyStatus> DetailsHistory_GetDenyStatusesAsync(long orderDetailId) {
            return base.Channel.DetailsHistory_GetDenyStatusesAsync(orderDetailId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_RemoveDenyDetails(long orderDetailId, int userId) {
            return base.Channel.DetailsHistory_RemoveDenyDetails(orderDetailId, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_RemoveDenyDetailsAsync(long orderDetailId, int userId) {
            return base.Channel.DetailsHistory_RemoveDenyDetailsAsync(orderDetailId, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_AddDenyDetails(long orderDetailId, int denyDetailTypeId, string comments, float discount, int statusId, int userId) {
            return base.Channel.DetailsHistory_AddDenyDetails(orderDetailId, denyDetailTypeId, comments, discount, statusId, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_AddDenyDetailsAsync(long orderDetailId, int denyDetailTypeId, string comments, float discount, int statusId, int userId) {
            return base.Channel.DetailsHistory_AddDenyDetailsAsync(orderDetailId, denyDetailTypeId, comments, discount, statusId, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult DetailsHistory_RemoveONLY(long globalId, int userId) {
            return base.Channel.DetailsHistory_RemoveONLY(globalId, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DetailsHistory_RemoveONLYAsync(long globalId, int userId) {
            return base.Channel.DetailsHistory_RemoveONLYAsync(globalId, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfChangeAnswerLogLine DetailsHistory_GetChangeAnswerLogLines() {
            return base.Channel.DetailsHistory_GetChangeAnswerLogLines();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfChangeAnswerLogLine> DetailsHistory_GetChangeAnswerLogLinesAsync() {
            return base.Channel.DetailsHistory_GetChangeAnswerLogLinesAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_CloseOrderByDetail(long orderDetailSubId, bool bitStatistic, int userId, string customerComment) {
            return base.Channel.DetailsHistory_CloseOrderByDetail(orderDetailSubId, bitStatistic, userId, customerComment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_CloseOrderByDetailAsync(long orderDetailSubId, bool bitStatistic, int userId, string customerComment) {
            return base.Channel.DetailsHistory_CloseOrderByDetailAsync(orderDetailSubId, bitStatistic, userId, customerComment);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeQuantityByInvoice(long orderDetailSubId, int userId) {
            return base.Channel.DetailsHistory_ChangeQuantityByInvoice(orderDetailSubId, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeQuantityByInvoiceAsync(long orderDetailSubId, int userId) {
            return base.Channel.DetailsHistory_ChangeQuantityByInvoiceAsync(orderDetailSubId, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeQuantity_2(long orderDetailSubId, long quantity, bool bitStatistic, int userId, string customerComment) {
            return base.Channel.DetailsHistory_ChangeQuantity_2(orderDetailSubId, quantity, bitStatistic, userId, customerComment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeQuantity_2Async(long orderDetailSubId, long quantity, bool bitStatistic, int userId, string customerComment) {
            return base.Channel.DetailsHistory_ChangeQuantity_2Async(orderDetailSubId, quantity, bitStatistic, userId, customerComment);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring DetailsHistory_ChangeDeliveryType(long orderDetailSubId, int userId) {
            return base.Channel.DetailsHistory_ChangeDeliveryType(orderDetailSubId, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> DetailsHistory_ChangeDeliveryTypeAsync(long orderDetailSubId, int userId) {
            return base.Channel.DetailsHistory_ChangeDeliveryTypeAsync(orderDetailSubId, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultDetailDto FindDetail(string detailNum, string make) {
            return base.Channel.FindDetail(detailNum, make);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultDetailDto> FindDetailAsync(string detailNum, string make) {
            return base.Channel.FindDetailAsync(detailNum, make);
        }
        
        public EmExServiceClient.ContragentService.OperationResult DeleteAllDetailSubstitutes(long detailId, string comment) {
            return base.Channel.DeleteAllDetailSubstitutes(detailId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteAllDetailSubstitutesAsync(long detailId, string comment) {
            return base.Channel.DeleteAllDetailSubstitutesAsync(detailId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfMake GetMakes() {
            return base.Channel.GetMakes();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfMake> GetMakesAsync() {
            return base.Channel.GetMakesAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfSuppliersReturnsAuthority GetSupplierReturnAuthorities(long supplierId) {
            return base.Channel.GetSupplierReturnAuthorities(supplierId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSuppliersReturnsAuthority> GetSupplierReturnAuthoritiesAsync(long supplierId) {
            return base.Channel.GetSupplierReturnAuthoritiesAsync(supplierId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority GetSupplierReturnAuthority(int supplierReturnAuthorityId) {
            return base.Channel.GetSupplierReturnAuthority(supplierReturnAuthorityId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority> GetSupplierReturnAuthorityAsync(int supplierReturnAuthorityId) {
            return base.Channel.GetSupplierReturnAuthorityAsync(supplierReturnAuthorityId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority GetSupplierReturnAuthorityBySupplierIdAndBarcode(long supplierId, string barcode) {
            return base.Channel.GetSupplierReturnAuthorityBySupplierIdAndBarcode(supplierId, barcode);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority> GetSupplierReturnAuthorityBySupplierIdAndBarcodeAsync(long supplierId, string barcode) {
            return base.Channel.GetSupplierReturnAuthorityBySupplierIdAndBarcodeAsync(supplierId, barcode);
        }
        
        public EmExServiceClient.ContragentService.OperationResultint AddSupplierReturnAuthority(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel supplierReturnAuthority) {
            return base.Channel.AddSupplierReturnAuthority(supplierReturnAuthority);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultint> AddSupplierReturnAuthorityAsync(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel supplierReturnAuthority) {
            return base.Channel.AddSupplierReturnAuthorityAsync(supplierReturnAuthority);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateSupplierReturnAuthority(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel supplierReturnAuthority) {
            return base.Channel.UpdateSupplierReturnAuthority(supplierReturnAuthority);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateSupplierReturnAuthorityAsync(EmExServiceClient.ContragentService.SuppliersReturnsAuthorityModel supplierReturnAuthority) {
            return base.Channel.UpdateSupplierReturnAuthorityAsync(supplierReturnAuthority);
        }
        
        public EmExServiceClient.ContragentService.OperationResult SetSupplierReturnAuthorityState(long supplierId, int supplierReturnAuthorityId, byte authorityState) {
            return base.Channel.SetSupplierReturnAuthorityState(supplierId, supplierReturnAuthorityId, authorityState);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SetSupplierReturnAuthorityStateAsync(long supplierId, int supplierReturnAuthorityId, byte authorityState) {
            return base.Channel.SetSupplierReturnAuthorityStateAsync(supplierId, supplierReturnAuthorityId, authorityState);
        }
        
        public EmExServiceClient.ContragentService.OperationResult SetSupplierReturnAuthorityScanUrl(long supplierId, int supplierReturnAuthorityId, string authorityScanUrl) {
            return base.Channel.SetSupplierReturnAuthorityScanUrl(supplierId, supplierReturnAuthorityId, authorityScanUrl);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SetSupplierReturnAuthorityScanUrlAsync(long supplierId, int supplierReturnAuthorityId, string authorityScanUrl) {
            return base.Channel.SetSupplierReturnAuthorityScanUrlAsync(supplierId, supplierReturnAuthorityId, authorityScanUrl);
        }
        
        public EmExServiceClient.ContragentService.OperationResultboolean GetSupplierReturnAuthoritySign(string supplierLogo) {
            return base.Channel.GetSupplierReturnAuthoritySign(supplierLogo);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultboolean> GetSupplierReturnAuthoritySignAsync(string supplierLogo) {
            return base.Channel.GetSupplierReturnAuthoritySignAsync(supplierLogo);
        }
        
        public EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority GetSupplierReturnsAuthorityByBarcode(string barcode) {
            return base.Channel.GetSupplierReturnsAuthorityByBarcode(barcode);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultSuppliersReturnsAuthority> GetSupplierReturnsAuthorityByBarcodeAsync(string barcode) {
            return base.Channel.GetSupplierReturnsAuthorityByBarcodeAsync(barcode);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerQuantityHoursOfFreeStorage(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerQuantityHoursOfFreeStorage(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerQuantityHoursOfFreeStorageAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerQuantityHoursOfFreeStorageAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfConsumer GetConsumers(long wholesalerId) {
            return base.Channel.GetConsumers(wholesalerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfConsumer> GetConsumersAsync(long wholesalerId) {
            return base.Channel.GetConsumersAsync(wholesalerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult BeginUpdateConsumer(long consumerId) {
            return base.Channel.BeginUpdateConsumer(consumerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> BeginUpdateConsumerAsync(long consumerId) {
            return base.Channel.BeginUpdateConsumerAsync(consumerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateConsumer(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Consumer consumer, string comment) {
            return base.Channel.UpdateConsumer(actionLock, consumer, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateConsumerAsync(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Consumer consumer, string comment) {
            return base.Channel.UpdateConsumerAsync(actionLock, consumer, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateConsumer(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateConsumer(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateConsumerAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateConsumerAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfCustomerHistoryItem GetCustomerChangesHistory(long customerId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetCustomerChangesHistory(customerId, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerHistoryItem> GetCustomerChangesHistoryAsync(long customerId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetCustomerChangesHistoryAsync(customerId, startDate, endDate);
        }
        
        public EmExServiceClient.ContragentService.OperationResult SendNotAnswersMsgToSupplier() {
            return base.Channel.SendNotAnswersMsgToSupplier();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendNotAnswersMsgToSupplierAsync() {
            return base.Channel.SendNotAnswersMsgToSupplierAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult SendNotReceiptMsgToSupplier() {
            return base.Channel.SendNotReceiptMsgToSupplier();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendNotReceiptMsgToSupplierAsync() {
            return base.Channel.SendNotReceiptMsgToSupplierAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult SendNotReceiptMsgToManager() {
            return base.Channel.SendNotReceiptMsgToManager();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendNotReceiptMsgToManagerAsync() {
            return base.Channel.SendNotReceiptMsgToManagerAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult SendSuppliersMissingDocuments() {
            return base.Channel.SendSuppliersMissingDocuments();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendSuppliersMissingDocumentsAsync() {
            return base.Channel.SendSuppliersMissingDocumentsAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult CreateClosingProvodkaForContragents() {
            return base.Channel.CreateClosingProvodkaForContragents();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CreateClosingProvodkaForContragentsAsync() {
            return base.Channel.CreateClosingProvodkaForContragentsAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfTransportCompany GetTransportCompanies() {
            return base.Channel.GetTransportCompanies();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfTransportCompany> GetTransportCompaniesAsync() {
            return base.Channel.GetTransportCompaniesAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultSupplier SaveContragentSupplier(EmExServiceClient.ContragentService.Contragent contragent) {
            return base.Channel.SaveContragentSupplier(contragent);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultSupplier> SaveContragentSupplierAsync(EmExServiceClient.ContragentService.Contragent contragent) {
            return base.Channel.SaveContragentSupplierAsync(contragent);
        }
        
        public EmExServiceClient.ContragentService.OperationResultboolean IsSupplierLogoExists(string logo) {
            return base.Channel.IsSupplierLogoExists(logo);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultboolean> IsSupplierLogoExistsAsync(string logo) {
            return base.Channel.IsSupplierLogoExistsAsync(logo);
        }
        
        public EmExServiceClient.ContragentService.OperationResultstring GetNewLogoForSupplier() {
            return base.Channel.GetNewLogoForSupplier();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultstring> GetNewLogoForSupplierAsync() {
            return base.Channel.GetNewLogoForSupplierAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult RepeatEmailToSupplier(string supplierLogo) {
            return base.Channel.RepeatEmailToSupplier(supplierLogo);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> RepeatEmailToSupplierAsync(string supplierLogo) {
            return base.Channel.RepeatEmailToSupplierAsync(supplierLogo);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfContragent GetNonResidentCustomers() {
            return base.Channel.GetNonResidentCustomers();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfContragent> GetNonResidentCustomersAsync() {
            return base.Channel.GetNonResidentCustomersAsync();
        }
        
        public void CreateCustomerSortingServicePayments() {
            base.Channel.CreateCustomerSortingServicePayments();
        }
        
        public System.Threading.Tasks.Task CreateCustomerSortingServicePaymentsAsync() {
            return base.Channel.CreateCustomerSortingServicePaymentsAsync();
        }
        
        public void LocalStorageSetMonthlyBill() {
            base.Channel.LocalStorageSetMonthlyBill();
        }
        
        public System.Threading.Tasks.Task LocalStorageSetMonthlyBillAsync() {
            return base.Channel.LocalStorageSetMonthlyBillAsync();
        }
        
        public void LocalStorageSetMonthlyBill_v2() {
            base.Channel.LocalStorageSetMonthlyBill_v2();
        }
        
        public System.Threading.Tasks.Task LocalStorageSetMonthlyBill_v2Async() {
            return base.Channel.LocalStorageSetMonthlyBill_v2Async();
        }
        
        public EmExServiceClient.ContragentService.OperationResult ReportOnDebitCredit(int balanceId, System.DateTime startDate, System.DateTime endDate, System.Nullable<bool> isSupplier, System.Nullable<long> buhContragentId) {
            return base.Channel.ReportOnDebitCredit(balanceId, startDate, endDate, isSupplier, buhContragentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> ReportOnDebitCreditAsync(int balanceId, System.DateTime startDate, System.DateTime endDate, System.Nullable<bool> isSupplier, System.Nullable<long> buhContragentId) {
            return base.Channel.ReportOnDebitCreditAsync(balanceId, startDate, endDate, isSupplier, buhContragentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UserMailingPriceSTAC() {
            return base.Channel.UserMailingPriceSTAC();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UserMailingPriceSTACAsync() {
            return base.Channel.UserMailingPriceSTACAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult UserMailingPriceSTDF() {
            return base.Channel.UserMailingPriceSTDF();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UserMailingPriceSTDFAsync() {
            return base.Channel.UserMailingPriceSTDFAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult UserMailingPriceSTOC() {
            return base.Channel.UserMailingPriceSTOC();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UserMailingPriceSTOCAsync() {
            return base.Channel.UserMailingPriceSTOCAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult UserMailing(long mailingId) {
            return base.Channel.UserMailing(mailingId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UserMailingAsync(long mailingId) {
            return base.Channel.UserMailingAsync(mailingId);
        }
        
        public void CreateBccMercLostFiles() {
            base.Channel.CreateBccMercLostFiles();
        }
        
        public System.Threading.Tasks.Task CreateBccMercLostFilesAsync() {
            return base.Channel.CreateBccMercLostFilesAsync();
        }
        
        public void CreateBesaMercLostFiles() {
            base.Channel.CreateBesaMercLostFiles();
        }
        
        public System.Threading.Tasks.Task CreateBesaMercLostFilesAsync() {
            return base.Channel.CreateBesaMercLostFilesAsync();
        }
        
        public void CreateBCCMercFiles() {
            base.Channel.CreateBCCMercFiles();
        }
        
        public System.Threading.Tasks.Task CreateBCCMercFilesAsync() {
            return base.Channel.CreateBCCMercFilesAsync();
        }
        
        public void CreateBesaMercFiles() {
            base.Channel.CreateBesaMercFiles();
        }
        
        public System.Threading.Tasks.Task CreateBesaMercFilesAsync() {
            return base.Channel.CreateBesaMercFilesAsync();
        }
        
        public void SendReturnsToWmsMinutely() {
            base.Channel.SendReturnsToWmsMinutely();
        }
        
        public System.Threading.Tasks.Task SendReturnsToWmsMinutelyAsync() {
            return base.Channel.SendReturnsToWmsMinutelyAsync();
        }
        
        public void SendPDC_Claim() {
            base.Channel.SendPDC_Claim();
        }
        
        public System.Threading.Tasks.Task SendPDC_ClaimAsync() {
            return base.Channel.SendPDC_ClaimAsync();
        }
        
        public void SendMsgToSupplier() {
            base.Channel.SendMsgToSupplier();
        }
        
        public System.Threading.Tasks.Task SendMsgToSupplierAsync() {
            return base.Channel.SendMsgToSupplierAsync();
        }
        
        public void AccountDateModifier() {
            base.Channel.AccountDateModifier();
        }
        
        public System.Threading.Tasks.Task AccountDateModifierAsync() {
            return base.Channel.AccountDateModifierAsync();
        }
        
        public void CreateAndCloseBuhReestrForDiadocDocuments() {
            base.Channel.CreateAndCloseBuhReestrForDiadocDocuments();
        }
        
        public System.Threading.Tasks.Task CreateAndCloseBuhReestrForDiadocDocumentsAsync() {
            return base.Channel.CreateAndCloseBuhReestrForDiadocDocumentsAsync();
        }
        
        public void SendSecurityDepositTo1C() {
            base.Channel.SendSecurityDepositTo1C();
        }
        
        public System.Threading.Tasks.Task SendSecurityDepositTo1CAsync() {
            return base.Channel.SendSecurityDepositTo1CAsync();
        }
        
        public void SendReclamationToPdc() {
            base.Channel.SendReclamationToPdc();
        }
        
        public System.Threading.Tasks.Task SendReclamationToPdcAsync() {
            return base.Channel.SendReclamationToPdcAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfSupplierBase GetSuppliers() {
            return base.Channel.GetSuppliers();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSupplierBase> GetSuppliersAsync() {
            return base.Channel.GetSuppliersAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfSupplierDocumentReturnCard GetSupplierDocumentReturnCards(long supplierId, System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetSupplierDocumentReturnCards(supplierId, dateBegin, dateEnd);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfSupplierDocumentReturnCard> GetSupplierDocumentReturnCardsAsync(long supplierId, System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetSupplierDocumentReturnCardsAsync(supplierId, dateBegin, dateEnd);
        }
        
        public byte[] GetBarcodePicture(long orderDetailSubId, int portion) {
            return base.Channel.GetBarcodePicture(orderDetailSubId, portion);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetBarcodePictureAsync(long orderDetailSubId, int portion) {
            return base.Channel.GetBarcodePictureAsync(orderDetailSubId, portion);
        }
        
        public byte[] CreateDetailsStickers(EmExServiceClient.ContragentService.PrintSticker[] details, EmExServiceClient.ContragentService.StickerPrintMode mode) {
            return base.Channel.CreateDetailsStickers(details, mode);
        }
        
        public System.Threading.Tasks.Task<byte[]> CreateDetailsStickersAsync(EmExServiceClient.ContragentService.PrintSticker[] details, EmExServiceClient.ContragentService.StickerPrintMode mode) {
            return base.Channel.CreateDetailsStickersAsync(details, mode);
        }
        
        public byte[] CreateDocumentStickers(EmExServiceClient.ContragentService.DocumentSticker[] documents, EmExServiceClient.ContragentService.StickerPrintMode mode) {
            return base.Channel.CreateDocumentStickers(documents, mode);
        }
        
        public System.Threading.Tasks.Task<byte[]> CreateDocumentStickersAsync(EmExServiceClient.ContragentService.DocumentSticker[] documents, EmExServiceClient.ContragentService.StickerPrintMode mode) {
            return base.Channel.CreateDocumentStickersAsync(documents, mode);
        }
        
        public byte[] CreateTransportDocumentStickers(EmExServiceClient.ContragentService.TransportDocumentSticker[] documents, EmExServiceClient.ContragentService.StickerPrintMode mode) {
            return base.Channel.CreateTransportDocumentStickers(documents, mode);
        }
        
        public System.Threading.Tasks.Task<byte[]> CreateTransportDocumentStickersAsync(EmExServiceClient.ContragentService.TransportDocumentSticker[] documents, EmExServiceClient.ContragentService.StickerPrintMode mode) {
            return base.Channel.CreateTransportDocumentStickersAsync(documents, mode);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccountNew GetLocalStorageAccounts(int supplierId, System.DateTime fromUtcDate, System.DateTime toUtcDate) {
            return base.Channel.GetLocalStorageAccounts(supplierId, fromUtcDate, toUtcDate);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccountNew> GetLocalStorageAccountsAsync(int supplierId, System.DateTime fromUtcDate, System.DateTime toUtcDate) {
            return base.Channel.GetLocalStorageAccountsAsync(supplierId, fromUtcDate, toUtcDate);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDetailSubstituteDto GetSubstitutes(long detailId) {
            return base.Channel.GetSubstitutes(detailId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDetailSubstituteDto> GetSubstitutesAsync(long detailId) {
            return base.Channel.GetSubstitutesAsync(detailId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultlong UpdateDetail(EmExServiceClient.ContragentService.DetailDto detail, long userId) {
            return base.Channel.UpdateDetail(detail, userId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultlong> UpdateDetailAsync(EmExServiceClient.ContragentService.DetailDto detail, long userId) {
            return base.Channel.UpdateDetailAsync(detail, userId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult AddDetail(EmExServiceClient.ContragentService.DetailDto detail) {
            return base.Channel.AddDetail(detail);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> AddDetailAsync(EmExServiceClient.ContragentService.DetailDto detail) {
            return base.Channel.AddDetailAsync(detail);
        }
        
        public EmExServiceClient.ContragentService.OperationResult DeleteDetail(long detailId) {
            return base.Channel.DeleteDetail(detailId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteDetailAsync(long detailId) {
            return base.Channel.DeleteDetailAsync(detailId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult DeleteDetailSubstitute(long detailId, long substId, long userId, string comment, string substType) {
            return base.Channel.DeleteDetailSubstitute(detailId, substId, userId, comment, substType);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteDetailSubstituteAsync(long detailId, long substId, long userId, string comment, string substType) {
            return base.Channel.DeleteDetailSubstituteAsync(detailId, substId, userId, comment, substType);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccount2 GetLocalStorageAccounts2(long customerId, short buhBalanceId, System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetLocalStorageAccounts2(customerId, buhBalanceId, dateBegin, dateEnd);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfLocalStorageAccount2> GetLocalStorageAccounts2Async(long customerId, short buhBalanceId, System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetLocalStorageAccounts2Async(customerId, buhBalanceId, dateBegin, dateEnd);
        }
        
        public EmExServiceClient.ContragentService.OperationResultCustomerDiscountManual GetCustomerDiscountManual(long customerId) {
            return base.Channel.GetCustomerDiscountManual(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerDiscountManual> GetCustomerDiscountManualAsync(long customerId) {
            return base.Channel.GetCustomerDiscountManualAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerDiscountManual(long customerId) {
            return base.Channel.BeginUpdateCustomerDiscountManual(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerDiscountManualAsync(long customerId) {
            return base.Channel.BeginUpdateCustomerDiscountManualAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerDiscountManual(EmExServiceClient.ContragentService.ActionLock actionLock, long customerId, decimal discount, System.DateTime expireDate, string comment) {
            return base.Channel.UpdateCustomerDiscountManual(actionLock, customerId, discount, expireDate, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerDiscountManualAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long customerId, decimal discount, System.DateTime expireDate, string comment) {
            return base.Channel.UpdateCustomerDiscountManualAsync(actionLock, customerId, discount, expireDate, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerDiscountManual(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerDiscountManual(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerDiscountManualAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerDiscountManualAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResultboolean IsContragentWorkDirectDeliveryUpd(string inn) {
            return base.Channel.IsContragentWorkDirectDeliveryUpd(inn);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultboolean> IsContragentWorkDirectDeliveryUpdAsync(string inn) {
            return base.Channel.IsContragentWorkDirectDeliveryUpdAsync(inn);
        }
        
        public EmExServiceClient.ContragentService.OperationResultNullableOfdateTime CustomerDocumentsFlowType(int customerId) {
            return base.Channel.CustomerDocumentsFlowType(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultNullableOfdateTime> CustomerDocumentsFlowTypeAsync(int customerId) {
            return base.Channel.CustomerDocumentsFlowTypeAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultNullableOfdateTime GetMinDateUpd(int customerId) {
            return base.Channel.GetMinDateUpd(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultNullableOfdateTime> GetMinDateUpdAsync(int customerId) {
            return base.Channel.GetMinDateUpdAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UtilizationFinalize(int actNumber) {
            return base.Channel.UtilizationFinalize(actNumber);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UtilizationFinalizeAsync(int actNumber) {
            return base.Channel.UtilizationFinalizeAsync(actNumber);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UtilizationCreate(int actNumber) {
            return base.Channel.UtilizationCreate(actNumber);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UtilizationCreateAsync(int actNumber) {
            return base.Channel.UtilizationCreateAsync(actNumber);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDecommission GetDecommissionList(System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetDecommissionList(dateBegin, dateEnd);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDecommission> GetDecommissionListAsync(System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetDecommissionListAsync(dateBegin, dateEnd);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDecommissionDetail GetDecommissionDetailsList(int recycledDocumentId, System.Nullable<int> recyclingType) {
            return base.Channel.GetDecommissionDetailsList(recycledDocumentId, recyclingType);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDecommissionDetail> GetDecommissionDetailsListAsync(int recycledDocumentId, System.Nullable<int> recyclingType) {
            return base.Channel.GetDecommissionDetailsListAsync(recycledDocumentId, recyclingType);
        }
        
        public EmExServiceClient.ContragentService.OperationResult RollbackDetailDecommission(int recycledDocumentId) {
            return base.Channel.RollbackDetailDecommission(recycledDocumentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> RollbackDetailDecommissionAsync(int recycledDocumentId) {
            return base.Channel.RollbackDetailDecommissionAsync(recycledDocumentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult SendDetailsToUtilization(int recycledDocumentId, long[] detailIdList) {
            return base.Channel.SendDetailsToUtilization(recycledDocumentId, detailIdList);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SendDetailsToUtilizationAsync(int recycledDocumentId, long[] detailIdList) {
            return base.Channel.SendDetailsToUtilizationAsync(recycledDocumentId, detailIdList);
        }
        
        public EmExServiceClient.ContragentService.OperationResult SetDecommissionType(int[] decommissionList, int type) {
            return base.Channel.SetDecommissionType(decommissionList, type);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> SetDecommissionTypeAsync(int[] decommissionList, int type) {
            return base.Channel.SetDecommissionTypeAsync(decommissionList, type);
        }
        
        public EmExServiceClient.ContragentService.OperationResultint CreateUtilizationDocuments(int[] decommissionList) {
            return base.Channel.CreateUtilizationDocuments(decommissionList);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultint> CreateUtilizationDocumentsAsync(int[] decommissionList) {
            return base.Channel.CreateUtilizationDocumentsAsync(decommissionList);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard GetAccountCards(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo) {
            return base.Channel.GetAccountCards(dateBegin, dateEnd, customerLogo);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard> GetAccountCardsAsync(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo) {
            return base.Channel.GetAccountCardsAsync(dateBegin, dateEnd, customerLogo);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard2 GetAccountCards2(string customerLogo, System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetAccountCards2(customerLogo, dateBegin, dateEnd);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard2> GetAccountCards2Async(string customerLogo, System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetAccountCards2Async(customerLogo, dateBegin, dateEnd);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard3 GetAccountCards3(string customerLogo, System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetAccountCards3(customerLogo, dateBegin, dateEnd);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfAccountCard3> GetAccountCards3Async(string customerLogo, System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetAccountCards3Async(customerLogo, dateBegin, dateEnd);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDiadocDocumentStatus GetDiadocDocumentStatuses() {
            return base.Channel.GetDiadocDocumentStatuses();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDiadocDocumentStatus> GetDiadocDocumentStatusesAsync() {
            return base.Channel.GetDiadocDocumentStatusesAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfDocumentReturnCard GetDocumentReturnCards(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo, System.Nullable<bool> taken) {
            return base.Channel.GetDocumentReturnCards(dateBegin, dateEnd, customerLogo, taken);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfDocumentReturnCard> GetDocumentReturnCardsAsync(System.DateTime dateBegin, System.DateTime dateEnd, string customerLogo, System.Nullable<bool> taken) {
            return base.Channel.GetDocumentReturnCardsAsync(dateBegin, dateEnd, customerLogo, taken);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfAccountDetailViewItem GetAccountDetails(long accountId) {
            return base.Channel.GetAccountDetails(accountId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfAccountDetailViewItem> GetAccountDetailsAsync(long accountId) {
            return base.Channel.GetAccountDetailsAsync(accountId);
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfCustomer GetCustomers(bool isIncludeClosed) {
            return base.Channel.GetCustomers(isIncludeClosed);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomer> GetCustomersAsync(bool isIncludeClosed) {
            return base.Channel.GetCustomersAsync(isIncludeClosed);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfCustomerSearchResultItem SearchCustomersByContext(string context, bool isIncludeClosed) {
            return base.Channel.SearchCustomersByContext(context, isIncludeClosed);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerSearchResultItem> SearchCustomersByContextAsync(string context, bool isIncludeClosed) {
            return base.Channel.SearchCustomersByContextAsync(context, isIncludeClosed);
        }
        
        public EmExServiceClient.ContragentService.OperationResultCustomer GetCustomerByContragentId(long contragentId) {
            return base.Channel.GetCustomerByContragentId(contragentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomer> GetCustomerByContragentIdAsync(long contragentId) {
            return base.Channel.GetCustomerByContragentIdAsync(contragentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfCustomer.CustomerGroup GetCustomerGroups() {
            return base.Channel.GetCustomerGroups();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomer.CustomerGroup> GetCustomerGroupsAsync() {
            return base.Channel.GetCustomerGroupsAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity GetCustomerIdentities() {
            return base.Channel.GetCustomerIdentities();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity> GetCustomerIdentitiesAsync() {
            return base.Channel.GetCustomerIdentitiesAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity GetCustomerIdentitiesBuhContragent(bool isIncludeClosed) {
            return base.Channel.GetCustomerIdentitiesBuhContragent(isIncludeClosed);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerIdentity> GetCustomerIdentitiesBuhContragentAsync(bool isIncludeClosed) {
            return base.Channel.GetCustomerIdentitiesBuhContragentAsync(isIncludeClosed);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfContragentDocumentSetting GetCustomerDocumentSettings(long customerId) {
            return base.Channel.GetCustomerDocumentSettings(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfContragentDocumentSetting> GetCustomerDocumentSettingsAsync(long customerId) {
            return base.Channel.GetCustomerDocumentSettingsAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerGroup(long contragentId) {
            return base.Channel.BeginUpdateCustomerGroup(contragentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerGroupAsync(long contragentId) {
            return base.Channel.BeginUpdateCustomerGroupAsync(contragentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerGroup(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, long customerGroupId, string comment) {
            return base.Channel.UpdateCustomerGroup(actionLock, contragentId, customerGroupId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerGroupAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, long customerGroupId, string comment) {
            return base.Channel.UpdateCustomerGroupAsync(actionLock, contragentId, customerGroupId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerGroup(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerGroup(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerGroupAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerGroupAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerPartnerType(long contragentId) {
            return base.Channel.BeginUpdateCustomerPartnerType(contragentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerPartnerTypeAsync(long contragentId) {
            return base.Channel.BeginUpdateCustomerPartnerTypeAsync(contragentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerPartnerType(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, EmExServiceClient.ContragentService.PartnerType partnerType, string comment) {
            return base.Channel.UpdateCustomerPartnerType(actionLock, contragentId, partnerType, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerPartnerTypeAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, EmExServiceClient.ContragentService.PartnerType partnerType, string comment) {
            return base.Channel.UpdateCustomerPartnerTypeAsync(actionLock, contragentId, partnerType, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerPartnerType(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerPartnerType(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerPartnerTypeAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerPartnerTypeAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerWorkType(long contragentId) {
            return base.Channel.BeginUpdateCustomerWorkType(contragentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerWorkTypeAsync(long contragentId) {
            return base.Channel.BeginUpdateCustomerWorkTypeAsync(contragentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerWorkType(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, EmExServiceClient.ContragentService.WorkType workType, System.DateTime expireDate, string comment) {
            return base.Channel.UpdateCustomerWorkType(actionLock, contragentId, workType, expireDate, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerWorkTypeAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, EmExServiceClient.ContragentService.WorkType workType, System.DateTime expireDate, string comment) {
            return base.Channel.UpdateCustomerWorkTypeAsync(actionLock, contragentId, workType, expireDate, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerWorkType(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerWorkType(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerWorkTypeAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerWorkTypeAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResult BlockCustomerWork(long customerId, string comment) {
            return base.Channel.BlockCustomerWork(customerId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> BlockCustomerWorkAsync(long customerId, string comment) {
            return base.Channel.BlockCustomerWorkAsync(customerId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UnblockCustomerWork(long customerId, string comment) {
            return base.Channel.UnblockCustomerWork(customerId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UnblockCustomerWorkAsync(long customerId, string comment) {
            return base.Channel.UnblockCustomerWorkAsync(customerId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResultCustomerDelivery GetCustomerDelivery(long customerId) {
            return base.Channel.GetCustomerDelivery(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerDelivery> GetCustomerDeliveryAsync(long customerId) {
            return base.Channel.GetCustomerDeliveryAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerDelivery(EmExServiceClient.ContragentService.CustomerDelivery customerDelivery) {
            return base.Channel.UpdateCustomerDelivery(customerDelivery);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerDeliveryAsync(EmExServiceClient.ContragentService.CustomerDelivery customerDelivery) {
            return base.Channel.UpdateCustomerDeliveryAsync(customerDelivery);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity GetTransportersList() {
            return base.Channel.GetTransportersList();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity> GetTransportersListAsync() {
            return base.Channel.GetTransportersListAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity GetTransportCompaniesList() {
            return base.Channel.GetTransportCompaniesList();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfContragentIdentity> GetTransportCompaniesListAsync() {
            return base.Channel.GetTransportCompaniesListAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResult ReplaceDeliveryRegionType(long customerId, string customerLogo, string typeFrom, string typeTo) {
            return base.Channel.ReplaceDeliveryRegionType(customerId, customerLogo, typeFrom, typeTo);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> ReplaceDeliveryRegionTypeAsync(long customerId, string customerLogo, string typeFrom, string typeTo) {
            return base.Channel.ReplaceDeliveryRegionTypeAsync(customerId, customerLogo, typeFrom, typeTo);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfCustomerScheduleAttribute GetCustomerScheduleList(long customerId) {
            return base.Channel.GetCustomerScheduleList(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerScheduleAttribute> GetCustomerScheduleListAsync(long customerId) {
            return base.Channel.GetCustomerScheduleListAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultDeliveryRegionType GetPrimaryDeliveryRegionType(long customerId) {
            return base.Channel.GetPrimaryDeliveryRegionType(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultDeliveryRegionType> GetPrimaryDeliveryRegionTypeAsync(long customerId) {
            return base.Channel.GetPrimaryDeliveryRegionTypeAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultCustomerScheduleAttribute GetTransportCompanySchedule(long TransportCompanyId) {
            return base.Channel.GetTransportCompanySchedule(TransportCompanyId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerScheduleAttribute> GetTransportCompanyScheduleAsync(long TransportCompanyId) {
            return base.Channel.GetTransportCompanyScheduleAsync(TransportCompanyId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultDeliveryRegionType GetAltDeliveryRegionType(long customerId) {
            return base.Channel.GetAltDeliveryRegionType(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultDeliveryRegionType> GetAltDeliveryRegionTypeAsync(long customerId) {
            return base.Channel.GetAltDeliveryRegionTypeAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerPrimaryTransportCompany(long customerId, long newTransportCompanyId, long oldTransportCompanyId, string comment) {
            return base.Channel.UpdateCustomerPrimaryTransportCompany(customerId, newTransportCompanyId, oldTransportCompanyId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerPrimaryTransportCompanyAsync(long customerId, long newTransportCompanyId, long oldTransportCompanyId, string comment) {
            return base.Channel.UpdateCustomerPrimaryTransportCompanyAsync(customerId, newTransportCompanyId, oldTransportCompanyId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerAlternativeTransportCompany(long customerId, long newTransportCompanyId, long oldTransportCompanyId, string comment) {
            return base.Channel.UpdateCustomerAlternativeTransportCompany(customerId, newTransportCompanyId, oldTransportCompanyId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerAlternativeTransportCompanyAsync(long customerId, long newTransportCompanyId, long oldTransportCompanyId, string comment) {
            return base.Channel.UpdateCustomerAlternativeTransportCompanyAsync(customerId, newTransportCompanyId, oldTransportCompanyId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult DeleteCustomerPrimaryTransportCompany(long customerId, long transportCompanyId, string comment) {
            return base.Channel.DeleteCustomerPrimaryTransportCompany(customerId, transportCompanyId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteCustomerPrimaryTransportCompanyAsync(long customerId, long transportCompanyId, string comment) {
            return base.Channel.DeleteCustomerPrimaryTransportCompanyAsync(customerId, transportCompanyId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult DeleteCustomerAlternativeTransportCompany(long customerId, long transportCompanyId, string comment) {
            return base.Channel.DeleteCustomerAlternativeTransportCompany(customerId, transportCompanyId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteCustomerAlternativeTransportCompanyAsync(long customerId, long transportCompanyId, string comment) {
            return base.Channel.DeleteCustomerAlternativeTransportCompanyAsync(customerId, transportCompanyId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerScheduleAttribute(EmExServiceClient.ContragentService.CustomerScheduleAttribute customerScheduleAttribute) {
            return base.Channel.UpdateCustomerScheduleAttribute(customerScheduleAttribute);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerScheduleAttributeAsync(EmExServiceClient.ContragentService.CustomerScheduleAttribute customerScheduleAttribute) {
            return base.Channel.UpdateCustomerScheduleAttributeAsync(customerScheduleAttribute);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfActRecycling GetRecyclingActs(System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetRecyclingActs(dateBegin, dateEnd);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfActRecycling> GetRecyclingActsAsync(System.DateTime dateBegin, System.DateTime dateEnd) {
            return base.Channel.GetRecyclingActsAsync(dateBegin, dateEnd);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActRecycling GetRecyclingAct(int actNumber) {
            return base.Channel.GetRecyclingAct(actNumber);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActRecycling> GetRecyclingActAsync(int actNumber) {
            return base.Channel.GetRecyclingActAsync(actNumber);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfLocation GetLocationsByOptovikId(long optovikId) {
            return base.Channel.GetLocationsByOptovikId(optovikId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfLocation> GetLocationsByOptovikIdAsync(long optovikId) {
            return base.Channel.GetLocationsByOptovikIdAsync(optovikId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfRegion GetRegions() {
            return base.Channel.GetRegions();
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfRegion> GetRegionsAsync() {
            return base.Channel.GetRegionsAsync();
        }
        
        public EmExServiceClient.ContragentService.OperationResultint InsertLocation(EmExServiceClient.ContragentService.Location l) {
            return base.Channel.InsertLocation(l);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultint> InsertLocationAsync(EmExServiceClient.ContragentService.Location l) {
            return base.Channel.InsertLocationAsync(l);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateLocation(long locationId) {
            return base.Channel.BeginUpdateLocation(locationId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateLocationAsync(long locationId) {
            return base.Channel.BeginUpdateLocationAsync(locationId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateLocation(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Location location, string comment) {
            return base.Channel.UpdateLocation(actionLock, location, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateLocationAsync(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Location location, string comment) {
            return base.Channel.UpdateLocationAsync(actionLock, location, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateLocation(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateLocation(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateLocationAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateLocationAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateLocationBitPublish(long locationId, bool bitPublish) {
            return base.Channel.UpdateLocationBitPublish(locationId, bitPublish);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateLocationBitPublishAsync(long locationId, bool bitPublish) {
            return base.Channel.UpdateLocationBitPublishAsync(locationId, bitPublish);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateLocationRegion(long locationId) {
            return base.Channel.BeginUpdateLocationRegion(locationId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateLocationRegionAsync(long locationId) {
            return base.Channel.BeginUpdateLocationRegionAsync(locationId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateLocationRegion(EmExServiceClient.ContragentService.ActionLock actionLock, long locationId, string region, string comment) {
            return base.Channel.UpdateLocationRegion(actionLock, locationId, region, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateLocationRegionAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long locationId, string region, string comment) {
            return base.Channel.UpdateLocationRegionAsync(actionLock, locationId, region, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateLocationRegion(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateLocationRegion(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateLocationRegionAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateLocationRegionAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResult DeleteLocation(long locationId) {
            return base.Channel.DeleteLocation(locationId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> DeleteLocationAsync(long locationId) {
            return base.Channel.DeleteLocationAsync(locationId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultArrayOfCustomerDiscountHistoryItem GetCustomerDiscountHistory(long contragentId) {
            return base.Channel.GetCustomerDiscountHistory(contragentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultArrayOfCustomerDiscountHistoryItem> GetCustomerDiscountHistoryAsync(long contragentId) {
            return base.Channel.GetCustomerDiscountHistoryAsync(contragentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerDiscount(long contragentId) {
            return base.Channel.BeginUpdateCustomerDiscount(contragentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerDiscountAsync(long contragentId) {
            return base.Channel.BeginUpdateCustomerDiscountAsync(contragentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerDiscount(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Customer customer, System.DateTime expireStartDate, System.DateTime expireEndDate, string comment) {
            return base.Channel.UpdateCustomerDiscount(actionLock, customer, expireStartDate, expireEndDate, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerDiscountAsync(EmExServiceClient.ContragentService.ActionLock actionLock, EmExServiceClient.ContragentService.Customer customer, System.DateTime expireStartDate, System.DateTime expireEndDate, string comment) {
            return base.Channel.UpdateCustomerDiscountAsync(actionLock, customer, expireStartDate, expireEndDate, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdateCustomerDiscount(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerDiscount(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdateCustomerDiscountAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdateCustomerDiscountAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResultCustomerBalance GetLastCustomerBalanceCalculation(long customerId) {
            return base.Channel.GetLastCustomerBalanceCalculation(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerBalance> GetLastCustomerBalanceCalculationAsync(long customerId) {
            return base.Channel.GetLastCustomerBalanceCalculationAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultCustomerBalance CalculateCustomerBalance(long customerId) {
            return base.Channel.CalculateCustomerBalance(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerBalance> CalculateCustomerBalanceAsync(long customerId) {
            return base.Channel.CalculateCustomerBalanceAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultCustomerIdentity GetPreviousCustomer(long customerId) {
            return base.Channel.GetPreviousCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultCustomerIdentity> GetPreviousCustomerAsync(long customerId) {
            return base.Channel.GetPreviousCustomerAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdatePreviousCustomerId(long customerId) {
            return base.Channel.BeginUpdatePreviousCustomerId(customerId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdatePreviousCustomerIdAsync(long customerId) {
            return base.Channel.BeginUpdatePreviousCustomerIdAsync(customerId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdatePreviousCustomerId(EmExServiceClient.ContragentService.ActionLock actionLock, long customerId, System.Nullable<long> prevCustomerId, string comment) {
            return base.Channel.UpdatePreviousCustomerId(actionLock, customerId, prevCustomerId, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdatePreviousCustomerIdAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long customerId, System.Nullable<long> prevCustomerId, string comment) {
            return base.Channel.UpdatePreviousCustomerIdAsync(actionLock, customerId, prevCustomerId, comment);
        }
        
        public EmExServiceClient.ContragentService.OperationResult CancelUpdatePreviousCustomerId(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdatePreviousCustomerId(actionLock);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> CancelUpdatePreviousCustomerIdAsync(EmExServiceClient.ContragentService.ActionLock actionLock) {
            return base.Channel.CancelUpdatePreviousCustomerIdAsync(actionLock);
        }
        
        public EmExServiceClient.ContragentService.OperationResultActionLock BeginUpdateCustomerQuantityHoursOfFreeStorage(long contragentId) {
            return base.Channel.BeginUpdateCustomerQuantityHoursOfFreeStorage(contragentId);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResultActionLock> BeginUpdateCustomerQuantityHoursOfFreeStorageAsync(long contragentId) {
            return base.Channel.BeginUpdateCustomerQuantityHoursOfFreeStorageAsync(contragentId);
        }
        
        public EmExServiceClient.ContragentService.OperationResult UpdateCustomerQuantityHoursOfFreeStorage(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, int quantityHours, string comment) {
            return base.Channel.UpdateCustomerQuantityHoursOfFreeStorage(actionLock, contragentId, quantityHours, comment);
        }
        
        public System.Threading.Tasks.Task<EmExServiceClient.ContragentService.OperationResult> UpdateCustomerQuantityHoursOfFreeStorageAsync(EmExServiceClient.ContragentService.ActionLock actionLock, long contragentId, int quantityHours, string comment) {
            return base.Channel.UpdateCustomerQuantityHoursOfFreeStorageAsync(actionLock, contragentId, quantityHours, comment);
        }
    }
}
